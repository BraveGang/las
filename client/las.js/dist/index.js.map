{"version":3,"sources":["webpack://Las/webpack/universalModuleDefinition","webpack://Las/webpack/bootstrap","webpack://Las/./node_modules/events/events.js","webpack://Las/./node_modules/querystringify/index.js","webpack://Las/./node_modules/requires-port/index.js","webpack://Las/./node_modules/url-parse/index.js","webpack://Las/(webpack)/buildin/global.js","webpack://Las/./node_modules/webworkify-webpack/index.js","webpack://Las/./src/core/errors.ts","webpack://Las/./src/core/events.ts","webpack://Las/./src/core/observer.ts","webpack://Las/./src/polyfills/number-isFinite.js","webpack://Las/./src/remux/aac-helper.ts","webpack://Las/./src/types/remux.ts","webpack://Las/./src/remux/mp4-generator.ts","webpack://Las/./src/remux/mp4-remuxer.ts","webpack://Las/./src/demux/get-audio-config.ts","webpack://Las/./src/demux/asc.ts","webpack://Las/./src/demux/exp-golomb.ts","webpack://Las/./src/demux/sps-parser.ts","webpack://Las/./src/utils/decodeUTF8.ts","webpack://Las/./src/demux/flv/amf.ts","webpack://Las/./src/demux/flv/avc-helper.ts","webpack://Las/./src/demux/flv/flv-demuxer.ts","webpack://Las/./src/demux/flv/flv-demuxer-inline.ts","webpack://Las/./src/demux/flv/flv-demuxer-worker.ts","webpack://Las/./src/demux/flv/flv.ts","webpack://Las/./src/config.ts","webpack://Las/./src/core/media.ts","webpack://Las/./src/utils/mediasource-helper.ts","webpack://Las/./src/core/mse-controller.ts","webpack://Las/./src/abr/abr-get-url.ts","webpack://Las/./src/abr/abr-level.ts","webpack://Las/./src/abr/abr-manifest.ts","webpack://Las/./src/utils/matrix.ts","webpack://Las/./src/abr/abr-algorithm.ts","webpack://Las/./src/abr/multirate.ts","webpack://Las/./src/io/cache.ts","webpack://Las/./src/demux/flv/flv-tag-dump.ts","webpack://Las/./src/io/fetch.ts","webpack://Las/./src/io/xhr.ts","webpack://Las/./src/io/loader.ts","webpack://Las/./src/core/report-types.ts","webpack://Las/./src/core/trans-flv.ts","webpack://Las/./src/utils/get-error-code.ts","webpack://Las/./src/utils/is-supported.ts","webpack://Las/./src/types/monitor-data.ts","webpack://Las/./src/monitor/fps.ts","webpack://Las/./src/monitor/stream-monitor.ts","webpack://Las/./src/monitor/monitor.ts","webpack://Las/./src/index.ts","webpack://Las/./src/polyfills/object-assign.js","webpack://Las/./src/utils/browser.ts","webpack://Las/./src/utils/log.ts"],"names":["ErrorTypes","ErrorDetails","LasEvents","MEDIA_INFO","PARSING_INIT_SEGMENT","PARSING_DATA","PARSED_DATA","SCRIPT_PARSED","LOAD_END","DISCONTINUITY","ERROR","LEVEL_SWITCH_FAILED","LEVEL_SWITCHING","LEVEL_SWITCHED","MANIFEST_PARSED","BUFFER_FLUSHING","INIT_PTS_FOUND","FLV_HEAD","REPORT","HEARTBEAT","Observer","trigger","event","args","emit","EventEmitter","isFiniteNumber","Number","isFinite","value","AAC","getSilentFrame","codec","channelCount","Uint8Array","TrackType","RemuxerTrackIdConfig","UINT32_MAX","Math","pow","MP4","init","types","i","hasOwnProperty","charCodeAt","videoHdlr","audioHdlr","HDLR_TYPES","video","audio","dref","stco","STTS","STSC","STCO","STSZ","VMHD","SMHD","STSD","majorBrand","avc1Brand","hev1Brand","minorVersion","FTYP_AVC","box","ftyp","FTYP_HEVC","DINF","dinf","type","payload","size","length","len","result","byteLength","set","hdlr","mdat","data","mdhd","timescale","duration","upperWordDuration","floor","lowerWordDuration","mdia","track","minf","mfhd","sequenceNumber","smhd","stbl","vmhd","moof","sn","baseMediaDecodeTime","traf","moov","tracks","boxes","trak","mvhd","concat","mvex","trex","bytes","sdtp","samples","flags","dependsOn","isDependedOn","hasRedundancy","stsd","stts","stsc","stsz","avc1","sps","pps","push","Array","prototype","slice","call","avcc","avcC","width","height","hSpacing","pixelRatio","vSpacing","btrt","pasp","hev1","hvcc","codecWidth","codecHeight","hvcC","esds","configlen","config","mp4a","samplerate","mp3","isAAC","indexOf","tkhd","id","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","tfhd","tfdt","trun","offset","arraylen","array","sample","cts","isLeading","paddingValue","isNonSync","degradPrio","initSegment","movie","MAX_SILENT_FRAME_DURATION","MP4Remuxer","observer","typeSupported","vendor","_observer","_config","_typeSupported","_isSafari","_forceFirstIDR","_stash","_stashInfo","_stashLastVideoSample","_ISGenerated","_videoTime","_extra","_nextAudioPts","_nextAvcDts","_initPTS","_initDTS","_initSegment","userAgent","navigator","match","gopRemux","_resetVideoTime","Browser","chrome","version","major","build","setStat","stat","ISGenerated","nextAudioPts","nextAvcDts","initPTS","initDTS","nbSamples","videoTime","firstDTS","sampleDuration","vLastPTS","aLastPTS","endDts","getStat","destroy","setExtra","resetTimeStamp","defaultTimeStamp","resetInitSegment","resetStash","getLastPTS","flush","audioTrackLength","videoData","info","remuxVideo","timeOffset","accurateTimeOffset","remux","audioTrack","videoTrack","contiguous","isFlush","generateIS","pts","dts","nbVideoStashSamples","nbAudioSamples","nbVideoSamples","audioTimeOffset","videoTimeOffset","unshift","audiovideoDeltaDts","inputTimeScale","max","Log","w","audioData","remuxAudio","endPTS","startPTS","startDTS","endDTS","remuxEmptyAudio","audioSamples","videoSamples","computePTSDTS","container","Infinity","v","mpeg","metadata","audioSampleRate","fps","profile","level","chromaFormat","min","Object","keys","MUX_ERROR","details","PARSING_ERROR","fatal","reason","timeScale","inputSamples","outputSamples","ptsNormalize","_PTSNormalize","streamDTS","key","time","mp4SampleDuration","firstPTS","lastPTS","lastDTS","isSafari","abs","forEach","sort","a","b","deltadts","deltapts","PTSDTSshift","reduce","prev","curr","round","pop","delta","nbNalu","naluLen","units","nbUnits","sampleLen","j","mdatSize","err","REMUX_ALLOC_ERROR","view","DataView","buffer","setUint32","avcSample","avcSampleUnits","mp4SampleLength","compositionTimeOffset","unit","unitData","unitDataLen","lastFrameDuration","refSampleDuration","stretchShortVideoTrack","maxBufferHole","gapTolerance","deltaToFrameEnd","isNaN","fix","dropped","_mergeBoxes","hasAudio","hasVideo","nb","extra","mp4timeScale","scaleFactor","inputSampleDuration","rawMPEG","mp4Sample","fillFrame","resetPts","filter","maxAudioFramesDrift","nextPts","toFixed","splice","missing","newStamp","manifestCodec","subarray","audioSample","numMissingFrames","unitLen","lastSampleDuration","start","end","frameDuration","ceil","silentFrame","d","stamp","reference","arr","cur","index","getAudioConfig","audioCodec","extensionSampleingIndex","objectType","sampleingIndex","chanelConfig","toLowerCase","sampleingRates","test","parseData","initTrackConfig","getFrameDuration","ExpGolomb","uint8array","_buffer","_buffer_index","_total_bytes","_total_bits","_current_word","_current_word_bits_left","_fillCurrentWord","buffer_bytes_left","Error","bytes_read","word","getUint32","readBits","bits","bits_need_left","bits_read_next","result2","readBool","readUByte","readUShort","readUInt","readByte","_skipLeadingZero","zero_count","readUEG","leading_zeros","readSEG","readSliceType","getBitsLeft","HEVC_MAX_SPS_COUNT","HEVC_MAIN","HEVC_LEVELS","SPSParser","_ebsp2rbsp","src","src_length","dst","dst_idx","parseHEVCSPS","rbsp","gb","ptl","general_ptl","sub_layer_ptl","max_sub_layers","_parsePTL","sps_id","chroma_format_idc","separate_colour_plane_flag","chroma_format_string","profile_string","level_string","max_num_sub_layers","_decodeProfileTierLevel","level_idc","getHEVCLevelString","sub_layer_profile_present_flag","sub_layer_level_present_flag","profile_space","tier_flag","profile_idc","profile_compatibility_flag","progressive_source_flag","interlaced_source_flag","non_packed_constraint_flag","frame_only_constraint_flag","getHEVCProfileString","parseSPS","getProfileString","getLevelString","chroma_format","chroma_format_table","bit_depth","scaling_list_count","_skipScalingList","pic_order_cnt_type","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","frame_cropping_flag","sar_width","sar_height","fps_fixed","fps_num","fps_den","vui_parameters_present_flag","aspect_ratio_idc","sar_w_table","sar_h_table","num_units_in_tick","time_scale","sarScale","crop_unit_x","crop_unit_y","sub_wc","sub_hc","codec_width","codec_height","present_width","getChromaFormatString","frame_rate","fixed","sar_ratio","codec_size","present_size","count","last_scale","next_scale","delta_scale","chroma","decodeUTF8","out","input","String","fromCharCode","checkContinuation","ucs4","join","checkLength","tag","AMF","parseMetadata","name","parseScript","e","toString","parseObject","arrayBuffer","dataOffset","parseString","isObjectEnd","objectEnd","parseVariable","parseLongString","str","parseDate","timestamp","getFloat64","localTimeOffset","getInt16","Date","getUint16","dataSize","dv","getUint8","amfstr","terminal","amfobj","marker","amfvar","undefined","strictArrayLength","val","date","amfLongStr","configBody","frameI","AVC","getFlvVideoTag","FlvTag","tagType","FlvTagType","VIDEO","body","frameType","codecId","fill","DISCONTINUITY_ON_NON_MONOTONOUS","FlvDemux","remuxer","_remuxer","_duration","_naluLengthSize","_hasVideo","_hasAudio","_videoTrack","_audioTrack","_remuxStat","_currentTimestamp","_aLastDTS","_vLastDTS","_nonMonotonousCache","_fillAtStart","enabled","avcConfig","pid","append","tags","_fillFrame","_parseVideoData","AUDIO","_parseAudioData","SCRIPT","_parseScriptTag","st","ed","_remux","flvHead","scriptData","onMetaData","framerate","spec","packetType","_parseAVCDecoderConfigurationRecord","_parseAVCVideoData","avcProfile","spsCount","spsList","codecArray","codecString","h","ppsCount","ignoreNonMonotonous","lengthSize","keyframe","_onNonMonotonous","_flushNonMonotonousCache","naluSize","unitType","aacFrameLen","ASC","aacData","dtsDiff","sampleDts","aacSample","cache","lastPts","ptsSync","nonMonotonousCache","shift","audiotrack","videotrack","error","REMUX_ERROR","message","sec","FlvDemuxerInline","extraData","_extraData","_demuxer","_bitrate","_vendor","bitrate","Mp4Remuxer","mp4","demuxer","FlvDemuxer","discontinuity","self","flv","forwardMessage","ev","postMessage","on","removeAllListeners","addEventListener","cmd","debug","FlvSize","FLV_HEAD_LEN","FLV_TAG_HEAD_LEN","FLV_TAG_SIZE_LEN","AVC_KEY_FRAME_CHECK_LEN","CLEANUP_DURATION_STEP","URL_REG","RegExp","DEFAULT_CONFIG","webWorker","autoCleanupMaxBackwardDuration","autoCleanupMinBackwardDuration","appendErrorMaxRetry","credentials","defaultSpts","LOG_LEVEL","LEVEL_ERROR","connectionTimeout","transmissionTimeout","ConfigHelper","processConfig","userConfig","setSrc","window","Worker","detectStreamingMux","safari","opera","manifest","JSON","parse","Media","_video","_mse","_streamTime","_localTime","reset","attachVideo","attachMSE","mse","isTimeinBuffered","buffered","bufferedSec","currentTime","bufferedSecByType","bufferedEndByType","mseBufferedSecByType","bufferedByType","bufferSliceNumByType","pendingNum","pendingSecByType","currentBuffer","nextBuffer","updateStreamTime","streamTime","localTime","getLocalTime","readyState","getMediaSource","MediaSource","WebKitMediaSource","QUEUE_SIZE_LIMIT","MIN_CLEANUP_DURATION","MAX_BUFFERED","MSEController","_sourceBuffer","_mediaSource","_mimeCodec","_cleanUpTask","_appendQueue","_endOfData","_appendEnabled","_appendError","_appendBufferError","_sbHandler","_souceBufferLocked","_onSourceOpen","removeEventListener","_checkSourceBuffer","refresh","_onSourceEnded","_onSourceClose","_onSourceBufferUpdateEnd","_update","_endOfStream","_onSourceBufferError","MSE_ERROR","SOURCEBUFFER_ERROR","audiovideo","attach","MediaSourceDef","ms","URL","createObjectURL","load","setTimeout","MEDIASOURCE_ERROR","trackInfo","mediaInfo","hasSourceBuffer","updateend","videoCodec","expected","codecs","_addSourceBuffer","addSourceBuffer","ADDSOURCEBUFFER_ERROR","sb","_hasPendingData","_doAppend","_getBufferQueueSize","APPENDBUFFER_ERROR","updating","_appendBuffer","mediaSegment","segment","queue","current","num","_calculateRemoveRange","seeking","task","_cleanUpRange","range","bufStart","firefox","bufEnd","removeStart","removeEnd","remove","appendBuffer","code","conf","useless","hasCleanUpTask","_cleanUp","startSec","endSec","flushType","POSITIVE_INFINITY","setAppendEnabled","getAppendEnabled","endOfData","ended","endOfStream","ENDOFSTREAM_ERROR","removeSourceBuffer","getBufferQueueSec","prevDuration","currentSeg","item","abrGetUrl","url","spts","urlparse","Url","query","lasSpts","AbrLevel","maxBitrate","avgBitrate","qualityType","qualityLabel","hidden","enableAdaptive","defaultSelect","AbrManifest","verify","isArray","adaptationSet","representation","_levels","_abrLevels","_default","disableAdaptive","constructor","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Uint8ClampedArray","Float64Array","Float32Array","flatten","acc","next","shape","isTypedArray","ArrayBuffer","BYTES_PER_ELEMENT","Matrix","add","copy","subtract","augment","multiply","zeros","r","c","identity","options","_init","matrix","r1","c1","r2","c2","d1","d2","k","sum","x","alpha","equilateral","equidimensional","l1","Function","transpose","inverse","augmented","gauss","left","right","n","get","equals","lead","pivot","leadValue","swap","check","copyWithin","D","create","getPrototypeOf","s1","s2","every","dim","l2","CONFIG","beacon","predictStep","minBuffer","bufferOffset","smoothRatioToTarget","speedSmoothRatio","switchPenalty","slidingWindowSize","kalmanR","kalmanQ","initBitrateLevel","speedPredictNum","AbrAlgorithm","MATRIX_E","MATRIX_G","_conf","_xPrev","_PPrev","_pastBuffer","_pastThroughput","_availableList","_current","_next","_processConfig","levels","default","setAvailableBitrates","list","onGOP","speed","_nextRateIndex","_recentSpeed","onLevelLoad","_quantization","_nextRateBySpeedAndBuffered","_resetAlgorithm","_recentBuffer","_adjustedTargetBuffer","targetBuffer","_rateChangeArray","switchPenaltyArray","estimatedThroughput","Bk","br","targetBufferArray","_printFirstColumn","matrixG","predictedBufferArray","matrixE","matrixF","_diag","futureThroughput","_multistepPred","map","target","rateChangeArray","stringify","_printFirstRow","dist","pastThroughput","pastThroughputClone","bandwidthSum","nonzeroCnt","_multistepKalmanfilter","xLast","z","PLast","R","Q","xPrev","PPrev","xRet","PRet","xMinus","PMinus","K","predX","P","Multirate","media","_media","_downloadSize","_downloadStartTime","_keyCount","_index","_alg","_manifest","_autoLevelEnabled","abrLevels","performance","now","nextLevel","currentLevel","destory","onLoaderChunk","onKeyFrame","_getRequestUrl","Cache","_size","_readOffset","_writeOffset","_storage","_cache","DEFAULT_CACHE_SIZE","put","chunk","_collateCache","expandCache","byteOffset","read","skip","clear","MAX_CACHE_SIZE","_transfer","remain","source","TypeError","sourceView","destView","FlvTagDump","onAbr","_tag","_result","_parseLen","_parseFunc","_onAbr","_parseFlvHead","abr","unreadLen","_parseFlvTagHead","_detectKeyFrame","_parseFlvTag","FetchLoader","_context","_callbacks","_controller","_reader","_abort","isSupport","fetch","ReadableStream","context","callbacks","reqHeaders","Headers","headers","element","header","params","method","mode","referrerPolicy","signal","_getAbortSignal","then","res","responseUrl","responseHeader","onConnect","status","ok","getReader","cancel","responseType","progress","_pump","responseData","_onEnd","text","statusText","_onError","catch","abort","_onProgress","onProgress","onEnd","onError","reader","done","AbortController","XHR_TYPE","XHR","isSupportChunk","supportChunk","UNKNOW","xhr","XMLHttpRequest","open","MOZ_CHUNK","UNSUPPORT","MS_STREAM","_xhr","_msBufferOffset","_msBufferUpper","_progress","MSStreamReader","onprogress","_msrOnProgress","bind","onload","_onLoadEnd","onerror","onreadystatechange","_onReadyStateChange","withCredentials","setRequestHeader","send","responseURL","getAllResponseHeaders","readAsArrayBuffer","response","ChunkLoader","Loader","_getInternalLoader","useFetch","msie","msedge","_loader","_loaderCallback","_stats","_retryDelay","_loading","_aborted","_requestTimeout","_transTimer","_retryTimeout","_rangeStart","_continuedTransmissionRetry","_progressTime","maxRetry","retryDelay","_onConnect","_loadInternal","_stopTimer","_abortInternal","_destroyLoader","rangeStart","trequest","retry","loaded","output","tfirst","tload","total","tsload","tstart","stats","clearTimeout","_onTimeout","rangeEnd","onAbort","_stopTransmissionTimer","_startTransmissionTimer","tmp","_callProgress","timeout","setInterval","clearInterval","REPORT_TYPES","START_LOAD_STREAM","LOADER_CHUNK_ARRIVAL","KEY_FRAME","TransFLV","_w","_flv","_loaderConf","_loaderCallbacks","_multirate","_contiguous","_remuxId","_discontinuity","_accurateTimeOffset","_baseTimeSec","_tagDump","_currentUrl","_lastDTS","_isAbr","_onKeyframe","smooth","_onMessage","remuxId","framesInfo","_onLoaderError","_onLoaderEnd","_onAbort","onMessage","_onWorkMessage","work","require","loadSource","mr","_load","OTHER_ERROR","terminate","sync","_append","timeCost","errInfo","NETWORK_ERROR","LOAD_ERROR","statusCode","_refreshRemuxId","autoLevelEnabled","ErrorCodeList","other4xx","serverError","timeoutOpen","timeoutIO","getErrorCode","detail","httpStatusCode","parseInt","isSupported","mediaSource","sourceBuffer","SourceBuffer","WebKitSourceBuffer","isTypeSupported","sourceBufferValidAPI","streaming","getNewMonitorData","decodedFPS","droppedFPS","decodedFrames","droppedFrames","loadStartTime","firstFrameTime","blockDuration","blockCount","downloadedBytes","FPS","_lastDroppedFrames","_lastDecodedFrames","_isVideoPlaybackQualityAvailable","_lastTime","_decoded","_dropped","attachMedia","HTMLVideoElement","getVideoPlaybackQuality","videoPlaybackQuality","totalVideoFrames","droppedVideoFrames","webkitDecodedFrameCount","webkitDroppedFrameCount","checkFPSInterval","decoded","currentPeriod","currentDropped","currentDecoded","parseFloat","RECORD_NUM_LIMIT","RECORD_DOWNLOAD_NUM_LIMIT","RECORD_SEGMRNT_NUM_LIMIT","StreamMonitor","_qos","traffic","streams","download","keyFrame","onStreamOpen","startPos","loadTimeCost","videoDataRate","audioDataRate","segments","onMediaInfo","loadingInfo","onDataReceive","log","onMediaSegment","qos","stream","totalLen","getInfoByTime","updateStartPos","tsEnd","ts","HEARTBEAT_INTERVAL","Monitor","_fps","_data","_playing","_sm","_hbTimer","_heartbeat","_refresh","sm","hb","totalReceive","downloadSpeed","onReport","_stopHeartbeat","onLoad","_startHeartbeat","onSegmentInit","onLoadeddata","_onFirstFrame","_waitingEnd","onCanplay","onPlaying","onWaiting","block","_waitingStart","onStopLoad","onSegment","bufferingStartMS","MAIN_TIMER_INTERVAL","BUFFER_THRESHOLD_DEFAULT","BUFFER_THRESHOLD_STEP","BUFFER_THRESHOLD_MAX","STAT","Las","__VERSION__","_trans","_stat","INIT","_seekOnCanplay","_audioCodecSwap","_error","_audioCodec","_recoverMediaErrorTime","_mainTimer","_nextLevel","_mediaInfo","_bufferThreshold","_loadStopped","_seekOnUpdateEnd","_playingLevel","_startLevel","_monitor","_onVideoPlay","_onVideoEnded","_resetMSE","revokeObjectURL","removeAttribute","_destroyMSE","_initMSE","_mainLoop","EPS","WAITING","SEEK","SELECT_BITRATE","jumpTo","_internalSeek","_checkLevelChange","_onVideoLoadeddata","_onVideoCanplay","NONE","_detectSeekOnCanplay","paused","_onVideoPlaying","_onVideoWaiting","_onVideoError","_recoverMediaError","_recoverSwapAudioCodec","MEDIA_ERROR","VIDEO_ERROR","off","removeListener","CONFIG_ERROR","UNSUPPORTED","_startMainTimer","_initMonitor","_bindVideoEvents","resume","play","_stopMonitor","_stopMainTimer","_unbindVideoEvents","_stopVideo","_initTrans","stopLoad","_destroyTrans","getMediaInfo","_unbindMediaSourceEvent","errorMessage","_verifyLevel","_transmuxerEvent","trans","manifestAudioCodec","errorCode","TransFlv","audioCodecSwap","ObjectAssign","assign","varArgs","to","arguments","nextSource","nextKey","detect","ua","exec","platform_match","matched","browser","majorVersion","platform","versionArray","split","string","minor","opr","webkit","rv","iemobile","edge","android","GLOBAL_TAG","FORCE_GLOBAL_TAG","formatter","msg","l","ENABLE_ERROR","ENABLE_WARN","ENABLE_INFO","ENABLE_DEBUG","ENABLE_VERBOSE","LEVEL_WARN","LEVEL_INFO","LEVEL_DEBUG","LEVEL_VERBOSE","console","warn","apply"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;;AC/ba;;AAEb;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrHa;;AAEb;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACrCA,8CAAa;;AAEb,eAAe,mBAAO,CAAC,4DAAe;AACtC,SAAS,mBAAO,CAAC,8DAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yDAAyD;AACzD,GAAG;AACH,sCAAsC;AACtC;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,yBAAyB;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACjcA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,cAAc;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA,0DAA0D,cAAc;AACxE;;AAEA;AACA;AACA;AACA,qCAAqC,0BAA0B,EAAE;AACjE,2CAA2C,eAAe;AAC1D;AACA;AACA;;AAEA;AACA,8DAA8D,+DAA+D;;AAE7H;AACA;;AAEA;AACA,kDAAkD,oBAAoB,WAAW;;AAEjF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,iBAAiB;AAClC,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,qBAAmB;AAC7B;;AAEA,uCAAuC,kCAAkC;;AAEzE;;AAEA,oDAAoD,sBAAsB;AAC1E;AACA;AACA;AACA;AACA;AACA,qFAAqF,sCAAsC,EAAE;AAC7H,sIAAsI,+CAA+C,yEAAyE,gBAAgB,EAAE;AAChR,GAAG;;AAEH,iHAAiH,4CAA4C,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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Las\"] = factory();\n\telse\n\t\troot[\"Las\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , whitespace = '[\\\\x09\\\\x0A\\\\x0B\\\\x0C\\\\x0D\\\\x20\\\\xA0\\\\u1680\\\\u180E\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200A\\\\u202F\\\\u205F\\\\u3000\\\\u2028\\\\u2029\\\\uFEFF]'\n  , left = new RegExp('^'+ whitespace +'+');\n\n/**\n * Trim a given string.\n *\n * @param {String} str String to trim.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(left, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  address = trimLeft(address);\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function webpackBootstrapFunc (modules) {\n/******/  // The module cache\n/******/  var installedModules = {};\n\n/******/  // The require function\n/******/  function __webpack_require__(moduleId) {\n\n/******/    // Check if module is in cache\n/******/    if(installedModules[moduleId])\n/******/      return installedModules[moduleId].exports;\n\n/******/    // Create a new module (and put it into the cache)\n/******/    var module = installedModules[moduleId] = {\n/******/      i: moduleId,\n/******/      l: false,\n/******/      exports: {}\n/******/    };\n\n/******/    // Execute the module function\n/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/    // Flag the module as loaded\n/******/    module.l = true;\n\n/******/    // Return the exports of the module\n/******/    return module.exports;\n/******/  }\n\n/******/  // expose the modules object (__webpack_modules__)\n/******/  __webpack_require__.m = modules;\n\n/******/  // expose the module cache\n/******/  __webpack_require__.c = installedModules;\n\n/******/  // identity function for calling harmony imports with the correct context\n/******/  __webpack_require__.i = function(value) { return value; };\n\n/******/  // define getter function for harmony exports\n/******/  __webpack_require__.d = function(exports, name, getter) {\n/******/    if(!__webpack_require__.o(exports, name)) {\n/******/      Object.defineProperty(exports, name, {\n/******/        configurable: false,\n/******/        enumerable: true,\n/******/        get: getter\n/******/      });\n/******/    }\n/******/  };\n\n/******/  // define __esModule on exports\n/******/  __webpack_require__.r = function(exports) {\n/******/    Object.defineProperty(exports, '__esModule', { value: true });\n/******/  };\n\n/******/  // getDefaultExport function for compatibility with non-harmony modules\n/******/  __webpack_require__.n = function(module) {\n/******/    var getter = module && module.__esModule ?\n/******/      function getDefault() { return module['default']; } :\n/******/      function getModuleExports() { return module; };\n/******/    __webpack_require__.d(getter, 'a', getter);\n/******/    return getter;\n/******/  };\n\n/******/  // Object.prototype.hasOwnProperty.call\n/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/  // __webpack_public_path__\n/******/  __webpack_require__.p = \"/\";\n\n/******/  // on error function for async loading\n/******/  __webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE)\n  return f.default || f // try to call default if defined to also support babel esmodule exports\n}\n\nvar moduleNameReqExp = '[\\\\.|\\\\-|\\\\+|\\\\w|\\/|@]+'\nvar dependencyRegExp = '\\\\(\\\\s*(\\/\\\\*.*?\\\\*\\/)?\\\\s*.*?(' + moduleNameReqExp + ').*?\\\\)' // additional chars when output.pathinfo is true\n\n// http://stackoverflow.com/a/2593661/130442\nfunction quoteRegExp (str) {\n  return (str + '').replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&')\n}\n\nfunction isNumeric(n) {\n  return !isNaN(1 * n); // 1 * n converts integers, integers as string (\"123\"), 1e3 and \"1e3\" to integers and strings to NaN\n}\n\nfunction getModuleDependencies (sources, module, queueName) {\n  var retval = {}\n  retval[queueName] = []\n\n  var fnString = module.toString()\n  var wrapperSignature = fnString.match(/^function\\s?\\w*\\(\\w+,\\s*\\w+,\\s*(\\w+)\\)/)\n  if (!wrapperSignature) return retval\n  var webpackRequireName = wrapperSignature[1]\n\n  // main bundle deps\n  var re = new RegExp('(\\\\\\\\n|\\\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')\n  var match\n  while ((match = re.exec(fnString))) {\n    if (match[3] === 'dll-reference') continue\n    retval[queueName].push(match[3])\n  }\n\n  // dll deps\n  re = new RegExp('\\\\(' + quoteRegExp(webpackRequireName) + '\\\\(\"(dll-reference\\\\s(' + moduleNameReqExp + '))\"\\\\)\\\\)' + dependencyRegExp, 'g')\n  while ((match = re.exec(fnString))) {\n    if (!sources[match[2]]) {\n      retval[queueName].push(match[1])\n      sources[match[2]] = __webpack_require__(match[1]).m\n    }\n    retval[match[2]] = retval[match[2]] || []\n    retval[match[2]].push(match[4])\n  }\n\n  // convert 1e3 back to 1000 - this can be important after uglify-js converted 1000 to 1e3\n  var keys = Object.keys(retval);\n  for (var i = 0; i < keys.length; i++) {\n    for (var j = 0; j < retval[keys[i]].length; j++) {\n      if (isNumeric(retval[keys[i]][j])) {\n        retval[keys[i]][j] = 1 * retval[keys[i]][j];\n      }\n    }\n  }\n\n  return retval\n}\n\nfunction hasValuesInQueues (queues) {\n  var keys = Object.keys(queues)\n  return keys.reduce(function (hasValues, key) {\n    return hasValues || queues[key].length > 0\n  }, false)\n}\n\nfunction getRequiredModules (sources, moduleId) {\n  var modulesQueue = {\n    main: [moduleId]\n  }\n  var requiredModules = {\n    main: []\n  }\n  var seenModules = {\n    main: {}\n  }\n\n  while (hasValuesInQueues(modulesQueue)) {\n    var queues = Object.keys(modulesQueue)\n    for (var i = 0; i < queues.length; i++) {\n      var queueName = queues[i]\n      var queue = modulesQueue[queueName]\n      var moduleToCheck = queue.pop()\n      seenModules[queueName] = seenModules[queueName] || {}\n      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue\n      seenModules[queueName][moduleToCheck] = true\n      requiredModules[queueName] = requiredModules[queueName] || []\n      requiredModules[queueName].push(moduleToCheck)\n      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName)\n      var newModulesKeys = Object.keys(newModules)\n      for (var j = 0; j < newModulesKeys.length; j++) {\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []\n        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])\n      }\n    }\n  }\n\n  return requiredModules\n}\n\nmodule.exports = function (moduleId, options) {\n  options = options || {}\n  var sources = {\n    main: __webpack_modules__\n  }\n\n  var requiredModules = options.all ? { main: Object.keys(sources.main) } : getRequiredModules(sources, moduleId)\n\n  var src = ''\n\n  Object.keys(requiredModules).filter(function (m) { return m !== 'main' }).forEach(function (module) {\n    var entryModule = 0\n    while (requiredModules[module][entryModule]) {\n      entryModule++\n    }\n    requiredModules[module].push(entryModule)\n    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'\n    src = src + 'var ' + module + ' = (' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(entryModule)) + ')({' + requiredModules[module].map(function (id) { return '' + JSON.stringify(id) + ': ' + sources[module][id].toString() }).join(',') + '});\\n'\n  })\n\n  src = src + 'new ((' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(moduleId)) + ')({' + requiredModules.main.map(function (id) { return '' + JSON.stringify(id) + ': ' + sources.main[id].toString() }).join(',') + '}))(self);'\n\n  var blob = new window.Blob([src], { type: 'text/javascript' })\n  if (options.bare) { return blob }\n\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL\n\n  var workerUrl = URL.createObjectURL(blob)\n  var worker = new window.Worker(workerUrl)\n  worker.objectURL = workerUrl\n\n  return worker\n}\n","export enum ErrorTypes {\n    // 网络错误\n    NETWORK_ERROR = 'networkError',\n    // video错误\n    MEDIA_ERROR = 'mediaError',\n    // 转封装错误\n    MUX_ERROR = 'muxError',\n    // 其他错误\n    OTHER_ERROR = 'otherError',\n    // MSE错误\n    MSE_ERROR = 'mseError'\n};\n\nexport enum ErrorDetails {\n    // NETWORK_ERROR < 100\n    LOAD_ERROR = 10,\n\n    VIDEO_ERROR = 101,\n    UNSUPPORTED = 102,\n    CONFIG_ERROR = 103,\n    MEDIASOURCE_ERROR = 200, // mediaSourceError 初始化MSE错误，MediaSource未定义时触发\n    ADDSOURCEBUFFER_ERROR = 201, // addSourceBufferError MSE增加SourceBuffer失败\n    SOURCEBUFFER_ERROR = 202, // sourceBufferError MSE的SourceBuffer触发错误\n    ENDOFSTREAM_ERROR = 203, // endOfStreamError MSE结束流错误\n    APPENDBUFFER_ERROR = 204, // appendBufferError MSE填充buffer错误\n    PARSING_ERROR = 301, // 解封装错误\n    REMUX_ERROR = 302, // 重新封装错误\n    REMUX_ALLOC_ERROR = 303, // 重新封装alloc mdat存储错误\n};\n","const LasEvents = {\n    MEDIA_INFO: 'mediaInfo',\n    PARSING_INIT_SEGMENT: 'parsingInitSegment',\n    PARSING_DATA: 'parsingData',\n    PARSED_DATA: 'parsedData',\n    SCRIPT_PARSED: 'scriptParsed',\n    LOAD_END: 'loadEnd',\n    DISCONTINUITY: 'discontinuity',\n    ERROR: 'lasError',\n    LEVEL_SWITCH_FAILED: 'levelSwitchFailed',\n    LEVEL_SWITCHING: 'levelSwitching',\n    LEVEL_SWITCHED: 'levelSwitched',\n    MANIFEST_PARSED: 'manifestParsed',\n    BUFFER_FLUSHING: 'bufferFlushing',\n    INIT_PTS_FOUND: 'initPTSFound',\n    FLV_HEAD: 'flvHead',\n    REPORT: 'report',\n    HEARTBEAT: 'heartbeat',\n};\n\nexport default LasEvents;\n","import { EventEmitter } from 'events';\n\nclass Observer extends EventEmitter {\n    trigger(event: string | symbol, ...args: any[]): boolean {\n        return super.emit(event, event, ...args);\n    };\n}\n\nexport default Observer;\n","export const isFiniteNumber\n    = Number.isFinite\n    || function (value) {\n        return typeof value === 'number' && isFinite(value);\n    };\n","/**\n *  AAC helper\n */\n\nclass AAC {\n    static getSilentFrame(codec: string, channelCount: number): Uint8Array | null {\n        switch (codec) {\n            case 'mp4a.40.2':\n                if (channelCount === 1) {\n                    return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n                } else if (channelCount === 2) {\n                    return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n                } else if (channelCount === 3) {\n                    return new Uint8Array([\n                        0x00,\n                        0xc8,\n                        0x00,\n                        0x80,\n                        0x20,\n                        0x84,\n                        0x01,\n                        0x26,\n                        0x40,\n                        0x08,\n                        0x64,\n                        0x00,\n                        0x8e\n                    ]);\n                } else if (channelCount === 4) {\n                    return new Uint8Array([\n                        0x00,\n                        0xc8,\n                        0x00,\n                        0x80,\n                        0x20,\n                        0x84,\n                        0x01,\n                        0x26,\n                        0x40,\n                        0x08,\n                        0x64,\n                        0x00,\n                        0x80,\n                        0x2c,\n                        0x80,\n                        0x08,\n                        0x02,\n                        0x38\n                    ]);\n                } else if (channelCount === 5) {\n                    return new Uint8Array([\n                        0x00,\n                        0xc8,\n                        0x00,\n                        0x80,\n                        0x20,\n                        0x84,\n                        0x01,\n                        0x26,\n                        0x40,\n                        0x08,\n                        0x64,\n                        0x00,\n                        0x82,\n                        0x30,\n                        0x04,\n                        0x99,\n                        0x00,\n                        0x21,\n                        0x90,\n                        0x02,\n                        0x38\n                    ]);\n                } else if (channelCount === 6) {\n                    return new Uint8Array([\n                        0x00,\n                        0xc8,\n                        0x00,\n                        0x80,\n                        0x20,\n                        0x84,\n                        0x01,\n                        0x26,\n                        0x40,\n                        0x08,\n                        0x64,\n                        0x00,\n                        0x82,\n                        0x30,\n                        0x04,\n                        0x99,\n                        0x00,\n                        0x21,\n                        0x90,\n                        0x02,\n                        0x00,\n                        0xb2,\n                        0x00,\n                        0x20,\n                        0x08,\n                        0xe0\n                    ]);\n                }\n\n                break;\n            // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)\n            default:\n                if (channelCount === 1) {\n                    /* ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a\n                    4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n                    */\n                    return new Uint8Array([\n                        0x1,\n                        0x40,\n                        0x22,\n                        0x80,\n                        0xa3,\n                        0x4e,\n                        0xe6,\n                        0x80,\n                        0xba,\n                        0x8,\n                        0x0,\n                        0x0,\n                        0x0,\n                        0x1c,\n                        0x6,\n                        0xf1,\n                        0xc1,\n                        0xa,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5e\n                    ]);\n                } else if (channelCount === 2) {\n                    /* ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a\n                        4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n                    */\n                    return new Uint8Array([\n                        0x1,\n                        0x40,\n                        0x22,\n                        0x80,\n                        0xa3,\n                        0x5e,\n                        0xe6,\n                        0x80,\n                        0xba,\n                        0x8,\n                        0x0,\n                        0x0,\n                        0x0,\n                        0x0,\n                        0x95,\n                        0x0,\n                        0x6,\n                        0xf1,\n                        0xa1,\n                        0xa,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5e\n                    ]);\n                } else if (channelCount === 3) {\n                    /* ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a\n                        4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n                     */\n                    return new Uint8Array([\n                        0x1,\n                        0x40,\n                        0x22,\n                        0x80,\n                        0xa3,\n                        0x5e,\n                        0xe6,\n                        0x80,\n                        0xba,\n                        0x8,\n                        0x0,\n                        0x0,\n                        0x0,\n                        0x0,\n                        0x95,\n                        0x0,\n                        0x6,\n                        0xf1,\n                        0xa1,\n                        0xa,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5a,\n                        0x5e\n                    ]);\n                }\n                break;\n        }\n        return null;\n    }\n}\n\nexport default AAC;\n","export enum TrackType {\n    video = 'video',\n    audio = 'audio'\n}\n\nexport enum RemuxerTrackIdConfig {\n    video = 1,\n    audio\n}\n\nexport interface Track {\n    id: number;\n    type: TrackType;\n    codec: string;\n    manifestCodec?: string;\n    container: string;\n    timescale: number;\n    duration: number;\n    samples: any[];\n    inputTimeScale: number;\n    sequenceNumber: number;\n    pid: number;\n}\nexport interface ATrack extends Track {\n    config: number[];\n    isAAC: boolean;\n    samplerate: number;\n    channelCount: number;\n}\nexport interface VTrack extends Track {\n    width: number;\n    height: number;\n    codecWidth: number;\n    codecHeight: number;\n    sps: Uint8Array[];\n    pps: Uint8Array[];\n    pixelRatio: number[];\n    profile: string;\n    level: string;\n    chromaFormat: string;\n    fps: number;\n    dropped: number;\n    refSampleDuration: number;\n}\n\nexport interface Sample {\n    key: boolean;\n    pts: number;\n    dts: number;\n    units: [];\n    debug: string;\n}\n\nexport interface TypeSupported {\n    mp4: boolean;\n    mpeg: boolean;\n    mp3: boolean;\n}\n\nexport interface IRemuxer {\n    readonly ISGenerated: boolean;\n    destroy(): void;\n    setExtra(data: any): void;\n    resetTimeStamp(): void;\n    resetInitSegment(): void;\n    getLastPTS(): any;\n    flush(): any;\n    resetStash(): void;\n    remux(\n        audioTrack: ATrack,\n        videoTrack: VTrack,\n        timeOffset: number,\n        contiguous: boolean,\n        accurateTimeOffset: boolean,\n        isFlush: boolean\n    ): void;\n}\n","/**\n * Generate MP4 Box\n */\nimport { TrackType, Track, ATrack, VTrack } from '../types/remux';\nconst UINT32_MAX = Math.pow(2, 32) - 1;\n\nclass MP4 {\n    static types: Record<string, number[]>;\n    static HDLR_TYPES: Record<string, Uint8Array>;\n\n    static STTS: Uint8Array;\n    static STSC: Uint8Array;\n    static STCO: Uint8Array;\n    static STSZ: Uint8Array;\n    static VMHD: Uint8Array;\n    static SMHD: Uint8Array;\n    static STSD: Uint8Array;\n    static FTYP_AVC: Uint8Array;\n    static FTYP_HEVC: Uint8Array;\n    static DINF: Uint8Array;\n\n    static init() {\n        MP4.types = {\n            'avc1': [], // codingname\n            'avcC': [],\n            'btrt': [],\n            'dinf': [],\n            'dref': [],\n            'esds': [],\n            'ftyp': [],\n            'hdlr': [],\n            'mdat': [],\n            'mdhd': [],\n            'mdia': [],\n            'mfhd': [],\n            'minf': [],\n            'moof': [],\n            'moov': [],\n            'mp4a': [],\n            '.mp3': [],\n            'mvex': [],\n            'mvhd': [],\n            'pasp': [],\n            'sdtp': [],\n            'stbl': [],\n            'stco': [],\n            'stsc': [],\n            'stsd': [],\n            'stsz': [],\n            'stts': [],\n            'tfdt': [],\n            'tfhd': [],\n            'traf': [],\n            'trak': [],\n            'trun': [],\n            'trex': [],\n            'tkhd': [],\n            'vmhd': [],\n            'smhd': [],\n            'hev1': [],\n            'hvcC': []\n        };\n\n        let i;\n        for (i in MP4.types) {\n            if (MP4.types.hasOwnProperty(i)) {\n                MP4.types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n            }\n        }\n\n        const videoHdlr = new Uint8Array([\n            0x00, // version 0\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x00, // pre_defined\n            0x76,\n            0x69,\n            0x64,\n            0x65, // handler_type: 'vide'\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x56,\n            0x69,\n            0x64,\n            0x65,\n            0x6f,\n            0x48,\n            0x61,\n            0x6e,\n            0x64,\n            0x6c,\n            0x65,\n            0x72,\n            0x00 // name: 'VideoHandler'\n        ]);\n\n        const audioHdlr = new Uint8Array([\n            0x00, // version 0\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x00, // pre_defined\n            0x73,\n            0x6f,\n            0x75,\n            0x6e, // handler_type: 'soun'\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x53,\n            0x6f,\n            0x75,\n            0x6e,\n            0x64,\n            0x48,\n            0x61,\n            0x6e,\n            0x64,\n            0x6c,\n            0x65,\n            0x72,\n            0x00 // name: 'SoundHandler'\n        ]);\n\n        MP4.HDLR_TYPES = {\n            video: videoHdlr,\n            audio: audioHdlr\n        };\n\n        const dref = new Uint8Array([\n            0x00, // version 0\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x01, // entry_count\n            0x00,\n            0x00,\n            0x00,\n            0x0c, // entry_size\n            0x75,\n            0x72,\n            0x6c,\n            0x20, // 'url' type\n            0x00, // version 0\n            0x00,\n            0x00,\n            0x01 // entry_flags\n        ]);\n\n        const stco = new Uint8Array([\n            0x00, // version\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x00 // entry_count\n        ]);\n\n        MP4.STTS = MP4.STSC = MP4.STCO = stco;\n\n        MP4.STSZ = new Uint8Array([\n            0x00, // version\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x00, // sample_size\n            0x00,\n            0x00,\n            0x00,\n            0x00 // sample_count\n        ]);\n        MP4.VMHD = new Uint8Array([\n            0x00, // version\n            0x00,\n            0x00,\n            0x01, // flags\n            0x00,\n            0x00, // graphicsmode\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00 // opcolor\n        ]);\n        MP4.SMHD = new Uint8Array([\n            0x00, // version\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00, // balance\n            0x00,\n            0x00 // reserved\n        ]);\n\n        MP4.STSD = new Uint8Array([\n            0x00, // version 0\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x01\n        ]); // entry_count\n\n        const majorBrand = new Uint8Array([105, 115, 111, 109]); // isom\n        const avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1\n        const hev1Brand = new Uint8Array([104, 101, 118, 49]); // hev1\n        const minorVersion = new Uint8Array([0, 0, 0, 1]);\n\n        MP4.FTYP_AVC = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);\n        MP4.FTYP_HEVC = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, hev1Brand);\n        MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));\n    }\n\n    static box(type: number[], ...payload: Uint8Array[]) {\n        let size = 8,\n            i = payload.length,\n            len = i,\n            result;\n        // calculate the total size we need to allocate\n        while (i--) {\n            size += payload[i].byteLength;\n        }\n\n        result = new Uint8Array(size);\n        result[0] = size >> 24 & 0xff;\n        result[1] = size >> 16 & 0xff;\n        result[2] = size >> 8 & 0xff;\n        result[3] = size & 0xff;\n        result.set(type, 4);\n        // copy the payload into the result\n        for (i = 0, size = 8; i < len; i++) {\n            // copy payload[i] array @ offset size\n            result.set(payload[i], size);\n            size += payload[i].byteLength;\n        }\n        return result;\n    }\n\n    static hdlr(type: string) {\n        return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);\n    }\n\n    static mdat(data: Uint8Array) {\n        return MP4.box(MP4.types.mdat, data);\n    }\n\n    static mdhd(timescale: number, duration: number) {\n        duration *= timescale;\n        const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n        const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n        return MP4.box(\n            MP4.types.mdhd,\n            new Uint8Array([\n                0x01, // version 1\n                0x00,\n                0x00,\n                0x00, // flags\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x02, // creation_time\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x03, // modification_time\n                timescale >> 24 & 0xff,\n                timescale >> 16 & 0xff,\n                timescale >> 8 & 0xff,\n                timescale & 0xff, // timescale\n                upperWordDuration >> 24,\n                upperWordDuration >> 16 & 0xff,\n                upperWordDuration >> 8 & 0xff,\n                upperWordDuration & 0xff,\n                lowerWordDuration >> 24,\n                lowerWordDuration >> 16 & 0xff,\n                lowerWordDuration >> 8 & 0xff,\n                lowerWordDuration & 0xff,\n                0x55,\n                0xc4, // 'und' language (undetermined)\n                0x00,\n                0x00\n            ])\n        );\n    }\n\n    static mdia(track: Track) {\n        return MP4.box(\n            MP4.types.mdia,\n            MP4.mdhd(track.timescale, track.duration),\n            MP4.hdlr(track.type),\n            MP4.minf(track)\n        );\n    }\n\n    static mfhd(sequenceNumber: number) {\n        return MP4.box(\n            MP4.types.mfhd,\n            new Uint8Array([\n                0x00,\n                0x00,\n                0x00,\n                0x00, // flags\n                sequenceNumber >> 24,\n                sequenceNumber >> 16 & 0xff,\n                sequenceNumber >> 8 & 0xff,\n                sequenceNumber & 0xff // sequence_number\n            ])\n        );\n    }\n\n    static minf(track: Track) {\n        if (track.type === 'audio') {\n            return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));\n        }\n        return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));\n    }\n\n    static moof(sn: number, baseMediaDecodeTime: number, track: Track) {\n        return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));\n    }\n    /**\n     * @param tracks... (optional) {array} the tracks associated with this movie\n     */\n    static moov(tracks: Track[]) {\n        let i = tracks.length,\n            boxes = [];\n\n        while (i--) {\n            boxes[i] = MP4.trak(tracks[i]);\n        }\n        return MP4.box(\n            MP4.types.moov,\n            ...[MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks))\n        );\n    }\n\n    static mvex(tracks: Track[]) {\n        let i = tracks.length;\n        const boxes = [];\n\n        while (i--) {\n            boxes[i] = MP4.trex(tracks[i]);\n        }\n\n        return MP4.box(MP4.types.mvex, ...boxes);\n    }\n\n    static mvhd(timescale: number, duration: number) {\n        duration *= timescale;\n        const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));\n        const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n        const bytes = new Uint8Array([\n            0x01, // version 1\n            0x00,\n            0x00,\n            0x00, // flags\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x02, // creation_time\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x03, // modification_time\n            timescale >> 24 & 0xff,\n            timescale >> 16 & 0xff,\n            timescale >> 8 & 0xff,\n            timescale & 0xff, // timescale\n            upperWordDuration >> 24,\n            upperWordDuration >> 16 & 0xff,\n            upperWordDuration >> 8 & 0xff,\n            upperWordDuration & 0xff,\n            lowerWordDuration >> 24,\n            lowerWordDuration >> 16 & 0xff,\n            lowerWordDuration >> 8 & 0xff,\n            lowerWordDuration & 0xff,\n            0x00,\n            0x01,\n            0x00,\n            0x00, // 1.0 rate\n            0x01,\n            0x00, // 1.0 volume\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved\n            0x00,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x40,\n            0x00,\n            0x00,\n            0x00, // transformation: unity matrix\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00, // pre_defined\n            0xff,\n            0xff,\n            0xff,\n            0xff // next_track_ID\n        ]);\n        return MP4.box(MP4.types.mvhd, bytes);\n    }\n\n    static sdtp(track: Track) {\n        let samples = track.samples || [],\n            bytes = new Uint8Array(4 + samples.length),\n            flags,\n            i;\n        // leave the full box header (4 bytes) all zero\n        // write the sample table\n        for (i = 0; i < samples.length; i++) {\n            flags = samples[i].flags;\n            bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n        }\n\n        return MP4.box(MP4.types.sdtp, bytes);\n    }\n\n    static stbl(track: Track) {\n        return MP4.box(\n            MP4.types.stbl,\n            MP4.stsd(track),\n            MP4.box(MP4.types.stts, MP4.STTS),\n            MP4.box(MP4.types.stsc, MP4.STSC),\n            MP4.box(MP4.types.stsz, MP4.STSZ),\n            MP4.box(MP4.types.stco, MP4.STCO)\n        );\n    }\n\n    static avc1(track: VTrack) {\n        let sps: any = [],\n            pps: any = [],\n            i,\n            data,\n            len;\n        // assemble the SPSs\n\n        for (i = 0; i < track.sps.length; i++) {\n            data = track.sps[i];\n            len = data.byteLength;\n            sps.push(len >>> 8 & 0xff);\n            sps.push(len & 0xff);\n\n            // SPS\n            sps = sps.concat(Array.prototype.slice.call(data));\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < track.pps.length; i++) {\n            data = track.pps[i];\n            len = data.byteLength;\n            pps.push(len >>> 8 & 0xff);\n            pps.push(len & 0xff);\n\n            pps = pps.concat(Array.prototype.slice.call(data));\n        }\n\n        const avcc = MP4.box(\n                MP4.types.avcC,\n                new Uint8Array(\n                    [\n                        0x01, // version\n                        sps[3], // profile\n                        sps[4], // profile compat\n                        sps[5], // level\n                        0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes\n                        0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n                    ]\n                        .concat(sps)\n                        .concat([\n                            track.pps.length // numOfPictureParameterSets\n                        ])\n                        .concat(pps)\n                )\n            ), // \"PPS\"\n            width = track.width,\n            height = track.height,\n            hSpacing = track.pixelRatio[0],\n            vSpacing = track.pixelRatio[1];\n\n        return MP4.box(\n            MP4.types.avc1,\n            new Uint8Array([\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x01, // data_reference_index\n                0x00,\n                0x00, // pre_defined\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00, // pre_defined\n                width >> 8 & 0xff,\n                width & 0xff, // width\n                height >> 8 & 0xff,\n                height & 0xff, // height\n                0x00,\n                0x48,\n                0x00,\n                0x00, // horizresolution\n                0x00,\n                0x48,\n                0x00,\n                0x00, // vertresolution\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x01, // frame_count\n                0x12,\n                0x64,\n                0x61,\n                0x69,\n                0x6c, // dailymotion/hls.js\n                0x79,\n                0x6d,\n                0x6f,\n                0x74,\n                0x69,\n                0x6f,\n                0x6e,\n                0x2f,\n                0x68,\n                0x6c,\n                0x73,\n                0x2e,\n                0x6a,\n                0x73,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00, // compressorname\n                0x00,\n                0x18, // depth = 24\n                0x11,\n                0x11\n            ]), // pre_defined = -1\n            avcc,\n            MP4.box(\n                MP4.types.btrt,\n                new Uint8Array([\n                    0x00,\n                    0x1c,\n                    0x9c,\n                    0x80, // bufferSizeDB\n                    0x00,\n                    0x2d,\n                    0xc6,\n                    0xc0, // maxBitrate\n                    0x00,\n                    0x2d,\n                    0xc6,\n                    0xc0\n                ])\n            ), // avgBitrate\n            MP4.box(\n                MP4.types.pasp,\n                new Uint8Array([\n                    hSpacing >> 24, // hSpacing\n                    hSpacing >> 16 & 0xff,\n                    hSpacing >> 8 & 0xff,\n                    hSpacing & 0xff,\n                    vSpacing >> 24, // vSpacing\n                    vSpacing >> 16 & 0xff,\n                    vSpacing >> 8 & 0xff,\n                    vSpacing & 0xff\n                ])\n            )\n        );\n    }\n\n    static hev1(track: VTrack) {\n        const hvcc = track.hvcc;\n        const width = track.codecWidth,\n            height = track.codecHeight;\n        const data = new Uint8Array([\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved(4)\n            0x00,\n            0x00,\n            0x00,\n            0x01, // reserved(2) + data_reference_index(2)\n            0x00,\n            0x00,\n            0x00,\n            0x00, // pre_defined(2) + reserved(2)\n            0x00,\n            0x00,\n            0x00,\n            0x00, // pre_defined: 3 * 4 bytes\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            width >>> 8 & 0xff, // width: 2 bytes\n            width & 0xff,\n            height >>> 8 & 0xff, // height: 2 bytes\n            height & 0xff,\n            0x00,\n            0x48,\n            0x00,\n            0x00, // horizresolution: 4 bytes\n            0x00,\n            0x48,\n            0x00,\n            0x00, // vertresolution: 4 bytes\n            0x00,\n            0x00,\n            0x00,\n            0x00, // reserved: 4 bytes\n            0x00,\n            0x01, // frame_count\n            0x0a, // strlen\n            0x78,\n            0x71,\n            0x71,\n            0x2f, // compressorname: 32 bytes\n            0x66,\n            0x6c,\n            0x76,\n            0x2e,\n            0x6a,\n            0x73,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x00,\n            0x18, // depth\n            0xff,\n            0xff // pre_defined = -1\n        ]);\n        return MP4.box(MP4.types.hev1, data, MP4.box(MP4.types.hvcC, hvcc));\n    }\n\n    static esds(track: ATrack) {\n        const configlen = track.config.length;\n        return new Uint8Array(\n            [\n                0x00, // version 0\n                0x00,\n                0x00,\n                0x00, // flags\n\n                0x03, // descriptor_type\n                0x17 + configlen, // length\n                0x00,\n                0x01, // es_id\n                0x00, // stream_priority\n\n                0x04, // descriptor_type\n                0x0f + configlen, // length\n                0x40, // codec : mpeg4_audio\n                0x15, // stream_type\n                0x00,\n                0x00,\n                0x00, // buffer_size\n                0x00,\n                0x00,\n                0x00,\n                0x00, // maxBitrate\n                0x00,\n                0x00,\n                0x00,\n                0x00, // avgBitrate\n\n                0x05 // descriptor_type\n            ]\n                .concat([configlen])\n                .concat(track.config)\n                .concat([0x06, 0x01, 0x02])\n        ); // GASpecificConfig)); // length + audio config descriptor\n    }\n\n    static mp4a(track: ATrack) {\n        const samplerate = track.samplerate;\n        return MP4.box(\n            MP4.types.mp4a,\n            new Uint8Array([\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x01, // data_reference_index\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                track.channelCount, // channelcount\n                0x00,\n                0x10, // sampleSize:16bits\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved2\n                samplerate >> 8 & 0xff,\n                samplerate & 0xff, //\n                0x00,\n                0x00\n            ]),\n            MP4.box(MP4.types.esds, MP4.esds(track))\n        );\n    }\n\n    static mp3(track: ATrack) {\n        const samplerate = track.samplerate;\n        return MP4.box(\n            MP4.types['.mp3'],\n            new Uint8Array([\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x01, // data_reference_index\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                track.channelCount, // channelcount\n                0x00,\n                0x10, // sampleSize:16bits\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved2\n                samplerate >> 8 & 0xff,\n                samplerate & 0xff, //\n                0x00,\n                0x00\n            ])\n        );\n    }\n\n    static stsd(track: Track) {\n        if (track.type === TrackType.audio) {\n            if (!(<ATrack>track).isAAC && track.codec === 'mp3') {\n                return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(<ATrack>track));\n            }\n\n            return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(<ATrack>track));\n        }\n        if (track.codec.indexOf('hev1') === 0) {\n            return MP4.box(MP4.types.stsd, MP4.STSD, MP4.hev1(<VTrack>track));\n        }\n        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(<VTrack>track));\n    }\n\n    static tkhd(track: ATrack & VTrack) {\n        const id = track.id,\n            duration = track.duration * track.timescale,\n            upperWordDuration = Math.floor(duration / (UINT32_MAX + 1)),\n            lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));\n        let width = 0,\n            height = 0;\n        if (track.hasOwnProperty('width')) {\n            width = track.width;\n        }\n        if (track.hasOwnProperty('height')) {\n            height = track.height;\n        }\n        return MP4.box(\n            MP4.types.tkhd,\n            new Uint8Array([\n                0x01, // version 1\n                0x00,\n                0x00,\n                0x07, // flags\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x02, // creation_time\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x03, // modification_time\n                id >> 24 & 0xff,\n                id >> 16 & 0xff,\n                id >> 8 & 0xff,\n                id & 0xff, // track_ID\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved\n                upperWordDuration >> 24,\n                upperWordDuration >> 16 & 0xff,\n                upperWordDuration >> 8 & 0xff,\n                upperWordDuration & 0xff,\n                lowerWordDuration >> 24,\n                lowerWordDuration >> 16 & 0xff,\n                lowerWordDuration >> 8 & 0xff,\n                lowerWordDuration & 0xff,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x00, // layer\n                0x00,\n                0x00, // alternate_group\n                0x00,\n                0x00, // non-audio track volume\n                0x00,\n                0x00, // reserved\n                0x00,\n                0x01,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x01,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x00,\n                0x40,\n                0x00,\n                0x00,\n                0x00, // transformation: unity matrix\n                width >> 8 & 0xff,\n                width & 0xff,\n                0x00,\n                0x00, // width\n                height >> 8 & 0xff,\n                height & 0xff,\n                0x00,\n                0x00 // height\n            ])\n        );\n    }\n\n    static traf(track: Track, baseMediaDecodeTime: number) {\n        const sampleDependencyTable = MP4.sdtp(track),\n            id = track.id,\n            upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1)),\n            lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1));\n        return MP4.box(\n            MP4.types.traf,\n            MP4.box(\n                MP4.types.tfhd,\n                new Uint8Array([\n                    0x00, // version 0\n                    0x00,\n                    0x00,\n                    0x00, // flags\n                    id >> 24,\n                    id >> 16 & 0xff,\n                    id >> 8 & 0xff,\n                    id & 0xff // track_ID\n                ])\n            ),\n            MP4.box(\n                MP4.types.tfdt,\n                new Uint8Array([\n                    0x01, // version 1\n                    0x00,\n                    0x00,\n                    0x00, // flags\n                    upperWordBaseMediaDecodeTime >> 24,\n                    upperWordBaseMediaDecodeTime >> 16 & 0xff,\n                    upperWordBaseMediaDecodeTime >> 8 & 0xff,\n                    upperWordBaseMediaDecodeTime & 0xff,\n                    lowerWordBaseMediaDecodeTime >> 24,\n                    lowerWordBaseMediaDecodeTime >> 16 & 0xff,\n                    lowerWordBaseMediaDecodeTime >> 8 & 0xff,\n                    lowerWordBaseMediaDecodeTime & 0xff\n                ])\n            ),\n            MP4.trun(\n                track,\n                sampleDependencyTable.length\n                + 16 // tfhd\n                + 20 // tfdt\n                + 8 // traf header\n                + 16 // mfhd\n                + 8 // moof header\n                    + 8\n            ), // mdat header\n            sampleDependencyTable\n        );\n    }\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    static trak(track: Track): Uint8Array {\n        // TODO:\n        // track.duration = track.duration || 0xffffffff;\n        return MP4.box(MP4.types.trak, MP4.tkhd(<ATrack & VTrack>track), MP4.mdia(track));\n    }\n\n    static trex(track: Track): Uint8Array {\n        const id = track.id;\n        return MP4.box(\n            MP4.types.trex,\n            new Uint8Array([\n                0x00, // version 0\n                0x00,\n                0x00,\n                0x00, // flags\n                id >> 24,\n                id >> 16 & 0xff,\n                id >> 8 & 0xff,\n                id & 0xff, // track_ID\n                0x00,\n                0x00,\n                0x00,\n                0x01, // default_sample_description_index\n                0x00,\n                0x00,\n                0x00,\n                0x00, // default_sample_duration\n                0x00,\n                0x00,\n                0x00,\n                0x00, // default_sample_size\n                0x00,\n                0x01,\n                0x00,\n                0x01 // default_sample_flags\n            ])\n        );\n    }\n\n    static trun(track: Track, offset: number) {\n        let samples = track.samples || [],\n            len = samples.length,\n            arraylen = 12 + 16 * len,\n            array = new Uint8Array(arraylen),\n            i,\n            sample,\n            duration,\n            size,\n            flags,\n            cts;\n        offset += 8 + arraylen;\n        array.set(\n            [\n                0x00, // version 0\n                0x00,\n                0x0f,\n                0x01, // flags\n                len >>> 24 & 0xff,\n                len >>> 16 & 0xff,\n                len >>> 8 & 0xff,\n                len & 0xff, // sample_count\n                offset >>> 24 & 0xff,\n                offset >>> 16 & 0xff,\n                offset >>> 8 & 0xff,\n                offset & 0xff // data_offset\n            ],\n            0\n        );\n        for (i = 0; i < len; i++) {\n            sample = samples[i];\n            duration = sample.duration;\n            size = sample.size;\n            flags = sample.flags;\n            cts = sample.cts;\n            array.set(\n                [\n                    duration >>> 24 & 0xff,\n                    duration >>> 16 & 0xff,\n                    duration >>> 8 & 0xff,\n                    duration & 0xff, // sample_duration\n                    size >>> 24 & 0xff,\n                    size >>> 16 & 0xff,\n                    size >>> 8 & 0xff,\n                    size & 0xff, // sample_size\n                    flags.isLeading << 2 | flags.dependsOn,\n                    flags.isDependedOn << 6\n                        | flags.hasRedundancy << 4\n                        | flags.paddingValue << 1\n                        | flags.isNonSync,\n                    flags.degradPrio & 0xf0 << 8,\n                    flags.degradPrio & 0x0f, // sample_flags\n                    cts >>> 24 & 0xff,\n                    cts >>> 16 & 0xff,\n                    cts >>> 8 & 0xff,\n                    cts & 0xff // sample_composition_time_offset\n                ],\n                12 + 16 * i\n            );\n        }\n        return MP4.box(MP4.types.trun, array);\n    }\n\n    static initSegment<T extends Track>(tracks: T[]) {\n        if (!MP4.types) {\n            MP4.init();\n        }\n        let ftyp = MP4.FTYP_AVC;\n        let i = tracks.length;\n        while (i--) {\n            if (tracks[i].type === 'video' && tracks[i].codec.indexOf('hev1') === 0) {\n                ftyp = MP4.FTYP_HEVC;\n            }\n        }\n        const movie = MP4.moov(tracks);\n        const result = new Uint8Array(ftyp.byteLength + movie.byteLength);\n        result.set(ftyp);\n        result.set(movie, ftyp.byteLength);\n        return result;\n    }\n}\n\nexport default MP4;\n","/**\n * fMP4 remuxer\n */\n\nimport { ErrorDetails, ErrorTypes } from '../core/errors';\nimport LasEvents from '../core/events';\nimport Observer from '../core/observer';\nimport { FLVTransConfig } from '../types/core';\nimport { ATrack, IRemuxer, TypeSupported, VTrack } from '../types/remux';\nimport Browser from '../utils/browser';\nimport { Log } from '../utils/log';\nimport AAC from './aac-helper';\nimport MP4 from './mp4-generator';\n\n\n\n// 100 seconds\nconst MAX_SILENT_FRAME_DURATION = 100 * 1000;\n\ntype StashInfo = { timeOffset: number; accurateTimeOffset: boolean; track: VTrack; sequenceNumber: number };\n\ntype Stat = {\n    ISGenerated: boolean;\n    nextAudioPts?: number;\n    nextAvcDts?: number;\n    initPTS?: number;\n    initDTS?: number;\n    videoTime: {\n        nbSamples: number;\n        firstDTS: number;\n        sampleDuration: number;\n        vLastPTS: number;\n        aLastPTS: number;\n        endDts?: number;\n    };\n};\n\nclass MP4Remuxer implements IRemuxer {\n    private _observer: Observer;\n    private _config: FLVTransConfig;\n    private _typeSupported: TypeSupported;\n    private _isSafari: boolean;\n    private _forceFirstIDR: boolean;\n    private _stash: boolean;\n    private _stashInfo: StashInfo;\n    private _stashLastVideoSample: any;\n    private _ISGenerated: boolean = false;\n    private _videoTime!: {\n        nbSamples: number;\n        firstDTS: number;\n        sampleDuration: number;\n        vLastPTS: number;\n        aLastPTS: number;\n        endDts?: number;\n    };\n    private _extra: any;\n\n    private _nextAudioPts?: number;\n    private _nextAvcDts?: number;\n    private _initPTS?: number;\n    private _initDTS?: number;\n    private _initSegment: Record<string, Uint8Array> = {};\n\n    constructor(observer: Observer, config: FLVTransConfig, typeSupported: TypeSupported, vendor: string = '') {\n        this._observer = observer;\n        this._config = config;\n        this._typeSupported = typeSupported;\n        const userAgent = navigator.userAgent;\n        this._isSafari = !!(vendor && vendor.indexOf('Apple') > -1 && userAgent && !userAgent.match('CriOS'));\n        this._ISGenerated = false;\n        this._stash = !config.gopRemux;\n        // 计算平均sampleDuration\n        this._resetVideoTime();\n        this._stashInfo = <StashInfo>{};\n        if (!MP4.types) {\n            MP4.init();\n        }\n        // Workaround for chrome < 50: Always force first sample as a Random Access Point in media segment\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=229412\n        this._forceFirstIDR =\n            Browser.chrome &&\n                (Browser.version.major < 50 || (Browser.version.major === 50 && Browser.version.build < 2661))\n                ? true\n                : false;\n    }\n\n    get ISGenerated(): boolean {\n        return this._ISGenerated;\n    }\n\n    public setStat(stat: Stat): void {\n        if (stat) {\n            this._ISGenerated = stat.ISGenerated;\n            this._nextAudioPts = stat.nextAudioPts;\n            this._nextAvcDts = stat.nextAvcDts;\n            this._initPTS = stat.initPTS;\n            this._initDTS = stat.initDTS;\n            this._videoTime.nbSamples = stat.videoTime.nbSamples;\n            this._videoTime.firstDTS = stat.videoTime.firstDTS;\n            this._videoTime.sampleDuration = stat.videoTime.sampleDuration;\n            this._videoTime.vLastPTS = stat.videoTime.vLastPTS;\n            this._videoTime.aLastPTS = stat.videoTime.aLastPTS;\n            this._videoTime.endDts = stat.videoTime.endDts;\n        }\n    }\n    public getStat(): Stat {\n        return {\n            ISGenerated: this._ISGenerated,\n            nextAudioPts: this._nextAudioPts,\n            nextAvcDts: this._nextAvcDts,\n            initPTS: this._initPTS,\n            initDTS: this._initDTS,\n            videoTime: {\n                nbSamples: this._videoTime.nbSamples,\n                firstDTS: this._videoTime.firstDTS,\n                sampleDuration: this._videoTime.sampleDuration,\n                vLastPTS: this._videoTime.vLastPTS,\n                aLastPTS: this._videoTime.aLastPTS,\n                endDts: this._videoTime.endDts\n            }\n        };\n    }\n\n    destroy() { }\n\n    setExtra(data: any) {\n        this._extra = data;\n    }\n\n    resetTimeStamp(defaultTimeStamp?: number) {\n        this._initPTS = this._initDTS = defaultTimeStamp;\n        this._resetVideoTime();\n    }\n\n    resetInitSegment() {\n        this._ISGenerated = false;\n        this._initSegment = {};\n        this.resetStash();\n    }\n\n    getLastPTS() {\n        return { video: this._videoTime.vLastPTS, audio: this._videoTime.aLastPTS };\n    }\n\n    flush(audioTrackLength = 0) {\n        let videoData = null;\n        if (this._stash && this._stashLastVideoSample) {\n            const info = this._stashInfo;\n            info.track.samples = [this._stashLastVideoSample];\n            this._stashLastVideoSample = null;\n            info.sequenceNumber += 1;\n            videoData = this.remuxVideo(info.track, info.timeOffset, true, audioTrackLength, info.accurateTimeOffset);\n        }\n        this.resetStash();\n        return videoData;\n    }\n\n    resetStash() {\n        this._stashLastVideoSample = null;\n        this._stashInfo = <StashInfo>{};\n    }\n\n    remux(\n        audioTrack: ATrack,\n        videoTrack: VTrack,\n        timeOffset: number,\n        contiguous: boolean,\n        accurateTimeOffset: boolean,\n        isFlush: boolean = false\n    ) {\n        // generate Init Segment if needed\n        if (!this._ISGenerated) {\n            this.generateIS(audioTrack, videoTrack, timeOffset);\n        }\n\n        // 兼容safari\n        if (!contiguous && videoTrack.samples.length) {\n            videoTrack.samples[0].pts = videoTrack.samples[0].dts;\n        }\n\n        if (this._ISGenerated) {\n            const nbVideoStashSamples = isFlush && this._stashLastVideoSample ? 1 : 0;\n            const nbAudioSamples = audioTrack.samples.length;\n            const nbVideoSamples = videoTrack.samples.length;\n            let audioTimeOffset = timeOffset;\n            let videoTimeOffset = timeOffset;\n            if (nbAudioSamples && nbVideoSamples) {\n                if (!contiguous && accurateTimeOffset) {\n                    // 利用首个视频帧填充视频帧，accurateTimeOffset=true会根据timeoffset填充音频帧\n                    if (audioTrack.samples[0].pts - videoTrack.samples[0].pts < 0) {\n                        const sample = Object.assign({}, videoTrack.samples[0]);\n                        sample.dts = sample.pts = audioTrack.samples[0].pts;\n                        videoTrack.samples.unshift(sample);\n                    }\n                } else {\n                    // timeOffset is expected to be the offset of the first timestamp of this fragment (first DTS)\n                    // if first audio DTS is not aligned with first video DTS then we need to take that into account\n                    // when providing timeOffset to remuxAudio / remuxVideo.\n                    // if we don't do that, there might be a permanent / small drift between audio and video streams\n                    const audiovideoDeltaDts =\n                        (audioTrack.samples[0].pts - videoTrack.samples[0].pts) / videoTrack.inputTimeScale;\n                    audioTimeOffset += Math.max(0, audiovideoDeltaDts);\n                    videoTimeOffset += Math.max(0, -audiovideoDeltaDts);\n                }\n            }\n            // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is\n            // calculated in remuxAudio.\n            // Log.v('nb AAC samples:' + audioTrack.samples.length);\n            if (nbAudioSamples) {\n                // if initSegment was generated without video samples, regenerate it again\n                if (!audioTrack.timescale) {\n                    Log.w('regenerate InitSegment as audio detected');\n                    this.generateIS(audioTrack, videoTrack, timeOffset);\n                }\n                const audioData = this.remuxAudio(audioTrack, audioTimeOffset, contiguous, accurateTimeOffset);\n                // Log.v('nb AVC samples:' + videoTrack.samples.length);\n                let audioTrackLength;\n                if (audioData) {\n                    audioTrackLength = audioData.endPTS - audioData.startPTS;\n                }\n                if (nbVideoSamples) {\n                    // if initSegment was generated without video samples, regenerate it again\n                    if (!videoTrack.timescale) {\n                        Log.w('regenerate InitSegment as video detected');\n                        this.generateIS(audioTrack, videoTrack, timeOffset);\n                    }\n                    this.remuxVideo(\n                        videoTrack,\n                        videoTimeOffset,\n                        contiguous,\n                        audioTrackLength,\n                        accurateTimeOffset,\n                        isFlush\n                    );\n                } else {\n                    this.flush(audioTrackLength);\n                }\n            } else {\n                // Log.v('nb AVC samples:' + videoTrack.samples.length);\n                let videoData = null;\n                if (nbVideoSamples) {\n                    videoData = this.remuxVideo(\n                        videoTrack,\n                        videoTimeOffset,\n                        contiguous,\n                        0,\n                        accurateTimeOffset,\n                        isFlush\n                    );\n                } else if (nbVideoStashSamples) {\n                    videoData = this.flush();\n                }\n                if (\n                    videoData &&\n                    audioTrack.codec &&\n                    Number.isFinite(videoData.startDTS) &&\n                    Number.isFinite(videoData.endDTS)\n                ) {\n                    this.remuxEmptyAudio(audioTrack, audioTimeOffset, contiguous, videoData);\n                }\n            }\n        }\n    }\n\n    generateIS(audioTrack: ATrack, videoTrack: VTrack, timeOffset: number) {\n        const observer = this._observer,\n            audioSamples = audioTrack.samples,\n            videoSamples = videoTrack.samples,\n            typeSupported = this._typeSupported,\n            tracks: any = {},\n            data = { tracks: tracks },\n            computePTSDTS = typeof this._initPTS === 'undefined';\n        let container = 'audio/mp4',\n            initPTS,\n            initDTS;\n\n        if (computePTSDTS) {\n            initPTS = initDTS = Infinity;\n        }\n\n        if (audioTrack.config && audioSamples.length) {\n            // let's use audio sampling rate as MP4 time scale.\n            // rationale is that there is a integer nb of audio frames per audio sample (1024 for AAC)\n            // using audio sampling rate here helps having an integer MP4 frame duration\n            // this avoids potential rounding issue and AV sync issue\n            audioTrack.timescale = audioTrack.samplerate;\n            Log.v(`audio sampling rate : ${audioTrack.samplerate}`);\n            if (!audioTrack.isAAC) {\n                if (typeSupported.mpeg) {\n                    // Chrome and Safari\n                    container = 'audio/mpeg';\n                    audioTrack.codec = '';\n                } else if (typeSupported.mp3) {\n                    // Firefox\n                    audioTrack.codec = 'mp3';\n                }\n            }\n            this._initSegment.audio =\n                !audioTrack.isAAC && typeSupported.mpeg ? new Uint8Array() : MP4.initSegment([audioTrack]);\n            tracks.audio = {\n                container: container,\n                codec: audioTrack.codec,\n                metadata: {\n                    channelCount: audioTrack.channelCount,\n                    audioSampleRate: audioTrack.samplerate\n                }\n            };\n            if (computePTSDTS) {\n                // remember first PTS of this demuxing context. for audio, PTS = DTS\n                initPTS = initDTS = audioSamples[0].pts - audioTrack.inputTimeScale * timeOffset;\n            }\n        }\n\n        if (videoTrack.sps && videoTrack.pps && videoSamples.length) {\n            // let's use input time scale as MP4 video timescale\n            // we use input time scale straight away to avoid rounding issues on frame duration / cts computation\n            const inputTimeScale = videoTrack.inputTimeScale;\n            videoTrack.timescale = inputTimeScale;\n            this._initSegment.video = MP4.initSegment([videoTrack]);\n            tracks.video = {\n                container: 'video/mp4',\n                codec: videoTrack.codec,\n                metadata: {\n                    width: videoTrack.width,\n                    height: videoTrack.height,\n                    fps: videoTrack.fps,\n                    profile: videoTrack.profile,\n                    level: videoTrack.level,\n                    chromaFormat: videoTrack.chromaFormat\n                }\n            };\n            if (computePTSDTS) {\n                initPTS = Math.min(initPTS ? initPTS : Infinity, videoSamples[0].pts - inputTimeScale * timeOffset);\n                initDTS = Math.min(initDTS ? initDTS : Infinity, videoSamples[0].dts - inputTimeScale * timeOffset);\n                this._observer.trigger(LasEvents.INIT_PTS_FOUND, { initPTS: initPTS });\n            }\n        }\n\n        if (Object.keys(tracks).length) {\n            observer.trigger(LasEvents.PARSING_INIT_SEGMENT, data);\n            this._ISGenerated = true;\n            if (computePTSDTS) {\n                this._initPTS = initPTS;\n                this._initDTS = initDTS;\n            }\n        } else {\n            observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: false,\n                reason: 'no audio/video samples found'\n            });\n        }\n    }\n\n    remuxVideo(\n        track: VTrack,\n        timeOffset: number,\n        contiguous: boolean,\n        audioTrackLength?: number,\n        accurateTimeOffset: boolean = false,\n        isFlush: boolean = false\n    ) {\n        const timeScale = track.timescale,\n            inputSamples = track.samples,\n            outputSamples = [],\n            ptsNormalize = this._PTSNormalize,\n            initPTS = this._initPTS,\n            streamDTS = inputSamples[0].streamDTS / 1000,\n            key = inputSamples[0].key,\n            time = this._videoTime;\n        let offset = 8,\n            mp4SampleDuration = 0,\n            mdat,\n            moof = null,\n            firstPTS = 0,\n            firstDTS = 0,\n            lastPTS = 0,\n            lastDTS = 0,\n            nbSamples = inputSamples.length;\n        if (typeof initPTS === 'undefined') {\n            return;\n        }\n        // for (let i = 0; i < track.samples.length; i++) {\n        //   let avcSample = track.samples[i];\n        //   let units = avcSample.units;\n        //   let unitsString = '';\n        //   for (let j = 0; j < units.length ; j++) {\n        //     unitsString += units[j].type + ',';\n        //     if (units[j].data.length < 500) {\n        //       unitsString += Hex.hexDump(units[j].data);\n        //     }\n        //   }\n        //   Log.v(avcSample.pts + '/' + avcSample.dts + ',' + unitsString + avcSample.units.length);\n        // }\n\n        // if parsed fragment is contiguous with last one, let's use last DTS value as reference\n        let nextAvcDts = this._nextAvcDts;\n\n        const isSafari = this._isSafari;\n        if (nbSamples === 0 || track.timescale === 0) {\n            return null;\n        }\n\n        // Safari does not like overlapping DTS on consecutive fragments.\n        // let's use nextAvcDts to overcome this if fragments are consecutive\n        if (isSafari) {\n            // also consider consecutive fragments as being contiguous (even if a level switch occurs),\n            // for sake of clarity:\n            // consecutive fragments are frags with\n            //  - less than 100ms gaps between new time offset (if accurate) and next expected PTS OR\n            //  - less than 200 ms PTS gaps (timeScale/5)\n            contiguous =\n                contiguous ||\n                !!(\n                    inputSamples.length &&\n                    nextAvcDts &&\n                    ((accurateTimeOffset && Math.abs(timeOffset - nextAvcDts / timeScale) < 0.1) ||\n                        Math.abs(inputSamples[0].pts - nextAvcDts - initPTS) < timeScale / 5)\n                );\n        }\n\n        if (!contiguous) {\n            // if not contiguous, let's use target timeOffset\n            nextAvcDts = timeOffset * timeScale;\n            this._resetVideoTime();\n        }\n        if (typeof nextAvcDts === 'undefined') {\n            return;\n        }\n        // PTS is coded on 33bits, and can loop from -2^32 to 2^32\n        // ptsNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value\n        inputSamples.forEach(function (sample) {\n            sample.pts = ptsNormalize(sample.pts - initPTS, nextAvcDts);\n            sample.dts = ptsNormalize(sample.dts - initPTS, nextAvcDts);\n        });\n\n        // sort video samples by DTS then PTS then demux id order\n        inputSamples.sort(function (a, b) {\n            const deltadts = a.dts - b.dts;\n            const deltapts = a.pts - b.pts;\n            return deltadts || (deltapts || a.id - b.id);\n        });\n\n        // handle broken streams with PTS < DTS, tolerance up 200ms (18000 in 90kHz timescale)\n        const PTSDTSshift = inputSamples.reduce(\n            (prev, curr) => Math.max(Math.min(prev, curr.pts - curr.dts), -18000),\n            0\n        );\n        if (PTSDTSshift < 0) {\n            Log.w(\n                `PTS < DTS detected in video samples, shifting DTS by ${Math.round(\n                    PTSDTSshift / 90\n                )} ms to overcome this issue`\n            );\n            for (let i = 0; i < inputSamples.length; i++) {\n                inputSamples[i].dts += PTSDTSshift;\n            }\n        }\n        // 删除最后一个sample并缓存，用于计算remux最后一个sampleDuration\n        if (this._stash) {\n            this._stashInfo.timeOffset = timeOffset;\n            this._stashInfo.accurateTimeOffset = accurateTimeOffset;\n            this._stashInfo.track = track;\n            if (this._stashLastVideoSample) {\n                nbSamples++;\n                inputSamples.unshift(this._stashLastVideoSample);\n                this._stashLastVideoSample = null;\n            }\n            if (inputSamples.length > 1 && !isFlush) {\n                this._stashLastVideoSample = inputSamples.pop();\n                nbSamples--;\n            }\n        }\n        // compute first DTS and last DTS, normalize them against reference value\n        let sample = inputSamples[0];\n        firstDTS = Math.max(sample.dts, 0);\n        firstPTS = Math.max(sample.pts, 0);\n\n        // check timestamp continuity accross consecutive fragments (this is to remove inter-fragment gap/hole)\n        const delta = Math.round((firstDTS - nextAvcDts) / 90);\n        // if fragment are contiguous, detect hole/overlapping between fragments\n        if (contiguous) {\n            if (delta) {\n                if (delta > 1) {\n                    Log.v(`AVC:${delta} ms hole between fragments detected,filling it`);\n                } else if (delta < -1) {\n                    Log.v(`AVC:${-delta} ms overlapping between fragments detected`);\n                }\n\n                firstPTS = Math.max(firstPTS - (firstDTS - nextAvcDts), nextAvcDts);\n                // remove hole/gap : set DTS to next expected DTS\n                firstDTS = nextAvcDts;\n                inputSamples[0].dts = firstDTS;\n                // offset PTS as well, ensure that PTS is smaller or equal than new DTS\n                inputSamples[0].pts = firstPTS;\n                Log.v(\n                    `Video/PTS/DTS adjusted: ${Math.round(firstPTS / 90)}/${Math.round(\n                        firstDTS / 90\n                    )},delta:${delta} ms`\n                );\n            }\n        }\n\n        // compute lastPTS/lastDTS\n        sample = inputSamples[inputSamples.length - 1];\n        lastDTS = Math.max(sample.dts, 0);\n        lastPTS = Math.max(sample.pts, 0, lastDTS);\n\n        // on Safari let's signal the same sample duration for all samples\n        // sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS\n        // set this constant duration as being the avg delta between consecutive DTS.\n        if (isSafari) {\n            mp4SampleDuration = Math.round((lastDTS - firstDTS) / (inputSamples.length - 1));\n        }\n\n        let nbNalu = 0,\n            naluLen = 0;\n        for (let i = 0; i < nbSamples; i++) {\n            // compute total/avc sample length and nb of NAL units\n            const sample = inputSamples[i],\n                units = sample.units,\n                nbUnits = units.length;\n            let sampleLen = 0;\n            for (let j = 0; j < nbUnits; j++) {\n                sampleLen += units[j].data.length;\n            }\n\n            naluLen += sampleLen;\n            nbNalu += nbUnits;\n            sample.length = sampleLen;\n\n            // normalize PTS/DTS\n            if (isSafari) {\n                // sample DTS is computed using a constant decoding offset (mp4SampleDuration) between samples\n                sample.dts = firstDTS + i * mp4SampleDuration;\n            } else {\n                // ensure sample monotonic DTS\n                sample.dts = Math.max(sample.dts, firstDTS);\n            }\n            // ensure that computed value is greater or equal than sample DTS\n            sample.pts = Math.max(sample.pts, sample.dts);\n        }\n\n        /* concatenate the video data and construct the mdat in place\n      (need 8 more bytes to fill length and mpdat type) */\n        const mdatSize = naluLen + 4 * nbNalu + 8;\n        try {\n            mdat = new Uint8Array(mdatSize);\n        } catch (err) {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.REMUX_ALLOC_ERROR,\n                fatal: false,\n                bytes: mdatSize,\n                reason: `fail allocating video mdat ${mdatSize}`\n            });\n            return null;\n        }\n        const view = new DataView(mdat.buffer);\n        view.setUint32(0, mdatSize);\n        mdat.set(MP4.types.mdat, 4);\n\n        for (let i = 0; i < nbSamples; i++) {\n            const avcSample = inputSamples[i],\n                avcSampleUnits = avcSample.units;\n            let mp4SampleLength = 0,\n                compositionTimeOffset;\n            // convert NALU bitstream to MP4 format (prepend NALU with size field)\n            for (let j = 0, nbUnits = avcSampleUnits.length; j < nbUnits; j++) {\n                const unit = avcSampleUnits[j],\n                    unitData = unit.data,\n                    unitDataLen = unit.data.byteLength;\n                view.setUint32(offset, unitDataLen);\n                offset += 4;\n                mdat.set(unitData, offset);\n                offset += unitDataLen;\n                mp4SampleLength += 4 + unitDataLen;\n            }\n\n            if (!isSafari) {\n                // expected sample duration is the Decoding Timestamp diff of consecutive samples\n                if (i < nbSamples - 1) {\n                    mp4SampleDuration = inputSamples[i + 1].dts - avcSample.dts;\n                } else {\n                    const config = this._config;\n                    let lastFrameDuration = 0;\n                    if (this._stashLastVideoSample) {\n                        lastFrameDuration = this._stashLastVideoSample.dts - avcSample.dts;\n                    } else {\n                        lastFrameDuration =\n                            track.refSampleDuration ||\n                            time.sampleDuration ||\n                            avcSample.dts - inputSamples[i > 0 ? i - 1 : i].dts;\n                    }\n                    lastFrameDuration = Math.floor(lastFrameDuration / 90) * 90;\n                    if (config.stretchShortVideoTrack && this._nextAudioPts) {\n                        // In some cases, a segment's audio track duration may exceed the video track duration.\n                        // Since we've already remuxed audio, and we know how long the audio track is, we look to\n                        // see if the delta to the next segment is longer than maxBufferHole.\n                        // If so, playback would potentially get stuck, so we artificially inflate\n                        // the duration of the last frame to minimize any potential gap between segments.\n\n                        const maxBufferHole = config.maxBufferHole,\n                            gapTolerance = Math.floor(maxBufferHole * timeScale),\n                            deltaToFrameEnd =\n                                (audioTrackLength ? firstPTS + audioTrackLength * timeScale : this._nextAudioPts) -\n                                avcSample.pts;\n                        if (deltaToFrameEnd > gapTolerance) {\n                            // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video\n                            // frame overlap. maxBufferHole should be >> lastFrameDuration anyway.\n                            mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;\n                            if (mp4SampleDuration < 0) {\n                                mp4SampleDuration = lastFrameDuration;\n                            }\n\n                            Log.v(\n                                `It is approximately ${deltaToFrameEnd /\n                                90} ms to the next segment; using duration ${mp4SampleDuration /\n                                90} ms for the last video frame.`\n                            );\n                        } else {\n                            mp4SampleDuration = lastFrameDuration;\n                        }\n                    } else {\n                        mp4SampleDuration = lastFrameDuration;\n                    }\n                }\n                compositionTimeOffset = Math.round(avcSample.pts - avcSample.dts);\n            } else {\n                compositionTimeOffset = Math.max(\n                    0,\n                    mp4SampleDuration * Math.round((avcSample.pts - avcSample.dts) / mp4SampleDuration)\n                );\n            }\n\n            // 无法根据多个sample计算mp4SampleDuration时，利用fps和平均duration计算当前duration\n            if (mp4SampleDuration < 0 || isNaN(mp4SampleDuration)) {\n                let fix = 0;\n                if (contiguous && inputSamples.length < 2) {\n                    fix = delta * 90;\n                }\n                mp4SampleDuration = Math.max((track.refSampleDuration || time.sampleDuration) - fix, 90);\n            }\n            // console.log('mp4SampleDuration', mp4SampleDuration);\n            outputSamples.push({\n                size: mp4SampleLength,\n                // constant duration\n                duration: mp4SampleDuration,\n                cts: compositionTimeOffset,\n                flags: {\n                    isLeading: 0,\n                    isDependedOn: 0,\n                    hasRedundancy: 0,\n                    degradPrio: 0,\n                    dependsOn: avcSample.key ? 2 : 1,\n                    isNonSync: avcSample.key ? 0 : 1\n                }\n            });\n        }\n        // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)\n\n        this._nextAvcDts = lastDTS + mp4SampleDuration;\n        const dropped = track.dropped;\n        track.dropped = 0;\n        if (outputSamples.length && this._forceFirstIDR) {\n            const flags = outputSamples[0].flags;\n            // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue\n            // https://code.google.com/p/chromium/issues/detail?id=229412\n            flags.dependsOn = 2;\n            flags.isNonSync = 0;\n        }\n        track.samples = outputSamples;\n        moof = MP4.moof(track.sequenceNumber++, firstDTS, track);\n        track.samples = [];\n\n        const data: any = {\n            payload: this._mergeBoxes('video', moof, mdat),\n            startPTS: firstPTS / timeScale,\n            endPTS: (lastPTS + mp4SampleDuration) / timeScale,\n            startDTS: firstDTS / timeScale,\n            endDTS: this._nextAvcDts / timeScale,\n            type: 'video',\n            hasAudio: false,\n            hasVideo: true,\n            nb: outputSamples.length,\n            dropped: dropped,\n            streamDTS,\n            key,\n            extra: this._extra,\n        };\n        this._videoTime.vLastPTS = data.endPTS;\n        this._observer.trigger(LasEvents.PARSING_DATA, data);\n\n        // 记录数据计算平均duration\n        if (time.nbSamples === 0) {\n            time.firstDTS = firstDTS;\n        }\n        time.nbSamples += nbSamples;\n        time.sampleDuration = Math.round((this._nextAvcDts - time.firstDTS) / time.nbSamples);\n        time.endDts = this._nextAvcDts;\n\n        return data;\n    }\n\n    remuxAudio(track: ATrack, timeOffset: number, contiguous: boolean, accurateTimeOffset: boolean = false) {\n        if (!track.samples.length) {\n            return null;\n        }\n        const inputTimeScale = track.inputTimeScale,\n            mp4timeScale = track.timescale,\n            scaleFactor = inputTimeScale / mp4timeScale,\n            mp4SampleDuration = track.isAAC ? 1024 : 1152,\n            inputSampleDuration = mp4SampleDuration * scaleFactor,\n            ptsNormalize = this._PTSNormalize,\n            initPTS = this._initPTS,\n            rawMPEG = !track.isAAC && this._typeSupported.mpeg,\n            outputSamples = [],\n            streamDTS = track.samples[0].streamDTS / 1000;\n        let offset = rawMPEG ? 0 : 8,\n            mp4Sample,\n            fillFrame,\n            mdat,\n            moof,\n            firstPTS,\n            lastPTS,\n            inputSamples = track.samples,\n            nextAudioPts = this._nextAudioPts,\n            resetPts = false;\n        if (typeof initPTS === 'undefined') {\n            return;\n        }\n        // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),\n        // for sake of clarity:\n        // consecutive fragments are frags with\n        //  - less than 100ms gaps between new time offset (if accurate) and next expected PTS OR\n        //  - less than 20 audio frames distance\n        // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)\n        // this helps ensuring audio continuity and this also avoids audio glitches/cut when switching quality,\n        // or reporting wrong duration on first audio frame\n        contiguous =\n            contiguous ||\n            !!(\n                inputSamples.length &&\n                nextAudioPts &&\n                ((accurateTimeOffset && Math.abs(timeOffset - nextAudioPts / inputTimeScale) < 0.1) ||\n                    Math.abs(inputSamples[0].pts - nextAudioPts - initPTS) < 20 * inputSampleDuration)\n            );\n\n        // compute normalized PTS\n        inputSamples.forEach(function (sample) {\n            sample.pts = sample.dts = ptsNormalize(sample.pts - initPTS, timeOffset * inputTimeScale);\n        });\n\n        // filter out sample with negative PTS that are not playable anyway\n        // if we don't remove these negative samples, they will shift all audio samples forward.\n        // leading to audio overlap between current / next fragment\n        inputSamples = inputSamples.filter(function (sample) {\n            return sample.pts >= 0;\n        });\n\n        // in case all samples have negative PTS, and have been filtered out, return now\n        if (inputSamples.length === 0) {\n            return null;\n        }\n        if (!contiguous || typeof nextAudioPts === 'undefined') {\n            if (!accurateTimeOffset) {\n                // if frag are mot contiguous and if we cant trust time offset,\n                // let's use first sample PTS as next audio PTS\n                nextAudioPts = inputSamples[0].pts;\n            } else {\n                // if timeOffset is accurate, let's use it as predicted next audio PTS\n                nextAudioPts = timeOffset * inputTimeScale;\n            }\n            resetPts = true;\n        }\n        // If the audio track is missing samples, the frames seem to get \"left-shifted\" within the\n        // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.\n        // In an effort to prevent this from happening, we inject frames here where there are gaps.\n        // When possible, we inject a silent frame; when that's not possible, we duplicate the last\n        // frame.\n        if (typeof nextAudioPts === 'undefined') {\n            return;\n        }\n        if (track.isAAC) {\n            const maxAudioFramesDrift = this._config.maxAudioFramesDrift;\n            for (let i = 0, nextPts = nextAudioPts; i < inputSamples.length;) {\n                // First, let's see how far off this frame is from where we expect it to be\n                const sample = inputSamples[i],\n                    pts = sample.pts,\n                    delta = pts - nextPts;\n\n                const duration = Math.abs((1000 * delta) / inputTimeScale);\n\n                // If we're overlapping by more than a duration, drop this sample\n                if (delta <= -maxAudioFramesDrift * inputSampleDuration) {\n                    Log.w(\n                        `Dropping 1 audio frame @ ${(nextPts / inputTimeScale).toFixed(3)}s due to ${Math.round(\n                            duration\n                        )} ms overlap.`\n                    );\n                    inputSamples.splice(i, 1);\n                    // Don't touch nextPtsNorm or i\n                } // eslint-disable-line brace-style\n\n                // Insert missing frames if:\n                // 1: We're more than maxAudioFramesDrift frame away\n                // 2: Not more than MAX_SILENT_FRAME_DURATION away\n                // 3: currentTime (aka nextPtsNorm) is not 0\n                else if (\n                    delta >= maxAudioFramesDrift * inputSampleDuration &&\n                    duration < MAX_SILENT_FRAME_DURATION &&\n                    nextPts\n                ) {\n                    const missing = Math.round(delta / inputSampleDuration);\n                    Log.w(\n                        `Injecting ${missing} audio frame @ ${(nextPts / inputTimeScale).toFixed(\n                            3\n                        )}s due to ${Math.round((1000 * delta) / inputTimeScale)} ms gap.`\n                    );\n                    for (let j = 0; j < missing; j++) {\n                        const newStamp = Math.max(nextPts, 0);\n                        fillFrame = AAC.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n                        if (!fillFrame) {\n                            Log.v('Unable to get silent frame for given audio codec; duplicating last frame instead.');\n                            fillFrame = sample.unit.subarray();\n                        }\n                        inputSamples.splice(i, 0, { unit: fillFrame, pts: newStamp, dts: newStamp });\n                        nextPts += inputSampleDuration;\n                        i++;\n                    }\n\n                    // Adjust sample to next expected pts\n                    sample.pts = sample.dts = nextPts;\n                    nextPts += inputSampleDuration;\n                    i++;\n                } else {\n                    // Otherwise, just adjust pts\n                    if (Math.abs(delta) > 0.1 * inputSampleDuration) {\n                        // Log.v(\n                        //     `Invalid frame delta ${Math.round(delta + inputSampleDuration)} at PTS ${Math.round(\n                        //         pts / 90\n                        //     )} (should be ${Math.round(inputSampleDuration)}).`\n                        // );\n                    }\n                    sample.pts = sample.dts = nextPts;\n                    nextPts += inputSampleDuration;\n                    i++;\n                }\n            }\n        }\n\n        // compute mdat size, as we eventually filtered/added some samples\n        let nbSamples = inputSamples.length;\n        let mdatSize = 0;\n        while (nbSamples--) {\n            mdatSize += inputSamples[nbSamples].unit.byteLength;\n        }\n\n        for (let j = 0, nbSamples = inputSamples.length; j < nbSamples; j++) {\n            const audioSample = inputSamples[j];\n            const unit = audioSample.unit;\n            let pts = audioSample.pts;\n            // console.log('audioSample.pts', audioSample);\n            // Log.v(`Audio/PTS:${Math.round(pts/90)}`);\n            // if not first sample\n            if (typeof lastPTS !== 'undefined' && mp4Sample) {\n                mp4Sample.duration = Math.round((pts - lastPTS) / scaleFactor);\n            } else {\n                const delta = Math.round((1000 * (pts - nextAudioPts)) / inputTimeScale);\n                let numMissingFrames = 0;\n                // if fragment are contiguous, detect hole/overlapping between fragments\n                // contiguous fragments are consecutive fragments from same quality level\n                // (same level, new SN = old SN + 1)\n                if (contiguous && track.isAAC) {\n                    // log delta\n                    if (delta) {\n                        if (delta > 0 && delta < MAX_SILENT_FRAME_DURATION) {\n                            numMissingFrames = Math.round((pts - nextAudioPts) / inputSampleDuration);\n                            Log.v(`${delta} ms hole between AAC samples detected,filling it`);\n                            if (numMissingFrames > 0) {\n                                fillFrame = AAC.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n                                if (!fillFrame) {\n                                    fillFrame = unit.subarray();\n                                }\n\n                                mdatSize += numMissingFrames * fillFrame.length;\n                            }\n                            // if we have frame overlap, overlapping for more than half a frame duraion\n                        } else if (delta < -12) {\n                            // drop overlapping audio frames... browser will deal with it\n                            Log.v(\n                                `drop overlapping AAC sample, expected/parsed/delta:${(\n                                    nextAudioPts / inputTimeScale\n                                ).toFixed(3)}s/${(pts / inputTimeScale).toFixed(3)}s/${-delta}ms`\n                            );\n                            mdatSize -= unit.byteLength;\n                            continue;\n                        }\n                        // set PTS/DTS to expected PTS/DTS\n                        pts = nextAudioPts;\n                    }\n                }\n                // remember first PTS of our audioSamples\n                firstPTS = pts;\n                if (mdatSize > 0) {\n                    mdatSize += offset;\n                    try {\n                        mdat = new Uint8Array(mdatSize);\n                    } catch (err) {\n                        this._observer.trigger(LasEvents.ERROR, {\n                            type: ErrorTypes.MUX_ERROR,\n                            details: ErrorDetails.REMUX_ALLOC_ERROR,\n                            fatal: false,\n                            bytes: mdatSize,\n                            reason: `fail allocating audio mdat ${mdatSize}`\n                        });\n                        return null;\n                    }\n                    if (!rawMPEG) {\n                        const view = new DataView(mdat.buffer);\n                        view.setUint32(0, mdatSize);\n                        mdat.set(MP4.types.mdat, 4);\n                    }\n                } else {\n                    track.samples = [];\n                    // no audio samples\n                    return null;\n                }\n                for (let i = 0; i < numMissingFrames; i++) {\n                    fillFrame = AAC.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n                    if (!fillFrame) {\n                        Log.v('Unable to get silent frame for given audio codec; duplicating this frame instead.');\n                        fillFrame = unit.subarray();\n                    }\n                    mdat.set(fillFrame, offset);\n                    offset += fillFrame.byteLength;\n                    mp4Sample = {\n                        size: fillFrame.byteLength,\n                        cts: 0,\n                        duration: 1024,\n                        flags: {\n                            isLeading: 0,\n                            isDependedOn: 0,\n                            hasRedundancy: 0,\n                            degradPrio: 0,\n                            dependsOn: 1\n                        }\n                    };\n                    outputSamples.push(mp4Sample);\n                }\n            }\n            if (!mdat) {\n                return;\n            }\n            mdat.set(unit, offset);\n            const unitLen = unit.byteLength;\n            offset += unitLen;\n            // PTS/DTS/initDTS/normPTS/normDTS/relative PTS\n            mp4Sample = {\n                size: unitLen,\n                cts: 0,\n                duration: 0,\n                flags: {\n                    isLeading: 0,\n                    isDependedOn: 0,\n                    hasRedundancy: 0,\n                    degradPrio: 0,\n                    dependsOn: 1\n                }\n            };\n            outputSamples.push(mp4Sample);\n            lastPTS = pts;\n        }\n        let lastSampleDuration = 0;\n        nbSamples = outputSamples.length;\n        if (!mp4Sample) {\n            return;\n        }\n        // set last sample duration as being identical to previous sample\n        if (nbSamples >= 2) {\n            lastSampleDuration = outputSamples[nbSamples - 2].duration;\n            mp4Sample.duration = lastSampleDuration;\n        }\n        if (nbSamples && typeof lastPTS === 'number' && mdat) {\n            if (mp4Sample && mp4Sample.duration === 0) {\n                mp4Sample.duration = track.isAAC ? 1024 : 1152;\n            }\n            // next audio sample PTS should be equal to last sample PTS + duration\n            this._nextAudioPts = nextAudioPts = lastPTS + scaleFactor * (lastSampleDuration || mp4SampleDuration);\n            // Log.v('Audio/PTS/PTSend:' + audioSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));\n            track.samples = outputSamples;\n            if (rawMPEG) {\n                moof = new Uint8Array();\n            } else {\n                moof = MP4.moof(track.sequenceNumber++, firstPTS / scaleFactor, track);\n            }\n\n            track.samples = [];\n            const start = firstPTS / inputTimeScale;\n            const end = nextAudioPts / inputTimeScale;\n            const audioData = {\n                payload: this._mergeBoxes('audio', moof, mdat),\n                startPTS: start,\n                endPTS: end,\n                startDTS: start,\n                endDTS: end,\n                type: 'audio',\n                hasAudio: true,\n                hasVideo: false,\n                nb: nbSamples,\n                streamDTS,\n                extra: this._extra,\n            };\n            this._videoTime.aLastPTS = audioData.endPTS;\n            this._observer.trigger(LasEvents.PARSING_DATA, audioData);\n            return audioData;\n        }\n        if (resetPts) {\n            delete this._nextAudioPts;\n        }\n        track.samples = [];\n        return null;\n    }\n\n    remuxEmptyAudio(track: ATrack, timeOffset: number, contiguous: boolean, videoData: any) {\n        if (typeof this._initDTS === 'undefined') {\n            return;\n        }\n        const inputTimeScale = track.inputTimeScale,\n            mp4timeScale = track.samplerate ? track.samplerate : inputTimeScale,\n            scaleFactor = inputTimeScale / mp4timeScale,\n            nextAudioPts = this._nextAudioPts,\n            // sync with video's timestamp\n            startDTS =\n                (typeof nextAudioPts !== 'undefined' ? nextAudioPts : videoData.startDTS * inputTimeScale) +\n                this._initDTS,\n            endDTS = videoData.endDTS * inputTimeScale + this._initDTS,\n            // one sample's duration value\n            sampleDuration = 1024,\n            frameDuration = scaleFactor * sampleDuration,\n            // samples count of this segment's duration\n            nbSamples = Math.ceil((endDTS - startDTS) / frameDuration),\n            // silent frame\n            silentFrame = AAC.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);\n\n        Log.w('remux empty Audio');\n        // Can't remux if we can't generate a silent frame...\n        if (!silentFrame) {\n            Log.d('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');\n            return;\n        }\n\n        const samples = [];\n        for (let i = 0; i < nbSamples; i++) {\n            const stamp = startDTS + i * frameDuration;\n            samples.push({ unit: silentFrame, pts: stamp, dts: stamp });\n        }\n        track.samples = samples;\n\n        this.remuxAudio(track, timeOffset, contiguous);\n    }\n\n    _PTSNormalize(value: number, reference?: number) {\n        let offset;\n        if (typeof reference === 'undefined') {\n            return value;\n        }\n\n        if (reference < value) {\n            // - 2^33\n            offset = -8589934592;\n        } else {\n            // + 2^33\n            offset = 8589934592;\n        }\n        /* PTS is 33bit (from 0 to 2^33 -1)\n      if diff between value and reference is bigger than half of the amplitude (2^32) then it means that\n      PTS looping occured. fill the gap */\n        while (Math.abs(value - reference) > 4294967296) {\n            value += offset;\n        }\n\n        return value;\n    }\n\n    _resetVideoTime() {\n        this._videoTime = { nbSamples: 0, firstDTS: 0, sampleDuration: 3000, vLastPTS: 0, aLastPTS: 0 };\n    }\n\n    private _mergeBoxes(type: string, ...arr: Uint8Array[]): Uint8Array {\n        if (this._initSegment[type]) {\n            arr.unshift(this._initSegment[type]);\n            delete this._initSegment[type];\n        }\n        const len = arr.reduce((prev, cur) => {\n            if (cur) {\n                return prev + cur.byteLength;\n            }\n            return prev;\n        }, 0);\n        const result = new Uint8Array(len);\n        let index = 0;\n        arr.forEach(cur => {\n            if (cur) {\n                result.set(cur, index);\n                index += cur.byteLength;\n            }\n        });\n        return result;\n    }\n}\n\nexport default MP4Remuxer;\n","import LasEvents from '../core/events';\nimport Observer from '../core/observer';\nimport { ErrorTypes, ErrorDetails } from '../core/errors';\nimport { Log } from '../utils/log';\n\nexport interface ASCInfo {\n    objectType: number;\n    sampleingIndex: number;\n    chanelConfig: number;\n}\n\nexport interface ASCConfig {\n    config: number[];\n    samplerate: number;\n    channelCount: number;\n    codec: string;\n    manifestCodec: string;\n}\n\nexport function getAudioConfig(observer: Observer, info: ASCInfo, audioCodec: string = ''): ASCConfig | null {\n    let extensionSampleingIndex: number, // :int\n        config: Array<number>,\n        objectType = info.objectType,\n        sampleingIndex = info.sampleingIndex,\n        chanelConfig = info.chanelConfig;\n    const userAgent = navigator.userAgent.toLowerCase(),\n        manifestCodec = audioCodec,\n        sampleingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    if (sampleingIndex < 0 || sampleingIndex >= sampleingRates.length) {\n        observer.trigger(LasEvents.ERROR, {\n            type: ErrorTypes.MUX_ERROR,\n            details: ErrorDetails.PARSING_ERROR,\n            fatal: true,\n            reason: `invalid sampling index:${sampleingIndex}`\n        });\n        return null;\n    }\n    if (chanelConfig < 0 || chanelConfig >= 8) {\n        observer.trigger(LasEvents.ERROR, {\n            type: ErrorTypes.MUX_ERROR,\n            details: ErrorDetails.PARSING_ERROR,\n            fatal: true,\n            reason: `invalid chanelConfig:${chanelConfig}`\n        });\n        return null;\n    }\n\n    Log.v(\n        `manifest codec:${audioCodec},data:type:${objectType},sampleingIndex:${sampleingIndex}[${\n            sampleingRates[sampleingIndex]\n        }Hz],channelConfig:${chanelConfig}`\n    );\n    // firefox: freq less than 24kHz = AAC SBR (HE-AAC)\n    if ((/firefox/i).test(userAgent)) {\n        if (sampleingIndex >= 6) {\n            objectType = 5;\n            config = new Array(4);\n            // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n            // there is a factor 2 between frame sample rate and output sample rate\n            // multiply frequency by 2 (see table below, equivalent to substract 3)\n            extensionSampleingIndex = sampleingIndex - 3;\n        } else {\n            objectType = 2;\n            config = new Array(2);\n            extensionSampleingIndex = sampleingIndex;\n        }\n        // Android : always use AAC\n    } else if (userAgent.indexOf('android') !== -1) {\n        objectType = 2;\n        config = new Array(2);\n        extensionSampleingIndex = sampleingIndex;\n    } else {\n        /*  for other browsers (Chrome/Vivaldi/Opera ...)\n        always force audio type to be HE-AAC SBR, as some browsers do not\n        support audio codec switch properly (like Chrome ...)\n    */\n        objectType = 5;\n        config = new Array(4);\n        // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\n        if (\n            audioCodec && (audioCodec.indexOf('mp4a.40.29') !== -1 || audioCodec.indexOf('mp4a.40.5') !== -1)\n            || !audioCodec && sampleingIndex >= 6\n        ) {\n            // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\n            // there is a factor 2 between frame sample rate and output sample rate\n            // multiply frequency by 2 (see table below, equivalent to substract 3)\n            extensionSampleingIndex = sampleingIndex - 3;\n        } else {\n            /* if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1)\n                OR(manifest codec not specified and mono audio)\n                Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.\n                This is not a problem with stereo.\n            */\n            if (\n                audioCodec\n                    && audioCodec.indexOf('mp4a.40.2') !== -1\n                    && (sampleingIndex >= 6 && chanelConfig === 1 || (/vivaldi/i).test(userAgent))\n                || !audioCodec && chanelConfig === 1\n            ) {\n                objectType = 2;\n                config = new Array(2);\n            }\n            extensionSampleingIndex = sampleingIndex;\n        }\n    }\n    /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config\n      ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()\n    Audio Profile / Audio Object Type\n    0: Null\n    1: AAC Main\n    2: AAC LC (Low Complexity)\n    3: AAC SSR (Scalable Sample Rate)\n    4: AAC LTP (Long Term Prediction)\n    5: SBR (Spectral Band Replication)\n    6: AAC Scalable\n   sampling freq\n    0: 96000 Hz\n    1: 88200 Hz\n    2: 64000 Hz\n    3: 48000 Hz\n    4: 44100 Hz\n    5: 32000 Hz\n    6: 24000 Hz\n    7: 22050 Hz\n    8: 16000 Hz\n    9: 12000 Hz\n    10: 11025 Hz\n    11: 8000 Hz\n    12: 7350 Hz\n    13: Reserved\n    14: Reserved\n    15: frequency is written explictly\n    Channel Configurations\n    These are the channel configurations:\n    0: Defined in AOT Specifc Config\n    1: 1 channel: front-center\n    2: 2 channels: front-left, front-right\n  */\n    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\n    config[0] = objectType << 3;\n    // samplingFrequencyIndex\n    config[0] |= (sampleingIndex & 0x0e) >> 1;\n    config[1] |= (sampleingIndex & 0x01) << 7;\n    // channelConfiguration\n    config[1] |= chanelConfig << 3;\n    if (objectType === 5) {\n        // extensionSampleingIndex\n        config[1] |= (extensionSampleingIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleingIndex & 0x01) << 7;\n        // objectType (force to 2, chrome is checking that object type is less than 5 ???\n        //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\n        config[2] |= 2 << 2;\n        config[3] = 0;\n    }\n    return {\n        config: config,\n        samplerate: sampleingRates[sampleingIndex],\n        channelCount: chanelConfig,\n        codec: 'mp4a.40.' + objectType,\n        manifestCodec: manifestCodec\n    };\n}\n","import Observer from '../core/observer';\nimport { ATrack } from '../types/remux';\nimport { ASCInfo, getAudioConfig } from './get-audio-config';\n\nexport function parseData(data: Uint8Array, offset: number): ASCInfo {\n    return {\n        objectType: data[offset + 2] >>> 3, // 5 bits\n        sampleingIndex: (data[offset + 2] & 0x07) << 1 | data[offset + 3] >>> 7, // 4 bits\n        chanelConfig: (data[offset + 3] & 0x78) >>> 3 // 4 bits\n    };\n}\n\nexport function initTrackConfig(track: ATrack, observer: Observer, data: Uint8Array, offset: number, audioCodec: string = '') {\n    if (!track.samplerate) {\n        const config = getAudioConfig(observer, parseData(data, offset), audioCodec);\n        if (config) {\n            track.config = config.config;\n            track.timescale = track.samplerate = config.samplerate;\n            track.channelCount = config.channelCount;\n            track.codec = config.codec;\n            track.manifestCodec = config.manifestCodec;\n            track.isAAC = true;\n        }\n    }\n}\n\nexport function getFrameDuration(samplerate: number): number {\n    return 1024 * 1000 / samplerate;\n}\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\n// Exponential-Golomb buffer decoder\nclass ExpGolomb {\n    private _buffer: Uint8Array | null;\n    private _buffer_index: number;\n    private _total_bytes: number;\n    private _total_bits: number;\n    private _current_word: number;\n    private _current_word_bits_left: number;\n\n    constructor(uint8array: Uint8Array) {\n        this._buffer = uint8array;\n        this._buffer_index = 0;\n        this._total_bytes = uint8array.byteLength;\n        this._total_bits = uint8array.byteLength * 8;\n        this._current_word = 0;\n        this._current_word_bits_left = 0;\n    }\n\n    destroy() {\n        this._buffer = null;\n    }\n\n    _fillCurrentWord() {\n        let buffer_bytes_left = this._total_bytes - this._buffer_index;\n        if (buffer_bytes_left <= 0 || !this._buffer) {\n            throw new Error('ExpGolomb: _fillCurrentWord() but no bytes available');\n        }\n\n        let bytes_read = Math.min(4, buffer_bytes_left);\n        let word = new Uint8Array(4);\n        word.set(this._buffer.subarray(this._buffer_index, this._buffer_index + bytes_read));\n        this._current_word = new DataView(word.buffer).getUint32(0, false);\n\n        this._buffer_index += bytes_read;\n        this._current_word_bits_left = bytes_read * 8;\n    }\n\n    readBits(bits: number) {\n        if (bits > 32) {\n            throw new Error('ExpGolomb: readBits() bits exceeded max 32bits!');\n        }\n\n        if (bits <= this._current_word_bits_left) {\n            let result = this._current_word >>> (32 - bits);\n            this._current_word <<= bits;\n            this._current_word_bits_left -= bits;\n            return result;\n        }\n\n        let result = this._current_word_bits_left ? this._current_word : 0;\n        result = result >>> (32 - this._current_word_bits_left);\n        let bits_need_left = bits - this._current_word_bits_left;\n\n        this._fillCurrentWord();\n        let bits_read_next = Math.min(bits_need_left, this._current_word_bits_left);\n\n        let result2 = this._current_word >>> (32 - bits_read_next);\n        this._current_word <<= bits_read_next;\n        this._current_word_bits_left -= bits_read_next;\n\n        result = (result << bits_read_next) | result2;\n        return result;\n    }\n\n    readBool() {\n        return this.readBits(1) === 1;\n    }\n\n    // ():int\n    readUByte() {\n        return this.readBits(8);\n    }\n\n    readUShort() {\n        return this.readBits(16);\n    }\n\n    readUInt() {\n        return this.readBits(32);\n    }\n\n    readByte() {\n        return this.readBits(8);\n    }\n\n    _skipLeadingZero(): number {\n        let zero_count;\n        for (zero_count = 0; zero_count < this._current_word_bits_left; zero_count++) {\n            if ((this._current_word & (0x80000000 >>> zero_count)) !== 0) {\n                this._current_word <<= zero_count;\n                this._current_word_bits_left -= zero_count;\n                return zero_count;\n            }\n        }\n        this._fillCurrentWord();\n        return zero_count + this._skipLeadingZero();\n    }\n\n    readUEG() {\n        // unsigned exponential golomb\n        let leading_zeros = this._skipLeadingZero();\n        return this.readBits(leading_zeros + 1) - 1;\n    }\n\n    readSEG() {\n        // signed exponential golomb\n        let value = this.readUEG();\n        if (value & 0x01) {\n            return (value + 1) >>> 1;\n        } else {\n            return -1 * (value >>> 1);\n        }\n    }\n\n    readSliceType() {\n        // skip NALu type\n        this.readUByte();\n        // discard first_mb_in_slice\n        this.readUEG();\n        // return slice_type\n        return this.readUEG();\n    }\n\n    getBitsLeft() {\n        return (this._total_bytes - this._buffer_index) * 8 + this._current_word_bits_left;\n    }\n\n    get bytesAvailable() {\n        return this._total_bytes - this._buffer_index;\n    }\n}\n\nexport default ExpGolomb;\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport ExpGolomb from './exp-golomb';\n\nconst HEVC_MAX_SPS_COUNT = 16;\nconst HEVC_MAIN: Record<number, string> = { 1: 'Main', 2: 'Main 10', 3: 'Main Still Picture', 4: 'Rext' };\nconst HEVC_LEVELS: Record<number, number> = {\n    30: 1,\n    60: 2,\n    63: 2.1,\n    90: 3,\n    93: 3.1,\n    120: 4,\n    123: 4.1,\n    150: 5,\n    153: 5.1,\n    156: 5.2,\n    180: 6,\n    183: 6.1,\n    186: 6.2,\n    255: 8.5\n};\n\ntype SPSInfo = {\n    profile_string: string; // baseline, high, high10, ...\n    level_string: string; // 3, 3.1, 4, 4.1, 5, 5.1, ...\n    bit_depth: number; // 8bit, 10bit, ...\n    chroma_format: number; // 4:2:0, 4:2:2, ...\n    chroma_format_string: string;\n    frame_rate: {\n        fixed: boolean;\n        fps: number;\n        fps_den: number;\n        fps_num: number;\n    };\n    sar_ratio: {\n        width: number;\n        height: number;\n    };\n    codec_size: {\n        width: number;\n        height: number;\n    };\n    present_size: {\n        width: number;\n        height: number;\n    };\n};\n\ntype HEVCSPSInfo = {\n    chroma_format_string: string;\n    profile_string: string;\n    level_string: string;\n    width: number;\n    height: number;\n};\n\nclass SPSParser {\n    static _ebsp2rbsp(uint8array: Uint8Array) {\n        const src = uint8array;\n        const src_length = src.byteLength;\n        const dst = new Uint8Array(src_length);\n        let dst_idx = 0;\n\n        for (let i = 0; i < src_length; i++) {\n            if (i >= 2) {\n                // Unescape: Skip 0x03 after 00 00\n                if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n                    continue;\n                }\n            }\n            dst[dst_idx] = src[i];\n            dst_idx++;\n        }\n\n        return new Uint8Array(dst.buffer, 0, dst_idx);\n    }\n\n    static parseHEVCSPS(uint8array: Uint8Array): HEVCSPSInfo | null {\n        const rbsp = SPSParser._ebsp2rbsp(uint8array);\n        let gb: ExpGolomb | null = new ExpGolomb(rbsp);\n        const ptl: any = { general_ptl: {}, sub_layer_ptl: {} };\n        gb.readBits(16);\n        gb.readBits(4); // sps_video_parameter_set_id\n        let max_sub_layers = gb.readBits(3) + 1; // sps_max_sub_layers_minus1\n        gb.readBits(1); // temporalIdNested\n\n        if (!SPSParser._parsePTL(gb, ptl, max_sub_layers)) {\n            return null;\n        }\n\n        const sps_id = gb.readUEG();\n        if (sps_id >= HEVC_MAX_SPS_COUNT) {\n            return null;\n        }\n        let chroma_format_idc = gb.readUEG();\n\n        if (chroma_format_idc == 3) {\n            const separate_colour_plane_flag = gb.readBits(1);\n            if (separate_colour_plane_flag) {\n                chroma_format_idc = 0;\n            }\n        }\n\n        const width = gb.readUEG();\n        const height = gb.readUEG();\n        gb.destroy();\n        gb = null;\n        // let conformance_window_flag = gb.readBits(1);\n        return {\n            chroma_format_string: chroma_format_idc === 3 ? '4:4:4' : '4:2:0',\n            profile_string: ptl.general_ptl.profile_string,\n            level_string: ptl.general_ptl.level_string,\n            width: width,\n            height: height\n        };\n        // hvcc_parse_ptl end\n    }\n\n    static _parsePTL(gb: ExpGolomb, ptl: any, max_num_sub_layers: number) {\n        if (\n            !this._decodeProfileTierLevel(gb, ptl.general_ptl) ||\n            gb.getBitsLeft() < 8 + 8 * 2 * (max_num_sub_layers - 1 > 0 ? 1 : 0)\n        ) {\n            return false;\n        }\n\n        ptl.general_ptl.level_idc = gb.readBits(8);\n        ptl.general_ptl.level_string = this.getHEVCLevelString(ptl.general_ptl.level_idc);\n        ptl.sub_layer_profile_present_flag = [];\n        ptl.sub_layer_level_present_flag = [];\n        for (let i = 0; i < max_num_sub_layers - 1; i++) {\n            ptl.sub_layer_profile_present_flag[i] = gb.readBits(1);\n            ptl.sub_layer_level_present_flag[i] = gb.readBits(1);\n        }\n\n        if (max_num_sub_layers - 1 > 0) {\n            for (let i = max_num_sub_layers - 1; i < 8; i++) {\n                gb.readBits(2); // reserved_zero_2bits[i]\n            }\n        }\n        for (let i = 0; i < max_num_sub_layers - 1; i++) {\n            if (ptl.sub_layer_profile_present_flag[i] && this._decodeProfileTierLevel(gb, ptl.sub_layer_ptl)) {\n                return false;\n            }\n            if (ptl.sub_layer_level_present_flag[i]) {\n                if (gb.getBitsLeft() < 8) {\n                    return false;\n                } else ptl.sub_layer_ptl[i].level_idc = gb.readBits(8);\n            }\n        }\n        return true;\n    }\n\n    static _decodeProfileTierLevel(gb: ExpGolomb, ptl: any) {\n        if (gb.getBitsLeft() < 2 + 1 + 5 + 32 + 4 + 16 + 16 + 12) {\n            return false;\n        }\n\n        ptl.profile_space = gb.readBits(2);\n        ptl.tier_flag = gb.readBits(1);\n        ptl.profile_idc = gb.readBits(5);\n        ptl.profile_compatibility_flag = [];\n\n        for (let i = 0; i < 32; i++) {\n            ptl.profile_compatibility_flag[i] = gb.readBits(1);\n            if (ptl.profile_idc == 0 && i > 0 && ptl.profile_compatibility_flag[i]) ptl.profile_idc = i;\n        }\n        ptl.progressive_source_flag = gb.readBits(1);\n        ptl.interlaced_source_flag = gb.readBits(1);\n        ptl.non_packed_constraint_flag = gb.readBits(1);\n        ptl.frame_only_constraint_flag = gb.readBits(1);\n\n        gb.readBits(16);\n        gb.readBits(16);\n        gb.readBits(12);\n        ptl.profile_string = this.getHEVCProfileString(ptl.profile_idc);\n        return true;\n    }\n\n    static parseSPS(uint8array: Uint8Array): SPSInfo {\n        const rbsp = SPSParser._ebsp2rbsp(uint8array);\n        let gb: ExpGolomb | null = new ExpGolomb(rbsp);\n\n        gb.readByte();\n        const profile_idc = gb.readByte(); // profile_idc\n        gb.readByte(); // constraint_set_flags[5] + reserved_zero[3]\n        const level_idc = gb.readByte(); // level_idc\n        gb.readUEG(); // seq_parameter_set_id\n\n        const profile_string = SPSParser.getProfileString(profile_idc);\n        const level_string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc = 1;\n        let chroma_format = 420;\n        const chroma_format_table = [0, 420, 422, 444];\n        let bit_depth = 8;\n\n        if (\n            profile_idc === 100 ||\n            profile_idc === 110 ||\n            profile_idc === 122 ||\n            profile_idc === 244 ||\n            profile_idc === 44 ||\n            profile_idc === 83 ||\n            profile_idc === 86 ||\n            profile_idc === 118 ||\n            profile_idc === 128 ||\n            profile_idc === 138 ||\n            profile_idc === 144\n        ) {\n            chroma_format_idc = gb.readUEG();\n            if (chroma_format_idc === 3) {\n                gb.readBits(1); // separate_colour_plane_flag\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth = gb.readUEG() + 8; // bit_depth_luma_minus8\n            gb.readUEG(); // bit_depth_chroma_minus8\n            gb.readBits(1); // qpprime_y_zero_transform_bypass_flag\n            if (gb.readBool()) {\n                // seq_scaling_matrix_present_flag\n                const scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n                for (let i = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {\n                        // seq_scaling_list_present_flag\n                        if (i < 6) {\n                            SPSParser._skipScalingList(gb, 16);\n                        } else {\n                            SPSParser._skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        gb.readUEG(); // log2_max_frame_num_minus4\n        const pic_order_cnt_type = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG(); // log2_max_pic_order_cnt_lsb_minus_4\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1); // delta_pic_order_always_zero_flag\n            gb.readSEG(); // offset_for_non_ref_pic\n            gb.readSEG(); // offset_for_top_to_bottom_field\n            const num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG(); // offset_for_ref_frame\n            }\n        }\n        gb.readUEG(); // max_num_ref_frames\n        gb.readBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        const pic_width_in_mbs_minus1 = gb.readUEG();\n        const pic_height_in_map_units_minus1 = gb.readUEG();\n\n        const frame_mbs_only_flag = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            gb.readBits(1); // mb_adaptive_frame_field_flag\n        }\n        gb.readBits(1); // direct_8x8_inference_flag\n\n        let frame_crop_left_offset = 0;\n        let frame_crop_right_offset = 0;\n        let frame_crop_top_offset = 0;\n        let frame_crop_bottom_offset = 0;\n\n        const frame_cropping_flag = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width = 1,\n            sar_height = 1;\n        let fps = 0,\n            fps_fixed = true,\n            fps_num = 0,\n            fps_den = 0;\n\n        const vui_parameters_present_flag = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {\n                // aspect_ratio_info_present_flag\n                const aspect_ratio_idc = gb.readByte();\n                const sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                const sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = (gb.readByte() << 8) | gb.readByte();\n                    sar_height = (gb.readByte() << 8) | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {\n                // overscan_info_present_flag\n                gb.readBool(); // overscan_appropriate_flag\n            }\n            if (gb.readBool()) {\n                // video_signal_type_present_flag\n                gb.readBits(4); // video_format & video_full_range_flag\n                if (gb.readBool()) {\n                    // colour_description_present_flag\n                    gb.readBits(24); // colour_primaries & transfer_characteristics & matrix_coefficients\n                }\n            }\n            if (gb.readBool()) {\n                // chroma_loc_info_present_flag\n                gb.readUEG(); // chroma_sample_loc_type_top_field\n                gb.readUEG(); // chroma_sample_loc_type_bottom_field\n            }\n            if (gb.readBool()) {\n                // timing_info_present_flag\n                const num_units_in_tick = gb.readBits(32);\n                const time_scale = gb.readBits(32);\n                fps_fixed = gb.readBool(); // fixed_frame_rate_flag\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x = 0,\n            crop_unit_y = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            const sub_wc = chroma_format_idc === 3 ? 1 : 2;\n            const sub_hc = chroma_format_idc === 1 ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        const present_width = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n        return {\n            profile_string, // baseline, high, high10, ...\n            level_string, // 3, 3.1, 4, 4.1, 5, 5.1, ...\n            bit_depth, // 8bit, 10bit, ...\n            chroma_format, // 4:2:0, 4:2:2, ...\n            chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n            frame_rate: {\n                fixed: fps_fixed,\n                fps,\n                fps_den,\n                fps_num\n            },\n\n            sar_ratio: {\n                width: sar_width,\n                height: sar_height\n            },\n\n            codec_size: {\n                width: codec_width,\n                height: codec_height\n            },\n\n            present_size: {\n                width: present_width,\n                height: codec_height\n            }\n        };\n    }\n\n    static _skipScalingList(gb: ExpGolomb, count: number) {\n        let last_scale = 8,\n            next_scale = 8;\n        let delta_scale = 0;\n        for (let i = 0; i < count; i++) {\n            if (next_scale !== 0) {\n                delta_scale = gb.readSEG();\n                next_scale = (last_scale + delta_scale + 256) % 256;\n            }\n            last_scale = next_scale === 0 ? last_scale : next_scale;\n        }\n    }\n\n    static getProfileString(profile_idc: number) {\n        switch (profile_idc) {\n            case 66:\n                return 'Baseline';\n            case 77:\n                return 'Main';\n            case 88:\n                return 'Extended';\n            case 100:\n                return 'High';\n            case 110:\n                return 'High10';\n            case 122:\n                return 'High422';\n            case 244:\n                return 'High444';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    static getLevelString(level_idc: number) {\n        return (level_idc / 10).toFixed(1);\n    }\n\n    static getChromaFormatString(chroma: number) {\n        switch (chroma) {\n            case 420:\n                return '4:2:0';\n            case 422:\n                return '4:2:2';\n            case 444:\n                return '4:4:4';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    static getHEVCProfileString(profile_idc: number) {\n        return HEVC_MAIN[profile_idc];\n    }\n\n    static getHEVCLevelString(level_idc: number) {\n        return HEVC_LEVELS[level_idc];\n    }\n}\n\nexport default SPSParser;\n","/* eslint-disable */\nfunction decodeUTF8(uint8array: Uint8Array) {\n    const out = [];\n    const input = uint8array;\n    let i = 0;\n    const length = uint8array.length;\n\n    while (i < length) {\n        if (input[i] < 0x80) {\n            out.push(String.fromCharCode(input[i]));\n            ++i;\n            continue;\n        } else if (input[i] < 0xc0) {\n            // fallthrough\n        } else if (input[i] < 0xe0) {\n            if (checkContinuation(input, i, 1)) {\n                const ucs4 = ((input[i] & 0x1f) << 6) | (input[i + 1] & 0x3f);\n                if (ucs4 >= 0x80) {\n                    out.push(String.fromCharCode(ucs4 & 0xffff));\n                    i += 2;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xf0) {\n            if (checkContinuation(input, i, 2)) {\n                const ucs4 = ((input[i] & 0xf) << 12) | ((input[i + 1] & 0x3f) << 6) | (input[i + 2] & 0x3f);\n                if (ucs4 >= 0x800 && (ucs4 & 0xf800) !== 0xd800) {\n                    out.push(String.fromCharCode(ucs4 & 0xffff));\n                    i += 3;\n                    continue;\n                }\n            }\n        } else if (input[i] < 0xf8) {\n            if (checkContinuation(input, i, 3)) {\n                let ucs4 =\n                    ((input[i] & 0x7) << 18) |\n                    ((input[i + 1] & 0x3f) << 12) |\n                    ((input[i + 2] & 0x3f) << 6) |\n                    (input[i + 3] & 0x3f);\n                if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n                    ucs4 -= 0x10000;\n                    out.push(String.fromCharCode((ucs4 >>> 10) | 0xd800));\n                    out.push(String.fromCharCode((ucs4 & 0x3ff) | 0xdc00));\n                    i += 4;\n                    continue;\n                }\n            }\n        }\n        out.push(String.fromCharCode(0xfffd));\n        ++i;\n    }\n\n    return out.join('');\n}\n\nfunction checkContinuation(uint8array: Uint8Array, start: number, checkLength: number) {\n    let array = uint8array;\n    if (start + checkLength < array.length) {\n        while (checkLength--) {\n            if ((array[++start] & 0xc0) !== 0x80) return false;\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nexport default decodeUTF8;\n","/* eslint-disable */\nimport decodeUTF8 from '../../utils/decodeUTF8';\nimport { Log } from '../../utils/log';\n\nlet tag: string = 'AMF';\n\nexport default class AMF {\n    /**\n     * 解析metadata\n     */\n    static parseMetadata(arr: ArrayBuffer) {\n        let data: any = {};\n        try {\n            let name = AMF.parseScript(arr, 0);\n            let value = AMF.parseScript(arr, name.size);\n            data[name.data] = value.data;\n        } catch (e) {\n            Log.e('AMF', e.toString());\n        }\n        return data;\n    }\n\n    static parseObject(arrayBuffer: ArrayBuffer, dataOffset: number) {\n        let name = AMF.parseString(arrayBuffer, dataOffset);\n        let value = AMF.parseScript(arrayBuffer, dataOffset + name.size);\n        let isObjectEnd = value.objectEnd;\n\n        return {\n            data: {\n                name: name.data,\n                value: value.data\n            },\n            size: value.size,\n            objectEnd: isObjectEnd\n        };\n    }\n\n    static parseVariable(arrayBuffer: ArrayBuffer, dataOffset: number) {\n        return AMF.parseObject(arrayBuffer, dataOffset);\n    }\n    static parseLongString(arrayBuffer: ArrayBuffer, dataOffset: number) {\n        let v = new DataView(arrayBuffer, dataOffset);\n        let length = v.getUint32(0);\n\n        let str;\n        if (length > 0) {\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 4, length));\n        } else {\n            str = '';\n        }\n\n        return {\n            data: str,\n            size: 4 + length\n        };\n    }\n    static parseDate(arrayBuffer: ArrayBuffer, dataOffset: number) {\n        let v = new DataView(arrayBuffer, dataOffset);\n        let timestamp = v.getFloat64(0);\n        let localTimeOffset = v.getInt16(8);\n        timestamp += localTimeOffset * 60 * 1000; // get UTC time\n\n        return {\n            data: new Date(timestamp),\n            size: 8 + 2\n        };\n    }\n    static parseString(arrayBuffer: ArrayBuffer, dataOffset: number) {\n        let v = new DataView(arrayBuffer, dataOffset);\n        let length = v.getUint16(0);\n        let str;\n        if (length > 0) {\n            str = decodeUTF8(new Uint8Array(arrayBuffer, dataOffset + 2, length));\n        } else {\n            str = '';\n        }\n        return {\n            data: str,\n            size: 2 + length\n        };\n    }\n\n    static parseScript(arr: ArrayBuffer, dataOffset: number) {\n        let dataSize = arr.byteLength;\n        let offset = dataOffset;\n        // let uint8 = new Uint8Array(arr);\n        let buffer = arr;\n        let dv = new DataView(buffer, 0);\n\n        let value: any = null;\n        let type = dv.getUint8(offset);\n        offset += 1;\n        let objectEnd = false;\n\n        switch (type) {\n            case 0: // Number(Double) type\n                value = dv.getFloat64(offset);\n                offset += 8;\n                break;\n            case 1: {\n                // Boolean type\n                let b = dv.getUint8(offset);\n                value = !!b;\n                offset += 1;\n                break;\n            }\n            case 2: {\n                // String type\n                let amfstr = AMF.parseString(buffer, offset);\n                value = amfstr.data;\n                offset += amfstr.size;\n                break;\n            }\n            case 3: {\n                // Object(s) type\n                value = {};\n                let terminal = 0; // workaround for malformed Objects which has missing ScriptDataObjectEnd\n                if ((dv.getUint32(dataSize - 4) & 0x00ffffff) === 9) {\n                    terminal = 3;\n                }\n                while (offset < dataSize - 4) {\n                    // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n                    let amfobj = AMF.parseObject(buffer, offset);\n\n                    if (amfobj.objectEnd) {\n                        break;\n                    }\n                    value[amfobj.data.name] = amfobj.data.value;\n                    // dataOffset += amfobj.size;\n                    offset = amfobj.size;\n                }\n                if (offset <= dataSize - 3) {\n                    let marker = dv.getUint32(offset - 1) & 0x00ffffff;\n                    if (marker === 9) {\n                        offset += 3;\n                    }\n                }\n                break;\n            }\n            case 8: {\n                // ECMA array type (Mixed array)\n                value = {};\n                // dataOffset += 1;\n                offset += 4; // ECMAArrayLength(UI32)\n                let terminal = 0; // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n                if ((dv.getUint32(dataSize - 4) & 0x00ffffff) === 9) {\n                    terminal = 3;\n                }\n                while (offset < dataSize - 8) {\n                    // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n                    let amfvar = AMF.parseVariable(buffer, offset);\n\n                    if (amfvar.objectEnd) {\n                        break;\n                    }\n                    value[amfvar.data.name] = amfvar.data.value;\n                    offset = amfvar.size;\n                }\n                if (offset <= dataSize - 3) {\n                    let marker = dv.getUint32(offset - 1) & 0x00ffffff;\n                    if (marker === 9) {\n                        offset += 3;\n                    }\n                }\n                break;\n            }\n            case 9: // ScriptDataObjectEnd\n                value = undefined;\n                offset = 1;\n                objectEnd = true;\n                break;\n            case 10: {\n                // Strict array type\n                // ScriptDataValue[n]. NOTE: according to video_file_format_spec_v10_1.pdf\n                value = [];\n                let strictArrayLength = dv.getUint32(offset);\n                offset += 4;\n                for (let i = 0; i < strictArrayLength; i++) {\n                    let val = AMF.parseScript(buffer, offset);\n                    value.push(val.data);\n                    offset = val.size;\n                }\n                break;\n            }\n            case 11: {\n                // Date type\n                let date = AMF.parseDate(buffer, offset + 1);\n                value = date.data;\n                offset += date.size;\n                break;\n            }\n            case 12: {\n                // Long string type\n                let amfLongStr = AMF.parseString(buffer, offset + 1);\n                value = amfLongStr.data;\n                offset += amfLongStr.size;\n                break;\n            }\n            default:\n                // ignore and skip\n                offset = dataSize;\n                Log.v(tag, 'AMF', 'Unsupported AMF value type ' + type);\n        }\n        return {\n            data: value,\n            size: offset,\n            objectEnd\n        };\n    }\n}\n","import { FlvTag, FlvTagType } from './flv';\n\nconst configBody = new Uint8Array([\n    23,\n    0,\n    0,\n    0,\n    0,\n    1,\n    100,\n    0,\n    10,\n    255,\n    225,\n    0,\n    24,\n    103,\n    100,\n    0,\n    10,\n    172,\n    114,\n    4,\n    68,\n    122,\n    16,\n    0,\n    0,\n    3,\n    0,\n    16,\n    0,\n    0,\n    3,\n    3,\n    32,\n    241,\n    34,\n    88,\n    70,\n    1,\n    0,\n    6,\n    104,\n    232,\n    67,\n    143,\n    44,\n    139\n]);\n\nconst frameI = new Uint8Array([\n    23,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    2,\n    176,\n    6,\n    5,\n    255,\n    255,\n    172,\n    220,\n    69,\n    233,\n    189,\n    230,\n    217,\n    72,\n    183,\n    150,\n    44,\n    216,\n    32,\n    217,\n    35,\n    238,\n    239,\n    120,\n    50,\n    54,\n    52,\n    32,\n    45,\n    32,\n    99,\n    111,\n    114,\n    101,\n    32,\n    49,\n    53,\n    50,\n    32,\n    114,\n    50,\n    56,\n    53,\n    52,\n    32,\n    101,\n    57,\n    97,\n    53,\n    57,\n    48,\n    51,\n    32,\n    45,\n    32,\n    72,\n    46,\n    50,\n    54,\n    52,\n    47,\n    77,\n    80,\n    69,\n    71,\n    45,\n    52,\n    32,\n    65,\n    86,\n    67,\n    32,\n    99,\n    111,\n    100,\n    101,\n    99,\n    32,\n    45,\n    32,\n    67,\n    111,\n    112,\n    121,\n    108,\n    101,\n    102,\n    116,\n    32,\n    50,\n    48,\n    48,\n    51,\n    45,\n    50,\n    48,\n    49,\n    55,\n    32,\n    45,\n    32,\n    104,\n    116,\n    116,\n    112,\n    58,\n    47,\n    47,\n    119,\n    119,\n    119,\n    46,\n    118,\n    105,\n    100,\n    101,\n    111,\n    108,\n    97,\n    110,\n    46,\n    111,\n    114,\n    103,\n    47,\n    120,\n    50,\n    54,\n    52,\n    46,\n    104,\n    116,\n    109,\n    108,\n    32,\n    45,\n    32,\n    111,\n    112,\n    116,\n    105,\n    111,\n    110,\n    115,\n    58,\n    32,\n    99,\n    97,\n    98,\n    97,\n    99,\n    61,\n    49,\n    32,\n    114,\n    101,\n    102,\n    61,\n    49,\n    54,\n    32,\n    100,\n    101,\n    98,\n    108,\n    111,\n    99,\n    107,\n    61,\n    49,\n    58,\n    48,\n    58,\n    48,\n    32,\n    97,\n    110,\n    97,\n    108,\n    121,\n    115,\n    101,\n    61,\n    48,\n    120,\n    51,\n    58,\n    48,\n    120,\n    49,\n    51,\n    51,\n    32,\n    109,\n    101,\n    61,\n    117,\n    109,\n    104,\n    32,\n    115,\n    117,\n    98,\n    109,\n    101,\n    61,\n    49,\n    48,\n    32,\n    112,\n    115,\n    121,\n    61,\n    49,\n    32,\n    112,\n    115,\n    121,\n    95,\n    114,\n    100,\n    61,\n    49,\n    46,\n    48,\n    48,\n    58,\n    48,\n    46,\n    48,\n    48,\n    32,\n    109,\n    105,\n    120,\n    101,\n    100,\n    95,\n    114,\n    101,\n    102,\n    61,\n    49,\n    32,\n    109,\n    101,\n    95,\n    114,\n    97,\n    110,\n    103,\n    101,\n    61,\n    50,\n    52,\n    32,\n    99,\n    104,\n    114,\n    111,\n    109,\n    97,\n    95,\n    109,\n    101,\n    61,\n    49,\n    32,\n    116,\n    114,\n    101,\n    108,\n    108,\n    105,\n    115,\n    61,\n    50,\n    32,\n    56,\n    120,\n    56,\n    100,\n    99,\n    116,\n    61,\n    49,\n    32,\n    99,\n    113,\n    109,\n    61,\n    48,\n    32,\n    100,\n    101,\n    97,\n    100,\n    122,\n    111,\n    110,\n    101,\n    61,\n    50,\n    49,\n    44,\n    49,\n    49,\n    32,\n    102,\n    97,\n    115,\n    116,\n    95,\n    112,\n    115,\n    107,\n    105,\n    112,\n    61,\n    49,\n    32,\n    99,\n    104,\n    114,\n    111,\n    109,\n    97,\n    95,\n    113,\n    112,\n    95,\n    111,\n    102,\n    102,\n    115,\n    101,\n    116,\n    61,\n    45,\n    50,\n    32,\n    116,\n    104,\n    114,\n    101,\n    97,\n    100,\n    115,\n    61,\n    49,\n    32,\n    108,\n    111,\n    111,\n    107,\n    97,\n    104,\n    101,\n    97,\n    100,\n    95,\n    116,\n    104,\n    114,\n    101,\n    97,\n    100,\n    115,\n    61,\n    49,\n    32,\n    115,\n    108,\n    105,\n    99,\n    101,\n    100,\n    95,\n    116,\n    104,\n    114,\n    101,\n    97,\n    100,\n    115,\n    61,\n    48,\n    32,\n    110,\n    114,\n    61,\n    48,\n    32,\n    100,\n    101,\n    99,\n    105,\n    109,\n    97,\n    116,\n    101,\n    61,\n    49,\n    32,\n    105,\n    110,\n    116,\n    101,\n    114,\n    108,\n    97,\n    99,\n    101,\n    100,\n    61,\n    48,\n    32,\n    98,\n    108,\n    117,\n    114,\n    97,\n    121,\n    95,\n    99,\n    111,\n    109,\n    112,\n    97,\n    116,\n    61,\n    48,\n    32,\n    99,\n    111,\n    110,\n    115,\n    116,\n    114,\n    97,\n    105,\n    110,\n    101,\n    100,\n    95,\n    105,\n    110,\n    116,\n    114,\n    97,\n    61,\n    48,\n    32,\n    98,\n    102,\n    114,\n    97,\n    109,\n    101,\n    115,\n    61,\n    56,\n    32,\n    98,\n    95,\n    112,\n    121,\n    114,\n    97,\n    109,\n    105,\n    100,\n    61,\n    50,\n    32,\n    98,\n    95,\n    97,\n    100,\n    97,\n    112,\n    116,\n    61,\n    50,\n    32,\n    98,\n    95,\n    98,\n    105,\n    97,\n    115,\n    61,\n    48,\n    32,\n    100,\n    105,\n    114,\n    101,\n    99,\n    116,\n    61,\n    51,\n    32,\n    119,\n    101,\n    105,\n    103,\n    104,\n    116,\n    98,\n    61,\n    49,\n    32,\n    111,\n    112,\n    101,\n    110,\n    95,\n    103,\n    111,\n    112,\n    61,\n    48,\n    32,\n    119,\n    101,\n    105,\n    103,\n    104,\n    116,\n    112,\n    61,\n    50,\n    32,\n    107,\n    101,\n    121,\n    105,\n    110,\n    116,\n    61,\n    50,\n    53,\n    48,\n    32,\n    107,\n    101,\n    121,\n    105,\n    110,\n    116,\n    95,\n    109,\n    105,\n    110,\n    61,\n    50,\n    53,\n    32,\n    115,\n    99,\n    101,\n    110,\n    101,\n    99,\n    117,\n    116,\n    61,\n    52,\n    48,\n    32,\n    105,\n    110,\n    116,\n    114,\n    97,\n    95,\n    114,\n    101,\n    102,\n    114,\n    101,\n    115,\n    104,\n    61,\n    48,\n    32,\n    114,\n    99,\n    95,\n    108,\n    111,\n    111,\n    107,\n    97,\n    104,\n    101,\n    97,\n    100,\n    61,\n    54,\n    48,\n    32,\n    114,\n    99,\n    61,\n    99,\n    114,\n    102,\n    32,\n    109,\n    98,\n    116,\n    114,\n    101,\n    101,\n    61,\n    49,\n    32,\n    99,\n    114,\n    102,\n    61,\n    50,\n    51,\n    46,\n    48,\n    32,\n    113,\n    99,\n    111,\n    109,\n    112,\n    61,\n    48,\n    46,\n    54,\n    48,\n    32,\n    113,\n    112,\n    109,\n    105,\n    110,\n    61,\n    48,\n    32,\n    113,\n    112,\n    109,\n    97,\n    120,\n    61,\n    54,\n    57,\n    32,\n    113,\n    112,\n    115,\n    116,\n    101,\n    112,\n    61,\n    52,\n    32,\n    105,\n    112,\n    95,\n    114,\n    97,\n    116,\n    105,\n    111,\n    61,\n    49,\n    46,\n    52,\n    48,\n    32,\n    97,\n    113,\n    61,\n    49,\n    58,\n    49,\n    46,\n    48,\n    48,\n    0,\n    128,\n    0,\n    0,\n    0,\n    29,\n    101,\n    136,\n    129,\n    0,\n    5,\n    127,\n    254,\n    246,\n    115,\n    124,\n    10,\n    107,\n    109,\n    176,\n    149,\n    46,\n    5,\n    118,\n    246,\n    150,\n    55,\n    45,\n    60,\n    239,\n    89,\n    160,\n    124,\n    49,\n    129\n]);\n\nclass AVC {\n    static getFlvVideoTag(timestamp: number, config: boolean = false): FlvTag {\n        const tag = new FlvTag();\n        tag.tagType = FlvTagType.VIDEO;\n        if (config) {\n            tag.body = configBody;\n        } else {\n            tag.body = frameI;\n        }\n        tag.dataSize = tag.body.byteLength;\n        tag.timestamp = Math.round(timestamp);\n        tag.frameType = 1;\n        tag.codecId = 7;\n        tag.fill = true;\n        return tag;\n    }\n}\n\nexport default AVC;\n","import { ErrorDetails, ErrorTypes } from '../../core/errors';\nimport LasEvents from '../../core/events';\nimport Observer from '../../core/observer';\nimport { FLVTransConfig } from '../../types/core';\nimport { ATrack, IRemuxer, TrackType, VTrack } from '../../types/remux';\nimport { Log } from '../../utils/log';\nimport * as ASC from '../asc';\nimport SPSParser from '../sps-parser';\nimport AMF from './amf';\nimport AVC from './avc-helper';\nimport { FlvTag, FlvTagType } from './flv';\n\n\n// 连续Non-monotonous上限，超过上限重置remux\nconst DISCONTINUITY_ON_NON_MONOTONOUS = 10;\n\ntype TagCache = {\n    tag: FlvTag,\n    dataOffset: number\n}\n\nclass FlvDemux {\n    private tag = 'FlvDemux';\n    private _observer: Observer;\n    private _remuxer: IRemuxer;\n    private _config: FLVTransConfig;\n    private _duration: number;\n    private _naluLengthSize: number;\n    private _hasVideo: boolean;\n    private _hasAudio: boolean;\n    private _videoTrack: VTrack;\n    private _audioTrack: ATrack;\n    private _remuxStat?: { timeOffset: number; contiguous: boolean; accurateTimeOffset: boolean };\n    private _currentTimestamp: number = 0;\n    private _aLastDTS: number = 0;\n    private _vLastDTS: number = 0;\n    private _nonMonotonousCache?: Record<string, TagCache[]>;\n    private _fillAtStart = {\n        enabled: true,\n        start: 0,\n        avcConfig: true\n    };\n\n    constructor(observer: Observer, remuxer: IRemuxer, config: FLVTransConfig) {\n        this._observer = observer;\n        this._remuxer = remuxer;\n        this._config = config;\n\n        this._duration = 0;\n        this._naluLengthSize = 4;\n\n        this._hasVideo = true;\n        this._hasAudio = true;\n\n        this._videoTrack = {\n            id: 1,\n            type: TrackType.video,\n            container: '',\n            codec: '',\n            timescale: 90000,\n            duration: Infinity,\n            samples: [],\n            inputTimeScale: 90000,\n            sequenceNumber: 0,\n            pid: -1,\n            width: 0,\n            height: 0,\n            codecWidth: 0,\n            codecHeight: 0,\n            sps: [],\n            pps: [],\n            pixelRatio: [],\n            profile: '',\n            level: '',\n            chromaFormat: '',\n            fps: 0,\n            dropped: 0,\n            refSampleDuration: 0,\n        };\n        this._audioTrack = {\n            id: 2,\n            type: TrackType.audio,\n            container: '',\n            codec: '',\n            timescale: 90000,\n            duration: Infinity,\n            samples: [],\n            inputTimeScale: 90000,\n            sequenceNumber: 0,\n            pid: -1,\n            isAAC: true,\n            samplerate: 0,\n            channelCount: 0,\n            config: []\n        };\n    }\n\n    public append(tags: FlvTag[], timeOffset: number, contiguous: boolean, accurateTimeOffset: boolean): void {\n        if (!this._remuxStat) {\n            this._remuxStat = { timeOffset, contiguous, accurateTimeOffset };\n        }\n        if (!tags.length) return;\n        tags.forEach(tag => {\n            if (tag.tagType === FlvTagType.VIDEO && this._hasVideo) {\n                if (this._fillAtStart.enabled) {\n                    // 收到视频tag，停止填充\n                    this._fillAtStart.enabled = false;\n                    if (this._audioTrack.samples.length) {\n                        this._fillFrame(this._audioTrack.samples[this._audioTrack.samples.length - 1].dts / 90);\n                    }\n                }\n                this._parseVideoData(tag);\n            }\n            if (tag.tagType === FlvTagType.AUDIO && this._hasAudio) {\n                this._parseAudioData(tag);\n            }\n            if (tag.tagType === FlvTagType.SCRIPT) {\n                this._parseScriptTag(tag);\n            }\n        });\n\n        if (this._fillAtStart.enabled && this._audioTrack.samples.length) {\n            // 填充与音频同样长度的视频\n            let st = this._audioTrack.samples[0].dts / 90;\n            let ed = this._audioTrack.samples[this._audioTrack.samples.length - 1].dts / 90;\n            if (this._fillAtStart.start <= 0) {\n                this._fillAtStart.start = st;\n            }\n            if (ed > this._fillAtStart.start) {\n                this._fillFrame(ed);\n            }\n        }\n        this._remux();\n    }\n\n    public flvHead(hasAudio: boolean, hasVideo: boolean): void {\n        this._hasAudio = hasAudio;\n        this._hasVideo = hasVideo;\n        this._fillAtStart.enabled = this._hasVideo;\n    }\n\n    public destroy() { }\n\n    public flush() {\n        this._remux(true);\n        this._remuxStat = undefined;\n    }\n\n    public resetInitSegment() {\n        this._videoTrack.samples = [];\n        this._audioTrack.samples = [];\n        this._aLastDTS = this._vLastDTS = 0;\n        this._remuxStat = undefined;\n    }\n\n    public resetTimeStamp() { }\n\n    // 设置视频长度\n    public set duration(sec: number) {\n        this._duration = sec;\n    }\n\n    private _parseScriptTag(tag: FlvTag) {\n        if (tag.body) {\n            const scriptData = AMF.parseMetadata(tag.body.buffer);\n            scriptData.timestamp = this._currentTimestamp || 0;\n            if (scriptData.hasOwnProperty('onMetaData')) {\n                const onMetaData = scriptData.onMetaData;\n                if (typeof onMetaData.framerate === 'number') {\n                    this._videoTrack.fps = this._videoTrack.fps || onMetaData.framerate;\n                }\n                Log.i(this.tag, 'Parsed onMetaData');\n            }\n            this._observer.trigger(LasEvents.SCRIPT_PARSED, scriptData);\n        }\n    }\n\n    private _parseVideoData(tag: FlvTag) {\n        if (!tag.body) {\n            return;\n        }\n        // 获取 video tag body 第一字节\n        const spec = tag.body[0];\n        // 获取是否是关键帧\n        tag.frameType = (spec & 240) >>> 4;\n        // 获取编码格式\n        const codecId = spec & 15;\n        if (codecId !== 7 && codecId !== 12) {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: true,\n                reason: `Flv: Unsupported codec in video frame: ${codecId}`\n            });\n            return;\n        }\n        tag.codecId = codecId;\n        // IF CodecID == 7  AVCPacketType\n        // 0 = AVC sequence header\n        // 1 = AVC NALU\n        // 2 = AVC end of sequence (lower level NALU sequence ender is not required or supported)\n        const packetType = tag.body[1];\n        // 3字节\n        // IF AVCPacketType == 1\n        //  Composition time offset\n        // ELSE\n        //  0\n        tag.cts = ((tag.body[2] & 0xff) << 16) + ((tag.body[3] & 0xff) << 8) + (tag.body[4] & 0xff);\n\n        // IF AVCPacketType == 0 AVCDecoderConfigurationRecord（AVC sequence header）\n        // IF AVCPacketType == 1 One or more NALUs (Full frames are required)\n        if (packetType === 0) {\n            if (codecId === 7) {\n                this._parseAVCDecoderConfigurationRecord(tag, 5);\n            }\n        } else if (packetType === 1) {\n            this._parseAVCVideoData(tag, 5) || {};\n        } else if (packetType === 2) {\n            // empty, AVC end of sequence\n        } else {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: true,\n                reason: `Flv: Invalid video packet type ${packetType}`\n            });\n            return;\n        }\n    }\n\n    /**\n     * AVC 初始化\n     * @param {FlvTag} tag flvtag\n     * @param {number} dataOffset tag body offset\n     */\n    private _parseAVCDecoderConfigurationRecord(tag: FlvTag, dataOffset: number) {\n        if (!tag.body) {\n            return;\n        }\n        const track = this._videoTrack;\n        const arrayBuffer = tag.body.buffer;\n        const dataSize = tag.body.byteLength - dataOffset;\n        const v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        const version = v.getUint8(0); // configurationVersion\n        const avcProfile = v.getUint8(1); // avcProfileIndication\n        // const profileCompatibility = v.getUint8(2); // profile_compatibility\n        // const avcLevel = v.getUint8(3); // AVCLevelIndication\n        if (version !== 1 || avcProfile === 0) {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: true,\n                reason: 'Flv: Invalid AVCDecoderConfigurationRecord'\n            });\n            return;\n        }\n\n        this._naluLengthSize = (v.getUint8(4) & 3) + 1; // lengthSizeMinusOne\n        if (this._naluLengthSize !== 3 && this._naluLengthSize !== 4) {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: true,\n                reason: `Flv: Strange NaluLengthSizeMinusOne: ${this._naluLengthSize - 1}`\n            });\n            return;\n        }\n\n        const spsCount = v.getUint8(5) & 31; // numOfSequenceParameterSets\n        if (spsCount === 0 || spsCount > 1) {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: true,\n                reason: `Flv: Invalid H264 SPS count: ${spsCount}`\n            });\n            return;\n        }\n\n        let offset = 6;\n        let spsList = [];\n        for (let i = 0; i < spsCount; i++) {\n            const len = v.getUint16(offset); // sequenceParameterSetLength\n            offset += 2;\n\n            if (len === 0) {\n                continue;\n            }\n\n            // Notice: Nalu without startcode header (00 00 00 01)\n            const sps = new Uint8Array(arrayBuffer, dataOffset + offset, len);\n            offset += len;\n            spsList.push(sps);\n            const config = SPSParser.parseSPS(sps);\n            const codecArray = sps.subarray(1, 4);\n            let codecString = 'avc1.';\n            for (let j = 0; j < 3; j++) {\n                let h = codecArray[j].toString(16);\n                if (h.length < 2) {\n                    h = '0' + h;\n                }\n                codecString += h;\n            }\n\n            // sps update\n            if (\n                !!track.codec &&\n                (track.width !== config.codec_size.width ||\n                    track.height !== config.codec_size.height ||\n                    codecString !== track.codec)\n            ) {\n                if (!tag.fill) {\n                    this._remux(true);\n                }\n                if (this._remuxer.ISGenerated) {\n                    this._remuxer.resetInitSegment();\n                }\n            }\n            track.sps = spsList;\n            track.width = config.codec_size.width;\n            track.height = config.codec_size.height;\n            track.pixelRatio = [config.sar_ratio.width, config.sar_ratio.height];\n            if (config.frame_rate.fixed && config.frame_rate.fps !== 0) {\n                track.fps = config.frame_rate.fps;\n            }\n            track.codec = codecString;\n\n            track.profile = config.profile_string;\n            track.level = config.level_string;\n            track.chromaFormat = config.chroma_format_string;\n        }\n\n        const ppsCount = v.getUint8(offset); // numOfPictureParameterSets\n        if (ppsCount === 0 || ppsCount > 1) {\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.PARSING_ERROR,\n                fatal: true,\n                reason: `Flv: Invalid H264 PPS count: ${ppsCount}`\n            });\n            return;\n        }\n\n        offset++;\n        track.pps = [];\n        for (let i = 0; i < ppsCount; i++) {\n            const len = v.getUint16(offset); // pictureParameterSetLength\n            offset += 2;\n            const pps = new Uint8Array(arrayBuffer, dataOffset + offset, len);\n            track.pps.push(pps);\n            if (len === 0) {\n                continue;\n            }\n            offset += len;\n        }\n        Log.v(this.tag, 'Parsed AVCDecoderConfigurationRecord');\n\n        track.duration = this._duration;\n        track.container = 'video/mp4';\n        if (track.fps) {\n            track.refSampleDuration = Math.floor(track.timescale / track.fps);\n        } else {\n            // 兼容无fps信息的情况，无fps时影响mp4sample duration估算，改为以gop为单位remux\n            // this._config.gopRemux = true;\n            track.refSampleDuration = Math.floor(track.timescale / 30);\n        }\n    }\n\n    /**\n     * 普通的AVC 片段\n     * @param {Flvtag} tag flv tag\n     * @param {number} dataOffset dataOffset\n     */\n    private _parseAVCVideoData(tag: FlvTag, dataOffset: number, ignoreNonMonotonous: boolean = false) {\n        if (!tag.body) {\n            return;\n        }\n        let info;\n        const arrayBuffer = tag.body.buffer;\n        const dataSize = tag.body.byteLength - dataOffset;\n        const v = new DataView(arrayBuffer, dataOffset, dataSize);\n\n        const units = [];\n        let length = 0;\n\n        let offset = 0;\n        const lengthSize = this._naluLengthSize;\n        const dts = tag.timestamp;\n        let keyframe = tag.frameType === 1; // from FLV Frame Type constants\n        // 处理Non-monotonous DTS及丢帧时间修正后可能出现的时间重叠，加速播放\n        if (!ignoreNonMonotonous && dts <= this._vLastDTS && this._vLastDTS > 0) {\n            Log.w(this.tag, `debug Non-monotonous DTS dts:${dts} last:${this._vLastDTS}`);\n            this._onNonMonotonous({ tag, dataOffset }, TrackType.video);\n            return;\n        }\n        if (!ignoreNonMonotonous && this._nonMonotonousCache) {\n            this._flushNonMonotonousCache();\n        }\n        const pts = dts + tag.cts;\n        while (offset < dataSize) {\n            if (offset + 4 >= dataSize) {\n                Log.v(this.tag, `Malformed Nalu near timestamp ${dts}, offset = ${offset}, dataSize = ${dataSize}`);\n                break; // data not enough for next Nalu\n            }\n            // Nalu with length-header (AVC1)\n            let naluSize = v.getUint32(offset); // Big-Endian read\n            if (lengthSize === 3) {\n                naluSize >>>= 8;\n            }\n            if (naluSize > dataSize - lengthSize) {\n                Log.v(this.tag, `Malformed Nalus near timestamp ${dts}, NaluSize > DataSize!`);\n                return;\n            }\n            const data = new Uint8Array(arrayBuffer, dataOffset + offset + 4, lengthSize + naluSize - 4);\n            let unitType;\n            if (tag.codecId === 7) {\n                // AVC\n                unitType = v.getUint8(offset + lengthSize) & 0x1f;\n                if (unitType === 5) {\n                    keyframe = true;\n                }\n            }\n\n            const unit = { type: unitType, data };\n            units.push(unit);\n            length += data.byteLength;\n            offset += lengthSize + naluSize;\n        }\n\n        if (units.length) {\n            const track = this._videoTrack;\n            const avcSample = {\n                units,\n                length,\n                dts: dts * 90,\n                cts: tag.cts * 90,\n                pts: pts * 90,\n                streamDTS: dts,\n                key: keyframe\n            };\n            track.samples.push(avcSample);\n        }\n        this._vLastDTS = dts;\n        return info;\n    }\n\n    private _parseAudioData(tag: FlvTag, ignoreNonMonotonous: boolean = false) {\n        if (!tag.body) {\n            return;\n        }\n        const dataSize = tag.body.byteLength;\n        let aacFrameLen;\n        if (dataSize <= 1) {\n            Log.v(this.tag, 'Flv: Invalid audio packet, missing SoundData payload!');\n            return;\n        }\n        const track = this._audioTrack;\n\n        const packetType = tag.body[1];\n\n        if (packetType === 0) {\n            if (tag.body.byteLength < 4) {\n                return;\n            }\n            ASC.initTrackConfig(track, this._observer, tag.body, 0, this._config.audioCodec);\n            track.duration = this._duration;\n\n            return;\n        } else if (packetType === 1) {\n            const aacData = tag.body.subarray(2);\n            // AAC raw frame data\n            let dts = tag.timestamp;\n            // 通过时间计算的dts与通过帧长度计算的dts比对，判断是否发生了跳帧\n            // aac帧长度\n            aacFrameLen = ASC.getFrameDuration(track.samplerate);\n            let maxAudioFramesDrift = aacFrameLen * this._config.maxAudioFramesDrift;\n            if (this._aLastDTS > 0) {\n                // 默认使用时间戳累加\n                dts = this._aLastDTS + aacFrameLen;\n                const dtsDiff = tag.timestamp - dts;\n                if (!ignoreNonMonotonous && dtsDiff < -maxAudioFramesDrift) {\n                    this._onNonMonotonous({ tag }, TrackType.audio);\n                    return;\n                }\n            }\n            if (!ignoreNonMonotonous && this._nonMonotonousCache) {\n                this._flushNonMonotonousCache();\n            }\n\n            const sampleDts = (dts * track.inputTimeScale) / 1000;\n            const aacSample = {\n                unit: aacData,\n                dts: sampleDts,\n                pts: sampleDts,\n                streamDTS: tag.timestamp,\n                length: aacData.byteLength\n            };\n            this._aLastDTS = dts;\n            track.samples.push(aacSample);\n        } else {\n            Log.v(this.tag, `Flv: Unsupported AAC data type ${packetType}`);\n        }\n    }\n\n    /**\n     * 检测到Non-monotonous，连续出现Non-monotonous按照中断重推处理\n     * @param {object} data tag相关数据\n     * @param {string} type audio|video\n     */\n    private _onNonMonotonous(data: any, type: TrackType) {\n        if (!this._nonMonotonousCache) {\n            this._nonMonotonousCache = {\n                video: [],\n                audio: []\n            };\n        }\n        const cache = this._nonMonotonousCache[type];\n        if (cache.length > DISCONTINUITY_ON_NON_MONOTONOUS) {\n            this.flush();\n            const lastPts = this._remuxer.getLastPTS();\n            let ptsSync: number = lastPts.audio;\n            if (ptsSync === 0 || (lastPts.video > 0 && lastPts.video < ptsSync)) {\n                ptsSync = lastPts.video;\n            }\n            this._videoTrack.samples = [];\n            this._audioTrack.samples = [];\n            this._aLastDTS = this._vLastDTS = 0;\n            this._remuxStat = { accurateTimeOffset: false, contiguous: false, timeOffset: ptsSync };\n            this._remuxer.resetInitSegment();\n            this._remuxer.resetTimeStamp();\n            Log.i(this.tag, 'NON_MONOTONOUS reset time');\n            this._flushNonMonotonousCache();\n        } else {\n            cache.push(data);\n        }\n    }\n\n    /**\n     * 清空Non-monotonous数据，remux\n     */\n    private _flushNonMonotonousCache() {\n        if (this._nonMonotonousCache) {\n            const nonMonotonousCache = this._nonMonotonousCache;\n            for (const key in nonMonotonousCache) {\n                const cache = nonMonotonousCache[key];\n                while (cache.length) {\n                    const data = cache.shift();\n                    if (data) {\n                        if (key === 'video') {\n                            this._parseAVCVideoData(data.tag, data.dataOffset, true);\n                        } else if (key === 'audio') {\n                            this._parseAudioData(data.tag, true);\n                        }\n                    }\n                }\n            }\n            this._nonMonotonousCache = undefined;\n        }\n    }\n\n    private _remux(end = false) {\n        const audiotrack = this._audioTrack;\n        const videotrack = this._videoTrack;\n        let contiguous = true,\n            timeOffset = 0,\n            accurateTimeOffset = false;\n        if (this._remuxStat) {\n            contiguous = this._remuxStat.contiguous;\n            timeOffset = this._remuxStat.timeOffset;\n            accurateTimeOffset = this._remuxStat.accurateTimeOffset;\n        }\n\n        if (audiotrack.samples.length === 0 && videotrack.samples.length === 0) {\n            if (end) {\n                this._remuxer.flush();\n            }\n            return;\n        }\n\n        if (!end && (this._hasAudio && audiotrack.samples.length === 0 || this._hasVideo && videotrack.samples.length < 2)) {\n            return;\n        }\n        try {\n            this._remuxer.remux(audiotrack, videotrack, timeOffset, contiguous, accurateTimeOffset, end);\n            this._remuxStat = undefined;\n        } catch (error) {\n            Log.e(this.tag, error);\n            this._observer.trigger(LasEvents.ERROR, {\n                type: ErrorTypes.MUX_ERROR,\n                details: ErrorDetails.REMUX_ERROR,\n                fatal: true,\n                reason: error.message\n            });\n        }\n    }\n\n    /**\n     * 填充视频空数据\n     * @param ed 结束时间戳 ms\n     */\n    private _fillFrame(ed: number) {\n        if (this._audioTrack.samples.length === 0) {\n            return;\n        }\n        let st = this._fillAtStart.start || this._audioTrack.samples[0].dts * 90;\n        if (ed > st) {\n            Log.i(this.tag, `fill video frame: ${st} ${ed}`);\n            this._fillAtStart.start = ed;\n            let tags: FlvTag[] = [AVC.getFlvVideoTag(st), AVC.getFlvVideoTag(ed - 1)];\n            if (this._fillAtStart.avcConfig) {\n                tags.unshift(AVC.getFlvVideoTag(st, true));\n                this._fillAtStart.avcConfig = false;\n            }\n            tags.forEach(tag => {\n                this._parseVideoData(tag);\n            });\n        }\n    }\n}\n\nexport default FlvDemux;\n","import LasEvents from '../../core/events';\nimport Observer from '../../core/observer';\nimport Mp4Remuxer from '../../remux/mp4-remuxer';\nimport { FLVTransConfig } from '../../types/core';\nimport FlvDemuxer from './flv-demuxer';\nimport { FlvTag } from './flv';\n\nexport interface FlvExtraData {\n    remuxId: number;\n    bitrate?: number;\n}\nclass FlvDemuxerInline {\n    private tag: string = 'Flv';\n    private _observer: Observer;\n    private _config: FLVTransConfig;\n    private _extraData: FlvExtraData;\n\n    private _demuxer!: FlvDemuxer;\n    private _remuxer!: Mp4Remuxer;\n\n    private _bitrate: number;\n    private _vendor: string;\n\n    constructor(observer: Observer, config: FLVTransConfig, extraData: FlvExtraData, vendor: string) {\n        this._observer = observer;\n        this._config = config;\n\n        this._bitrate = this._config.bitrate as number;\n        this._extraData = extraData;\n        this._vendor = vendor;\n    }\n\n    public init(): void {\n        const config = this._config,\n            observer = this._observer;\n\n        const remuxer = (this._remuxer = new Mp4Remuxer(observer, config, { mp4: true, mpeg: false, mp3: false }));\n        const demuxer = (this._demuxer = new FlvDemuxer(observer, remuxer, config));\n        remuxer.setExtra(this._extraData);\n        demuxer.duration = config.duration || 0;\n    }\n\n    public flvHead(hasAudio: boolean, hasVideo: boolean): void {\n        this._demuxer.flvHead(hasAudio, hasVideo);\n    }\n\n    public append(tags: FlvTag[], timeOffset: number, discontinuity: boolean, contiguous: boolean, accurateTimeOffset: boolean) {\n        if (discontinuity) {\n            this._demuxer.resetInitSegment();\n            this._remuxer.resetInitSegment();\n            this._demuxer.resetTimeStamp();\n            this._remuxer.resetTimeStamp();\n        }\n        this._demuxer.append(tags, timeOffset, contiguous, accurateTimeOffset);\n    }\n\n    public end(): void {\n        this._demuxer.flush();\n        this._remuxer.flush();\n        this._observer.trigger(LasEvents.LOAD_END);\n    }\n\n    public flush(): void {\n        if (this._demuxer) {\n            this._demuxer.flush();\n        }\n    }\n\n    public setExtra(data: FlvExtraData): void {\n        this._extraData = data;\n        this._extraData.bitrate = this._bitrate;\n        if (this._remuxer) {\n            this._remuxer.setExtra(this._extraData);\n        }\n    }\n\n    public destroy(): void { }\n\n}\n\nexport default FlvDemuxerInline;\n","import Observer from '../../core/observer';\nimport LasEvents from '../../core/events';\nimport FlvDemuxerInline, { FlvExtraData } from './flv-demuxer-inline';\nimport { Log } from '../../utils/log';\nimport { FLVTransConfig } from '../../types/core';\n\nexport default function (self: any) {\n    let flv: FlvDemuxerInline;\n\n    const observer = new Observer();\n    const forwardMessage = function (ev: string, data: any) {\n        self.postMessage({ event: ev, data: data });\n    };\n\n    observer.on(LasEvents.PARSING_INIT_SEGMENT, forwardMessage);\n    observer.on(LasEvents.ERROR, forwardMessage);\n    observer.on(LasEvents.SCRIPT_PARSED, forwardMessage);\n    observer.on(LasEvents.LOAD_END, forwardMessage);\n    observer.on(LasEvents.PARSING_DATA, function (ev, data) {\n        const message: any = { event: ev, data: data };\n        message.payload = data.payload;\n        delete data.payload;\n        self.postMessage(message, [message.payload.buffer]);\n    });\n\n    function init(observer: Observer, config: FLVTransConfig, data: FlvExtraData, vendor: string) {\n        flv = new FlvDemuxerInline(observer, config, data, vendor);\n        flv.init();\n    }\n\n    function destroy() {\n        if (flv) {\n            flv.destroy();\n        }\n        if (observer) {\n            observer.removeAllListeners();\n        }\n    }\n\n    self.addEventListener('message', function (e: any) {\n        const d = e.data;\n        switch (d.cmd) {\n            case 'init':\n                Log.level(d.config.debug);\n                init(observer, d.config, d.data, d.vendor);\n                break;\n            case 'destroy':\n                destroy();\n                break;\n            case 'append':\n                flv.append(d.tags, d.timeOffset, d.discontinuity, d.contiguous, d.accurateTimeOffset);\n                break;\n            case 'flvHead':\n                flv.flvHead(d.hasAudio, d.hasVideo);\n                break;\n            case 'flush':\n                flv.flush();\n                break;\n            case 'setExtra':\n                flv.setExtra(d.data);\n                break;\n            case 'end':\n                flv.end();\n                break;\n        }\n    });\n}\n","export enum FlvTagType {\n    AUDIO = 8,\n    VIDEO = 9,\n    SCRIPT = 18\n}\n\nexport const FlvSize = {\n    FLV_HEAD_LEN: 13,\n    FLV_TAG_HEAD_LEN: 11,\n    FLV_TAG_SIZE_LEN: 4,\n    AVC_KEY_FRAME_CHECK_LEN: 2\n}\n\nexport class FlvTag {\n    public tagType: FlvTagType = FlvTagType.VIDEO;\n    public dataSize: number = 0;\n    public timestamp: number = 0;\n    public size: number = 0;\n    public cts: number = 0;\n    public frameType: number = 0;\n    public codecId: number = 0;\n    public body: Uint8Array | null = null;\n    public fill?: boolean;\n}\n","import { LasConfig } from './types/core';\nimport Browser from './utils/browser';\nimport { Log, LOG_LEVEL } from './utils/log';\n\nconst CLEANUP_DURATION_STEP = 10;\n\nconst URL_REG = new RegExp('^(http|https)://');\n\nconst DEFAULT_CONFIG = {\n    webWorker: true, // 是否开启webworker\n    autoCleanupMaxBackwardDuration: 60, // 清除sourcebuffer最大时间\n    autoCleanupMinBackwardDuration: 15, // 清除sourcebuffer最小时间\n    appendErrorMaxRetry: 3, // mse append出错后重试次数\n    credentials: false, // 请求是否带cookie\n    defaultSpts: -2000,\n    debug: LOG_LEVEL.LEVEL_ERROR,\n\n    connectionTimeout: 10000, // 流连接超时\n    transmissionTimeout: 30000, // 流传输超时\n    stretchShortVideoTrack: false,\n    maxBufferHole: 0.5,\n    maxAudioFramesDrift: 5, // used by mp4-remuxer\n};\n\nclass ConfigHelper {\n    /**\n     * 处理传入的config\n     * @param {object} userConfig 传入config\n     * @returns {object} config\n     */\n    static processConfig(userConfig: any): LasConfig {\n        const config: LasConfig = Object.assign({}, DEFAULT_CONFIG);\n        Object.assign(config, userConfig);\n        ConfigHelper.setSrc(config);\n\n        if (!(window as any).Worker) {\n            config.webWorker = false;\n        }\n        if (config.debug) {\n            Log.level(config.debug);\n        }\n        ConfigHelper.detectStreamingMux(config);\n        config.autoCleanupMaxBackwardDuration = Math.max(\n            config.autoCleanupMaxBackwardDuration,\n            config.autoCleanupMinBackwardDuration + CLEANUP_DURATION_STEP\n        );\n        return config;\n    }\n\n    static detectStreamingMux(config: LasConfig) {\n        config.gopRemux = Browser.safari || (Browser.opera && Browser.version.major < 37);\n    }\n\n    /**\n     * 重新设置config的src\n     * @param {object} config 传入config\n     * @param {*} src src或manifest\n     */\n    static setSrc(config: LasConfig, src: any = null) {\n        if (src) {\n            config.src = src;\n            config.manifest = '';\n        }\n        if (typeof config.src === 'string' && !URL_REG.test(config.src)) {\n            try {\n                config.src = JSON.parse(config.src);\n            } catch (e) {\n                config.manifest = '';\n            }\n        }\n        if (typeof config.src === 'object') {\n            config.manifest = config.src;\n            config.src = '';\n        }\n    }\n}\n\nexport { DEFAULT_CONFIG, ConfigHelper };\n\n","import { TimeRange } from '../types/core';\nimport MSEController from './mse-controller';\n\nclass Media {\n    private _video?: HTMLVideoElement;\n    private _mse?: MSEController;\n\n    private _streamTime: number = 0;\n    private _localTime: number = 0;\n\n    constructor() { }\n\n    public reset(): void {\n        this._streamTime = 0;\n        this._localTime = 0;\n    }\n\n    public attachVideo(video: HTMLVideoElement): void {\n        this._video = video;\n    }\n    public attachMSE(mse: MSEController): void {\n        this._mse = mse;\n    }\n\n    /**\n     * 指定时间是否在video缓冲区内\n     * @param sec time\n     * @returns isTimeinBuffered\n     */\n    public isTimeinBuffered(sec: number): boolean {\n        if (this._video) {\n            const buffered = this._video.buffered;\n            for (let i = 0; i < buffered.length; i++) {\n                if (sec >= buffered.start(i) && sec < buffered.end(i)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /*\n     * 计算video buffer量\n     */\n    public bufferedSec(): number {\n        if (this._video && this._video.buffered.length > 0) {\n            return Math.max(0, this._video.buffered.end(this._video.buffered.length - 1) - this._video.currentTime);\n        }\n        return 0;\n    }\n\n    /**\n     * 音频、视频的buffer长度\n     * @param type video|audio\n     */\n    public bufferedSecByType(type: string): number {\n        if (this._mse && this._video) {\n            let end = this._mse.bufferedEndByType(type);\n            if (end > 0) {\n                return this._mse.bufferedEndByType(type) - this._video.currentTime;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * 音频、视频的buffer长度\n     * @param type video|audio\n     */\n    public mseBufferedSecByType(type: string): TimeRange {\n        if (this._mse) {\n            return this._mse.bufferedByType(type);\n        }\n        return { start: 0, end: 0 };\n    }\n\n    /**\n     * 音频、视频buffer的段数\n     * @param type video|audio\n     */\n    public bufferSliceNumByType(type: string): number {\n        if (this._mse) {\n            return this._mse.bufferSliceNumByType(type);\n        }\n        return 0;\n    }\n\n    public pendingNum(): number {\n        if (this._mse) {\n            return this._mse.pendingNum();\n        }\n        return 0;\n    }\n\n    /**\n     * 待填充的buffer数据长度\n     * @param type video|audio\n     */\n    public pendingSecByType(type: string): number {\n        if (this._mse) {\n            return this._mse.pendingSecByType(type);\n        }\n        return 0;\n    }\n\n    /**\n     * 指定时间所在的buffer区域结束时间，不在任何buffer区域时返回空\n     * @param time 时间\n     */\n    public currentBuffer(time: number): TimeRange | undefined {\n        if (this._video) {\n            let buffered = this._video.buffered;\n            for (let i = 0; i < buffered.length; i++) {\n                const start = buffered.start(i);\n                const end = buffered.end(i);\n                if (start <= time && time < end) {\n                    return { start, end };\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * 指定时间所在的buffer区域结束时间，不在任何buffer区域时返回空\n     * @param time 时间\n     */\n    public nextBuffer(time: number): TimeRange | undefined {\n        if (this._video) {\n            let buffered = this._video.buffered;\n            for (let i = 0; i < buffered.length; i++) {\n                const start = buffered.start(i);\n                const end = buffered.end(i);\n                if (start > time) {\n                    return { start, end };\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * 更新转封装后的时间对应关系\n     * @param streamTime 流中的时间戳，秒\n     * @param localTime 本地时间，秒\n     */\n    public updateStreamTime(streamTime: number, localTime: number): void {\n        this._streamTime = streamTime;\n        this._localTime = localTime;\n    }\n\n    /**\n     * 根据流时间推算对应的本地时间戳\n     * @param streamTime 流时间\n     */\n    public getLocalTime(streamTime: number): number | undefined {\n        if (this._streamTime) {\n            return (streamTime - this._streamTime) + this._localTime;\n        }\n        return;\n    }\n\n    public get video(): HTMLVideoElement | undefined {\n        return this._video;\n    }\n\n    public get mse(): MSEController | undefined {\n        return this._mse;\n    }\n\n    /**\n     * 获取MSE当前状态，mse.readyState\n     */\n    public get mseReadyState(): ReadyState {\n        if (this._mse) {\n            return this._mse.readyState;\n        }\n        return 'closed';\n    }\n\n    /**\n     * 获取MSE当前状态，mse.readyState\n     */\n    public get videoReadyState(): number {\n        if (this._video) {\n            return this._video.readyState;\n        }\n        return 0;\n    }\n\n\n    /**\n     * video当前播放时间\n     */\n    public get currentTime(): number {\n        if (this._video) {\n            return this._video.currentTime;\n        }\n        return 0;\n    }\n}\n\nexport default Media;\n","/**\n * MediaSource helper\n */\n\nexport function getMediaSource (): typeof MediaSource {\n  return (window as any).MediaSource || (window as any).WebKitMediaSource;\n}\n","import { EventEmitter } from 'events';\nimport { LasConfig, TimeRange } from '../types/core';\nimport Browser from '../utils/browser';\nimport { Log } from '../utils/log';\nimport { getMediaSource } from '../utils/mediasource-helper';\nimport { ErrorDetails, ErrorTypes } from './errors';\nimport LasEvents from './events';\n\n// append关闭时queue允许缓存的长度上限\nconst QUEUE_SIZE_LIMIT = 200 * 1024 * 1024;\nconst MIN_CLEANUP_DURATION = 10;\nconst CLEANUP_DURATION_STEP = 10;\n\nconst MAX_BUFFERED = 30;\n\ntype Segment = {\n    type: string;\n    data: Uint8Array;\n    startDTS: number;\n    endDTS: number;\n    duration: number;\n};\n\nexport default class MSEController extends EventEmitter {\n    private tag: string = 'mse-controller';\n    private _config: LasConfig;\n\n    public video?: HTMLVideoElement;\n    public _sourceBuffer: { [index: string]: SourceBuffer };\n    private _mediaSource: MediaSource | null = null;\n    private _mimeCodec: { [index: string]: string };\n    private _cleanUpTask: { [index: string]: TimeRange[] };\n    private _appendQueue: { [index: string]: any[] };\n    private _hasVideo: boolean;\n    private _hasAudio: boolean;\n    private _endOfData: boolean = false;\n    private _appendEnabled: boolean;\n    private _duration: number | null = null;\n    private _appendError: number = 0;\n    private _appendBufferError: boolean = false;\n    private _sbHandler: { [index: string]: { updateend: (e: Event) => any; error: (e: Event) => any } } = {};\n    private _souceBufferLocked: boolean = false;\n\n    /**\n     * Mediasource 控制层\n     * @class Mediasource\n     * @param {Element} videoElement videoElement\n     * @param {object} config config\n     */\n    constructor(config: LasConfig) {\n        super();\n        this._config = config;\n        this._hasVideo = false;\n        this._hasAudio = false;\n        this._appendQueue = {\n            video: [],\n            audio: [],\n            audiovideo: []\n        };\n        this._sourceBuffer = {};\n        this._cleanUpTask = { video: [], audio: [], audiovideo: [] };\n        this._mimeCodec = {};\n        this._appendEnabled = true;\n    }\n\n    /**\n     * 绑定HTMLvideo\n     * @param video video\n     */\n    public attach(video: HTMLVideoElement): void {\n        this.video = video;\n        const MediaSourceDef = getMediaSource();\n        if (MediaSourceDef) {\n            const ms = (this._mediaSource = new MediaSourceDef());\n            this.video.src = URL.createObjectURL(ms);\n            this.video.load();\n            ms.addEventListener('sourceopen', this._onSourceOpen);\n            ms.addEventListener('sourceended', this._onSourceEnded);\n            ms.addEventListener('sourceclose', this._onSourceClose);\n            this._souceBufferLocked = false;\n        } else {\n            setTimeout(() => {\n                this.emit(LasEvents.ERROR, {\n                    type: ErrorTypes.MSE_ERROR,\n                    details: ErrorDetails.MEDIASOURCE_ERROR,\n                    fatal: true,\n                    reason: 'MediaSource is not support'\n                });\n            }, 0);\n        }\n    }\n\n    /**\n     * mediaSource init\n     * @param {Object} mediaInfo mediaInfo\n     */\n    public trackInfo(mediaInfo: any): void {\n        if ((this._hasAudio !== mediaInfo.hasAudio || this._hasVideo !== mediaInfo.hasVideo || !!mediaInfo.audiovideo !== !!this._mimeCodec.audiovideo) && this.video && this.hasSourceBuffer()) {\n            // 音视频轨数量发生变化时需要重建mse\n            Log.i(this.tag, 'trackInfo rebuild mse');\n            for (const type in this._sourceBuffer) {\n                if (this._sourceBuffer[type] && this._sbHandler[type]) {\n                    this._sourceBuffer[type].removeEventListener('error', this._sbHandler[type].error);\n                    this._sourceBuffer[type].removeEventListener('updateend', this._sbHandler[type].updateend);\n                }\n            }\n            this._sourceBuffer = {};\n            if (this._mediaSource) {\n                this._mediaSource.removeEventListener('sourceopen', this._onSourceOpen);\n                this._mediaSource.removeEventListener('sourceended', this._onSourceEnded);\n                this._mediaSource.removeEventListener('sourceclose', this._onSourceClose);\n            }\n            this._mimeCodec = {};\n            this.attach(this.video);\n        }\n        if (!mediaInfo.audiovideo) {\n            if (mediaInfo.hasAudio && mediaInfo.audioCodec) {\n                this._mimeCodec.audio = `audio/mp4; codecs=\"${mediaInfo.audioCodec}\"`;\n            }\n            if (mediaInfo.hasVideo && mediaInfo.videoCodec) {\n                this._mimeCodec.video = `video/mp4; codecs=\"${mediaInfo.videoCodec}\"`;\n            }\n        } else {\n            this._mimeCodec.audiovideo = `video/mp4; codecs=\"${mediaInfo.codec}\"`;\n        }\n        this._hasAudio = this._hasAudio || mediaInfo.hasAudio;\n        this._hasVideo = this._hasVideo || mediaInfo.hasVideo;\n\n        this._checkSourceBuffer();\n    }\n\n    /**\n     * 检查track是否已获取codec\n     */\n    private _checkSourceBuffer(): void {\n        let expected = (this._hasAudio ? 1 : 0) + (this._hasVideo ? 1 : 0);\n        let codecs = (this._mimeCodec.audio ? 1 : 0) + (this._mimeCodec.video ? 1 : 0);\n        if (this._mimeCodec.audiovideo) {\n            expected = 1;\n            codecs = 1;\n        }\n        Log.v(this.tag, 'checkSourceBuffer', expected, codecs, this._mimeCodec);\n        if (this._mediaSource && this._mediaSource.readyState === 'open' && expected > 0 && codecs >= expected) {\n            for (const type in this._mimeCodec) {\n                if (this._mimeCodec[type]) {\n                    this._addSourceBuffer(type);\n                }\n            }\n        }\n    }\n\n    /**\n     * mediaSource open\n     */\n    private _onSourceOpen = () => {\n        Log.i(this.tag, 'MediaSource onSourceOpen');\n        if (this._mediaSource) {\n            this._mediaSource.removeEventListener('sourceopen', this._onSourceOpen);\n            this._checkSourceBuffer();\n            this.refresh();\n            this.emit('source_open');\n        }\n    };\n\n    /**\n     * addSourceBuffer\n     * @param {String} type type\n     */\n    private _addSourceBuffer(type: string): void {\n        if (this._sourceBuffer[type] || this._souceBufferLocked) {\n            return;\n        }\n        try {\n            if (this._mediaSource) {\n                this._sourceBuffer[type] = this._mediaSource.addSourceBuffer(this._mimeCodec[type]);\n            }\n        } catch (e) {\n            Log.e(this.tag, e);\n            this.emit(LasEvents.ERROR, {\n                type: ErrorTypes.MSE_ERROR,\n                details: ErrorDetails.ADDSOURCEBUFFER_ERROR,\n                fatal: true,\n                reason: e.message\n            });\n            return;\n        }\n        const sb = this._sourceBuffer[type];\n        this._sbHandler[type] = {\n            updateend: () => {\n                this._onSourceBufferUpdateEnd(type);\n            },\n            error: (e: Event) => {\n                this._onSourceBufferError(e);\n            }\n        };\n        sb.addEventListener('error', this._sbHandler[type].error);\n        sb.addEventListener('updateend', this._sbHandler[type].updateend);\n        if (this._duration && this._mediaSource) {\n            this._mediaSource.duration = this._duration;\n        }\n    }\n\n    /**\n     * 是否有待处理的数据\n     */\n    private _hasPendingData(): boolean {\n        return !!(\n            this._appendQueue &&\n            ((this._appendQueue.video && this._appendQueue.video.length) ||\n                (this._appendQueue.audio && this._appendQueue.audio.length))\n        );\n    }\n\n    /**\n     * 刷新MSE，计算一次清理任务，尝试重启填充buffer任务\n     */\n    public refresh() {\n        for (const type in this._sourceBuffer) {\n            this._update(type);\n        }\n    }\n\n    /**\n     * 填充mse sourcebuffer\n     */\n    private _doAppend(type: string): void {\n        if (this._hasPendingData()) {\n            if (!this._appendEnabled) {\n                const size = this._getBufferQueueSize();\n                if (size > QUEUE_SIZE_LIMIT && !this._appendBufferError) {\n                    this._appendBufferError = true;\n                    this.emit(LasEvents.ERROR, {\n                        type: ErrorTypes.MSE_ERROR,\n                        details: ErrorDetails.APPENDBUFFER_ERROR,\n                        fatal: true,\n                        reason: 'bufferfull'\n                    });\n                }\n                return;\n            }\n            if (\n                this._appendQueue[type].length > 0 &&\n                this._sourceBuffer[type] &&\n                !this._sourceBuffer[type].updating &&\n                !this._appendBufferError\n            ) {\n                const data = this._appendQueue[type].shift();\n                this._appendBuffer(data, type);\n            }\n        }\n    }\n\n    /**\n     * 转封装后fmp4数据\n     * @param segment segment\n     */\n    public mediaSegment(segment: Segment): void {\n        const type = segment.type;\n        const queue = this._appendQueue[type];\n        if (!this._souceBufferLocked || this._sourceBuffer[type]) {\n            queue.push(segment);\n        }\n        if (this._sourceBuffer[type]) {\n            this._souceBufferLocked = true;\n            this._update(type);\n        }\n    }\n\n    /**\n     * mse buffer范围，秒\n     * @param type video|audio|audiovideo\n     */\n    public bufferedByType(type: string): { start: number; end: number } {\n        const sb = this._sourceBuffer[type];\n        if (sb && sb.buffered.length > 0) {\n            return { start: sb.buffered.start(0), end: sb.buffered.end(sb.buffered.length - 1) };\n        }\n        return { start: 0, end: 0 };\n    }\n\n    /**\n     * mse buffer结束时间点，秒\n     * @param type video|audio|audiovideo\n     */\n    public bufferedEndByType(type: string): number {\n        const sb = this._sourceBuffer[type];\n        if (sb && sb.buffered.length > 0) {\n            return sb.buffered.end(sb.buffered.length - 1);\n        }\n        return 0;\n    }\n\n    /**\n     * mse buffer的分段数量，正常情况不大于1\n     * @param type video|audio|audiovideo\n     */\n    public bufferSliceNumByType(type: string): number {\n        const sb = this._sourceBuffer[type];\n        if (sb) {\n            return sb.buffered.length;\n        }\n        return 0;\n    }\n\n    /**\n     * 待填充buffer长度\n     * @param type video|audio|audiovideo\n     */\n    public pendingSecByType(type: string): number {\n        const buffer = this._appendQueue[type];\n        if (buffer) {\n            return buffer.reduce((prev, current) => {\n                return prev + current.duration;\n            }, 0);\n        }\n        return 0;\n    }\n\n    /**\n     * 待填充buffer数量\n     */\n    public pendingNum(): number {\n        let num = 0;\n        for (let type in this._appendQueue) {\n            num += this._appendQueue[type].length;\n        }\n        return num;\n    }\n\n    /**\n     * 根据填充策略计算需要缓存清理的范围\n     * @param type video|audio|audiovideo\n     */\n    private _calculateRemoveRange(type: string): void {\n        const video = this.video;\n        if (!video || video.seeking) {\n            return;\n        }\n        const time = video.currentTime;\n        if (this._sourceBuffer[type]) {\n            const task = this._cleanUpTask[type];\n            const buffered = this._sourceBuffer[type].buffered;\n            if (buffered.length >= 1 && time - buffered.start(0) >= this._config.autoCleanupMaxBackwardDuration) {\n                const end = time - this._config.autoCleanupMinBackwardDuration;\n                if (task.length) {\n                    if (task[task.length - 1].start === 0 && task[task.length - 1].end === end) {\n                        return;\n                    }\n                }\n                task.push({ start: 0, end });\n            }\n        }\n    }\n\n    /**\n     * 尝试清理sourcebufer缓存\n     * @param sb 需要清理的sourceBuffer\n     * @param range 需要清理的范围\n     */\n    private _cleanUpRange(type: string, range: TimeRange): boolean {\n        const sb = this._sourceBuffer[type];\n        if (sb) {\n            if (!sb.updating) {\n                try {\n                    for (let i = 0; i < sb.buffered.length; i++) {\n                        const bufStart = Browser.firefox ? 0 : sb.buffered.start(i);\n                        const bufEnd = sb.buffered.end(i);\n                        const removeStart = Math.max(bufStart, range.start);\n                        const removeEnd = Math.min(bufEnd, range.end);\n                        /**\n                         * remove不一定准确按照指定值进行，remove长度小于500ms，可能无效\n                         */\n                        if (removeEnd > removeStart) {\n                            sb.remove(removeStart, removeEnd);\n                            this.emit('remove');\n                            // 多段buffer时可能需要多次清理\n                            if (i < sb.buffered.length - 1) {\n                                return false;\n                            }\n                        }\n                    }\n                } catch (error) { }\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * 向sourcebuffer中填充数据\n     * @param data data\n     * @param type type\n     */\n    private _appendBuffer(data: Segment, type: string): void {\n        if (!this._sourceBuffer[type] || !this.video || this.video.error) {\n            return;\n        }\n        try {\n            this._sourceBuffer[type].appendBuffer(data.data.buffer);\n        } catch (e) {\n            Log.w(this.tag, e.code, e);\n            if (e.code !== 22) {\n                if (this._appendError) {\n                    this._appendError++;\n                } else {\n                    this._appendError = 1;\n                }\n                if (this._appendError > this._config.appendErrorMaxRetry) {\n                    this._appendBufferError = true;\n                    this.emit(LasEvents.ERROR, {\n                        type: ErrorTypes.MSE_ERROR,\n                        details: ErrorDetails.APPENDBUFFER_ERROR,\n                        fatal: true,\n                        reason: e.message\n                    });\n                } else {\n                    this._appendQueue[type].unshift(data);\n                }\n            } else {\n                let v = this.video, conf = this._config;\n                this._appendEnabled = false;\n                this._appendQueue[type].unshift(data);\n                let buffered = v.buffered.end(v.buffered.length - 1) - v.currentTime;\n                // mse bufferfull 降级策略\n                let useless = v.currentTime - v.buffered.start(0);\n                if (buffered < MAX_BUFFERED) {\n                    //  修改buffer清理阈值并清理buffer\n                    if (useless < conf.autoCleanupMaxBackwardDuration) {\n                        conf.autoCleanupMaxBackwardDuration = Math.max(conf.autoCleanupMaxBackwardDuration / 2, MIN_CLEANUP_DURATION + CLEANUP_DURATION_STEP);\n                        conf.autoCleanupMinBackwardDuration = MIN_CLEANUP_DURATION;\n                    }\n                    this._calculateRemoveRange(type);\n                    if (this.hasCleanUpTask(type)) {\n                        this._cleanUp(type);\n                    }\n                } else if (useless < conf.autoCleanupMinBackwardDuration) {\n                    //  已满足buffer阈值，抛错\n                    this.emit(LasEvents.ERROR, {\n                        type: ErrorTypes.MSE_ERROR,\n                        details: ErrorDetails.APPENDBUFFER_ERROR,\n                        fatal: true,\n                        reason: 'buffer full, append error'\n                    });\n                }\n                Log.i(this.tag, 'mse bufferfull')\n                this.emit('bufferFull');\n            }\n        }\n    }\n\n    /**\n     * sourcebuffer end\n     */\n    private _onSourceEnded = () => {\n        Log.i(this.tag, 'MediaSource onSourceEnded');\n    };\n\n    /**\n     * sourcebuffer close\n     */\n    private _onSourceClose = () => {\n        Log.i(this.tag, 'MediaSource onSourceClose');\n        if (this._mediaSource) {\n            this._mediaSource.removeEventListener('sourceopen', this._onSourceOpen);\n            this._mediaSource.removeEventListener('sourceended', this._onSourceEnded);\n            this._mediaSource.removeEventListener('sourceclose', this._onSourceClose);\n        }\n    };\n\n    private _onSourceBufferUpdateEnd = (type: string) => {\n        this._update(type);\n        if (this._endOfData) {\n            this._endOfStream();\n        }\n        this.emit('updateend');\n    };\n\n    /**\n     * sourcebuffer error\n     * @param {Object} e 事件\n     */\n    private _onSourceBufferError = (e: Event) => {\n        Log.e(this.tag, `SourceBuffer Error: ${e}`);\n        this.emit(LasEvents.ERROR, {\n            type: ErrorTypes.MSE_ERROR,\n            details: ErrorDetails.SOURCEBUFFER_ERROR,\n            fatal: true,\n            reason: 'source buffer error'\n        });\n    };\n\n    /**\n     * 清理mse sourcebuffer缓存\n     * @param startSec 开始时间点，未指从0点开始\n     * @param endSec 结束时间点，未指定时结束点为正无穷大\n     * @param flushType 类型，未指定时清理所有sourcebuffe\n     */\n    public flush(startSec?: number, endSec?: number, flushType?: string): void {\n        let start = 0,\n            end = Number.POSITIVE_INFINITY;\n        this._endOfData = false;\n        // 计算清理范围\n        for (const type in this._sourceBuffer) {\n            if (flushType && flushType !== type) {\n                continue;\n            }\n            const sb = this._sourceBuffer[type];\n            if (!sb) {\n                continue;\n            }\n            // 清理未填充数据\n            if (startSec) {\n                start = Math.max(start, startSec);\n                for (let i = this._appendQueue[type].length - 1; i >= 0; i--) {\n                    if (!this._appendQueue[type][i].startPTS || this._appendQueue[type][i].startPTS >= startSec) {\n                        this._appendQueue[type].pop();\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                this._appendQueue[type] = [];\n            }\n            if (endSec) {\n                end = Math.min(end, endSec);\n            }\n            this._cleanUpTask[type].push({ start, end });\n            this._cleanUp(type);\n        }\n        this._appendEnabled = true;\n    }\n\n    /**\n     * 是否开启buffer填充\n     * @param value 开关\n     */\n    public setAppendEnabled(value: boolean): void {\n        if (!this._appendEnabled && value) {\n            this._appendEnabled = value;\n            this.refresh();\n        } else {\n            this._appendEnabled = value;\n        }\n    }\n\n    public getAppendEnabled(): boolean {\n        return this._appendEnabled;\n    }\n\n    public endOfData(): void {\n        this._endOfData = true;\n        if (!this._hasPendingData()) {\n            this._endOfStream();\n        }\n    }\n\n    public ended(): boolean {\n        return this._endOfData;\n    }\n\n    private _endOfStream(): void {\n        const ms = this._mediaSource;\n        if (!ms || ms.readyState !== 'open') {\n            return;\n        }\n        for (const type in this._sourceBuffer) {\n            const sb = this._sourceBuffer[type];\n            if (sb && sb.updating) {\n                return;\n            }\n        }\n        try {\n            ms.endOfStream();\n        } catch (error) {\n            Log.e(this.tag, error);\n            this.emit(LasEvents.ERROR, {\n                type: ErrorTypes.MSE_ERROR,\n                details: ErrorDetails.ENDOFSTREAM_ERROR,\n                fatal: true,\n                reason: error.message\n            });\n        }\n    }\n\n    /**\n     * destroy\n     */\n    public destroy(): void {\n        if (this._mediaSource) {\n            const ms = this._mediaSource;\n            // pending segments should be discard\n\n            // remove all sourcebuffers\n            this._endOfStream();\n            if (ms.readyState !== 'closed') {\n                for (const type in this._sourceBuffer) {\n                    if (this._sourceBuffer[type] && this._sbHandler[type]) {\n                        this._sourceBuffer[type].removeEventListener('error', this._sbHandler[type].error);\n                        this._sourceBuffer[type].removeEventListener('updateend', this._sbHandler[type].updateend);\n                        ms.removeSourceBuffer(this._sourceBuffer[type]);\n                    }\n                }\n            }\n            ms.removeEventListener('sourceopen', this._onSourceOpen);\n            ms.removeEventListener('sourceended', this._onSourceEnded);\n            ms.removeEventListener('sourceclose', this._onSourceClose);\n            this._mediaSource = null;\n        }\n        this.removeAllListeners();\n        this._appendQueue = {};\n        this._mimeCodec = {};\n        this._cleanUpTask = {};\n        this._sourceBuffer = {};\n        this._sbHandler = {};\n    }\n\n    /**\n     * 是否有未完成的清理任务\n     * @param type video|audio|audiovideo\n     */\n    public hasCleanUpTask(type?: string): boolean {\n        let num = 0;\n        if (typeof type === 'undefined') {\n            for (let type in this._cleanUpTask) {\n                num += this._cleanUpTask[type].length;\n            }\n        } else {\n            if (this._cleanUpTask[type]) {\n                num = this._cleanUpTask[type].length;\n            }\n        }\n        return num > 0;\n    }\n\n    public hasSourceBuffer(): boolean {\n        return !!Object.keys(this._sourceBuffer).length;\n    }\n\n    private _getBufferQueueSize(): number {\n        let num = 0;\n        for (const type in this._appendQueue) {\n            num += this._appendQueue[type].reduce((prev, current) => {\n                if (current.data && current.data.byteLength) {\n                    return prev + current.data.byteLength;\n                }\n                return prev;\n            }, 0);\n        }\n        return num;\n    }\n\n    /**\n     * 待填充队列中的数据时长\n     * @param {string} type video|audio|audiovideo，为空时返回video|audio最大值\n     * @returns {number} 时长\n     */\n    public getBufferQueueSec(type?: string): number {\n        if (!this._appendQueue) {\n            return 0;\n        }\n        let keys;\n        if (type) {\n            keys = [type];\n        } else {\n            keys = Object.keys(this._appendQueue);\n        }\n        return keys.reduce((prev, current) => {\n            if (this._appendQueue[current] && this._appendQueue[current].length > 0 && (Object.keys(this._sourceBuffer).length === 0 || this._sourceBuffer[current])) {\n                return Math.max(\n                    prev,\n                    this._appendQueue[current].reduce((prevDuration, currentSeg) => {\n                        if (currentSeg.duration) {\n                            return prevDuration + currentSeg.duration;\n                        }\n                        return prevDuration;\n                    }, 0)\n                );\n            }\n            return prev;\n        }, 0);\n    }\n\n    /**\n     * 获取MSE当前状态，mse.readyState\n     */\n    public get readyState(): ReadyState {\n        if (this._mediaSource) {\n            return this._mediaSource.readyState;\n        }\n        return 'closed';\n    }\n\n    /**\n     * 更新souceBuffer，清理或填充\n     */\n    private _update(type: string): void {\n        if (this.hasCleanUpTask(type)) {\n            this._cleanUp(type);\n        }\n        this._doAppend(type);\n    }\n\n    /**\n     * 执行清理任务\n     * @param type video|audio|audiovideo\n     */\n    private _cleanUp(type: string): void {\n        let range = this._cleanUpTask[type];\n        while (range && range.length) {\n            const item = range[0];\n            if (this._cleanUpRange(type, item)) {\n                range.shift();\n            } else {\n                return;\n            }\n        }\n        this.refresh();\n    }\n}\n","import Url from 'url-parse';\n\n/**\n * 生成切换flv的请求地址\n * @param url 流地址\n * @param spts 切换时间戳，单位毫秒。大于0：关键帧pts；小于0：直播延迟\n */\nexport function abrGetUrl(url: string, spts?: number): string {\n    if (typeof spts === 'undefined') {\n        return url;\n    }\n    const urlparse = new Url(url, true);\n    urlparse.query.lasSpts = `${spts}`;\n    return urlparse.toString();\n}","export default class AbrLevel {\n    public url: string;\n    public bitrate: number = 0;\n    public maxBitrate: number = 0;\n    public avgBitrate: number = 0;\n    public qualityType: string = '';\n    public qualityLabel: string = '';\n    public id: number = 0;\n    public codec: string = '';\n    public hidden: boolean = false;\n    public enableAdaptive: boolean = true;\n    public defaultSelect: boolean = false;\n\n    constructor(url: string) {\n        this.url = url;\n    }\n}","import AbrLevel from \"./abr-level\";\nexport type Representation = {\n    id: number,  //[int][M]\n    url: string, // [string][M]\n    backupUrl: string[], // [string][M1]\n    host: string, // [string][M2]\n    maxBitrate: number, // [int][M] maxBitrate in kbps set by transcoder\n    avgBitrate: number, // [int][M1&2] avgBitrate in kbps\n    codecs: string, // [string][O]\n    width: number,  // [int][M]\n    height: number, // [int][M]\n    frameRate: number, // [float][O]\n    qualityType: string,  // [string][M] 档位展示类型\n    qualityLabel: string, // [string][O] 档位展示字段\n    hidden: boolean, // [bool][M] false denotes the representation is show in UI and can be selected by manual model\n    disableAdaptive: boolean, // [bool][M] false denotes the representation can be selected by auto model\n    defaultSelect: boolean // [bool][M1,3,4] false denotes the representation is not selected as the initialization level\n}\n\ntype AdaptationSet = {\n    id: number;\n    duration: number;\n    representation: Representation[];\n};\n\nexport type AbrManifestData = {\n    version: string,\n    adaptationSet: AdaptationSet[];\n};\n\n/**\n * las manifest\n */\nexport class AbrManifest {\n    private _levels: AbrLevel[] = [];\n    private _abrLevels: number[] = [];\n    private _default?: number;\n\n    /**\n     * 验证las manifest数据\n     * @param data 输入数据\n     */\n    public static verify(data: any) {\n        if (\n            data &&\n            data.hasOwnProperty('version') &&\n            data.hasOwnProperty('adaptationSet') &&\n            Array.isArray(data.adaptationSet) &&\n            data.adaptationSet.length > 0\n        ) {\n            return data.adaptationSet.reduce((prev: boolean, item: any) => {\n                return !!(prev && item.representation && item.representation.length)\n            }, true);\n        }\n        return false;\n    }\n\n    constructor(manifest: AbrManifestData) {\n        if (AbrManifest.verify(manifest)) {\n\n            manifest.adaptationSet[0].representation.sort((a, b) => {\n                return a.maxBitrate - b.maxBitrate;\n            });\n\n            manifest.adaptationSet[0].representation.forEach((item, index) => {\n                let level = new AbrLevel(item.url);\n                level.id = item.id || 0;\n                level.maxBitrate = item.maxBitrate || 0;\n                level.avgBitrate = item.avgBitrate || 0;\n                level.bitrate = level.maxBitrate;\n                level.qualityType = item.qualityType || '';\n                level.qualityLabel = item.qualityLabel || '';\n                level.codec = item.codecs || '';\n                level.hidden = item.hidden || false;\n                level.enableAdaptive = typeof item.disableAdaptive === 'undefined' ? true : !item.disableAdaptive;\n                level.defaultSelect = item.defaultSelect || false;\n                this._levels.push(level);\n\n                if (level.enableAdaptive) {\n                    this._abrLevels.push(index);\n                }\n                if (level.defaultSelect && typeof this._default === 'undefined') {\n                    this._default = index;\n                }\n            });\n        } else {\n            return;\n        }\n    }\n\n    /**\n     * 码率列表\n     */\n    public get levels(): AbrLevel[] {\n        return this._levels;\n    }\n\n    /**\n     * 可用于自适应切换的码率index列表\n     */\n    public get abrLevels(): number[] {\n        return this._abrLevels;\n    }\n\n    /**\n     * 默认起播清晰度\n     */\n    public get default(): number {\n        return this._default || 0;\n    }\n}\n","export type TypedArray\n= | Int8Array\n    | Uint8Array\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Float32Array\n    | Float64Array;\n\nexport type TypedArrayConstructor\n= | Int8ArrayConstructor\n    | Uint8ArrayConstructor\n    | Int16ArrayConstructor\n    | Uint16ArrayConstructor\n    | Int32ArrayConstructor\n    | Uint32ArrayConstructor\n    | Uint8ClampedArrayConstructor\n    | Float32ArrayConstructor\n    | Float64ArrayConstructor;\n\nconst type: (input: TypedArray) => TypedArrayConstructor = (input: TypedArray): TypedArrayConstructor => {\n    switch (input.constructor.name) {\n        case 'Int8Array':\n            return Int8Array;\n        case 'Uint8Array':\n            return Uint8Array;\n        case 'Int16Array':\n            return Int16Array;\n        case 'Uint16Array':\n            return Uint16Array;\n        case 'Int32Array':\n            return Int32Array;\n        case 'Uint32Array':\n            return Uint32Array;\n        case 'Uint8ClampedArray':\n            return Uint8ClampedArray;\n        case 'Float64Array':\n            return Float64Array;\n        default:\n            return Float32Array;\n    }\n};\n\nconst flatten: (input: any[]) => number[] = (input: any[]): number[] =>\n    input.reduce((acc: any[], next: any) => acc.concat(Array.isArray(next) ? flatten(next) : next), []);\n\nconst shape: (input: any) => number[] = (input: any): number[] =>\n    Array.isArray(input) ? [input.length].concat(shape(input[0])) : [];\n\nconst isTypedArray: (input: any) => boolean = (input: any): boolean =>\n    !!(input && input.buffer instanceof ArrayBuffer && input.BYTES_PER_ELEMENT);\n\nexport class Matrix {\n    /**\n     * Static method. Adds two matrices `a` and `b` together.\n     */\n    public static add(a: Matrix, b: Matrix): Matrix {\n        return a.copy().add(b);\n    }\n\n    /**\n     * Static method. Subtracts the matrix `b` from matrix `a`.\n     */\n    public static subtract(a: Matrix, b: Matrix): Matrix {\n        return a.copy().subtract(b);\n    }\n\n    /**\n     * Static method. Augments two matrices `a` and `b` of matching dimensions\n     * (appends `b` to `a`).\n     */\n    public static augment(a: Matrix, b: Matrix): Matrix {\n        return a.copy().augment(b);\n    }\n\n    /**\n     * Static method. Multiplies two matrices `a` and `b` of matching dimensions.\n     */\n    public static multiply(a: Matrix, b: Matrix): Matrix {\n        return a.multiply(b);\n    }\n\n    /**\n     * Static method. Creates an `r x c` matrix containing zeros (`0`), takes an\n     * optional `type` argument which should be an instance of `TypedArray`.\n     */\n    public static zeros(r: number, c: number, type: TypedArrayConstructor = Float32Array): Matrix {\n        return Matrix.fill(r, c, 0, type);\n    }\n\n    /**\n     * Static method. Creates a `r x c` matrix containing optional 'value' (default 0), takes\n     * an optional `type` argument which should be an instance of `TypedArray`.\n     */\n    public static fill(\n        r: number,\n        c: number,\n        value: number | ((index: number) => number) = 0,\n        type: TypedArrayConstructor = Float32Array\n    ): Matrix {\n        if (r <= 0 || c <= 0) {\n            throw new Error('invalid size');\n        }\n\n        const size: number = r * c;\n        const data: TypedArray = new type(size);\n\n        return new Matrix(data, { shape: [r, c] }).fill(value);\n    }\n\n    public data: TypedArray = new Float32Array(0);\n    public length: number = 0;\n    public shape: number[] = [0];\n    public type: TypedArrayConstructor = Float32Array;\n\n    /**\n     * Static method. Creates an identity matrix of `size`, takes an optional `type` argument\n     * which should be an instance of `TypedArray`.\n     */\n    public static identity(size: number, type: TypedArrayConstructor = Float32Array): Matrix {\n        return Matrix.fill(size, size, (i: number) => i % size === Math.floor(i / size) ? 1 : 0, type);\n    }\n\n    constructor(data?: any, options?: any) {\n        if (typeof data === 'number' && typeof options === 'number') {\n            this._init(new Float32Array(data * options), { shape: [data, options] });\n        } else {\n            this._init(data, options);\n        }\n    }\n\n    private _init(\n        data?: any,\n        options?: {\n        shape: number[];\n        }\n    ) {\n        if (isTypedArray(data)) {\n            this.data = data as TypedArray;\n            this.shape = typeof options === 'object' ? options.shape : [this.data.length];\n            this.length = this.data.length;\n            this.type = type(data);\n        } else if (data instanceof Array) {\n            this.data = new Float32Array(flatten(data));\n            this.shape = shape(data);\n            this.length = this.data.length;\n        } else if (data instanceof Matrix) {\n            return data.copy();\n        }\n    }\n\n    public multiply(matrix: Matrix): Matrix {\n        const [r1, c1] = this.shape;\n        const [r2, c2] = matrix.shape;\n\n        if (c1 !== r2) {\n            throw new Error('sizes do not match');\n        }\n\n        const { data: d1 } = this;\n        const { data: d2 } = matrix;\n        const data: TypedArray = new this.type(r1 * c2);\n\n        let i: number;\n        let j: number;\n        let k: number;\n        let sum: number;\n        for (i = 0; i < r1; i += 1) {\n            for (j = 0; j < c2; j += 1) {\n                sum = 0;\n                for (k = 0; k < c1; k += 1) {\n                    sum += d1[i * c1 + k] * d2[j + k * c2];\n                }\n\n                data[i * c2 + j] = sum;\n            }\n        }\n\n        return new Matrix(data, { shape: [r1, c2] });\n    }\n\n    /**\n     * Adds `x` multiplied by `alpha` to the current array.\n     */\n    public add(x: Matrix, alpha: number = 1): this {\n        this.equilateral(x);\n        this.equidimensional(x);\n\n        const { data: d1, length: l1 } = this;\n        const { data: d2 } = x;\n\n        let i: number;\n        for (i = 0; i < l1; i += 1) {\n            d1[i] += alpha * d2[i];\n        }\n\n        return this;\n    }\n\n    /**\n     * Subtracts `x` to the current array.\n     */\n    public subtract(x: Matrix): this {\n        return this.add(x, -1);\n    }\n\n    /**\n     * Augments `matrix` with current matrix.\n     */\n    public augment(matrix: Matrix): Matrix {\n        const [r1, c1] = this.shape;\n        const [r2, c2] = matrix.shape;\n\n        if (r2 === 0 || c2 === 0) {\n            return this;\n        }\n\n        if (r1 !== r2) {\n            throw new Error('rows do not match');\n        }\n\n        const { data: d1 } = this;\n        const { data: d2 } = matrix;\n        const length: number = c1 + c2;\n        const data: TypedArray = new this.type(length * r1);\n\n        let i: number;\n        let j: number;\n        for (i = 0; i < r1; i += 1) {\n            for (j = 0; j < c1; j += 1) {\n                data[i * length + j] = d1[i * c1 + j];\n            }\n        }\n\n        for (i = 0; i < r2; i += 1) {\n            for (j = 0; j < c2; j += 1) {\n                data[i * length + j + c1] = d2[i * c2 + j];\n            }\n        }\n\n        this.shape = [r1, length];\n        this.length = data.length;\n        this.data = data;\n\n        return this;\n    }\n\n    /**\n     * Fills the array with a scalar value, takes an optional `type` argument\n     * which should be an instance of `TypedArray`.\n     */\n    public fill(value: number | ((index: number) => number) = 0): this {\n        const { data, length } = this;\n\n        let i: number;\n        for (i = 0; i < length; i += 1) {\n            data[i] = value instanceof Function ? value(i) : value;\n        }\n\n        return this;\n    }\n\n    /**\n     * Transposes a matrix (mirror across the diagonal).\n     */\n    public transpose(): Matrix {\n        const [r, c] = this.shape;\n        const data: TypedArray = new this.type(c * r);\n\n        let i: number;\n        let j: number;\n        for (i = 0; i < r; i += 1) {\n            for (j = 0; j < c; j += 1) {\n                data[j * r + i] = this.data[i * c + j];\n            }\n        }\n\n        return new Matrix(data, { shape: [c, r] });\n    }\n\n    /**\n     * Determines the inverse of any invertible square matrix using\n     * Gaussian elimination.\n     */\n    public inverse(): Matrix {\n        const [r, c] = this.shape;\n\n        if (r !== c) {\n            throw new Error('invalid dimensions');\n        }\n\n        const identity: Matrix = Matrix.identity(r);\n        const augmented: Matrix = Matrix.augment(this, identity);\n        const gauss: Matrix = augmented.gauss();\n        const left: Matrix = Matrix.zeros(r, c);\n        const right: Matrix = Matrix.zeros(r, c);\n\n        const n: number = gauss.shape[1];\n\n        let i: number;\n        let j: number;\n        for (i = 0; i < r; i += 1) {\n            for (j = 0; j < n; j += 1) {\n                if (j < c) {\n                    left.set(i, j, gauss.get(i, j));\n                } else {\n                    right.set(i, j - r, gauss.get(i, j));\n                }\n            }\n        }\n\n        if (!left.equals(Matrix.identity(r))) {\n            throw new Error('matrix is not invertible');\n        }\n\n        return right;\n    }\n\n    /**\n     * Performs Gaussian elimination on a matrix.\n     */\n    public gauss(): Matrix {\n        const [r, c] = this.shape;\n        const copy: Matrix = this.copy();\n\n        let lead: number = 0;\n        let pivot: number;\n        let leadValue: number;\n\n        let i: number;\n        let j: number;\n        let k: number;\n        for (i = 0; i < r; i += 1) {\n            if (c <= lead) {\n                throw new Error('matrix is singular');\n            }\n\n            j = i;\n            while (copy.data[j * c + lead] === 0) {\n                j += 1;\n                if (r === j) {\n                    j = i;\n                    lead += 1;\n\n                    if (c === lead) {\n                        throw new Error('matrix is singular');\n                    }\n                }\n            }\n\n            copy.swap(i, j);\n\n            pivot = copy.data[i * c + lead];\n            if (pivot !== 0) {\n                for (k = 0; k < c; k += 1) {\n                    copy.data[i * c + k] = copy.data[i * c + k] / pivot;\n                }\n            }\n\n            for (j = 0; j < r; j += 1) {\n                leadValue = copy.data[j * c + lead];\n                if (j !== i) {\n                    for (k = 0; k < c; k += 1) {\n                        copy.data[j * c + k] = copy.data[j * c + k] - copy.data[i * c + k] * leadValue;\n                    }\n                }\n            }\n\n            lead += 1;\n        }\n\n        for (i = 0; i < r; i += 1) {\n            pivot = 0;\n            for (j = 0; j < c; j += 1) {\n                if (pivot === 0) {\n                    pivot = copy.data[i * c + j];\n                }\n            }\n\n            if (pivot === 0) {\n                for (k = 0; k < c; k += 1) {\n                    copy.data[i * c + k] = copy.data[i * c + k] / pivot;\n                }\n            }\n        }\n\n        return copy;\n    }\n\n    /**\n     * Checks if current array and `x` are equal.\n     */\n    public equals(x: Matrix): boolean {\n        this.equilateral(x);\n        this.equidimensional(x);\n\n        const { data: d1, length: l1 } = this;\n        const { data: d2 } = x;\n\n        let i: number;\n        for (i = 0; i < l1; i += 1) {\n            if (d1[i] !== d2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Check if `i` and `j` is within the bounds for current matrix.\n     */\n    public check(i: number, j: number): void {\n        const [r, c] = this.shape;\n\n        if (isNaN(i) || isNaN(j)) {\n            throw new Error('one of the indices is not a number');\n        }\n\n        if (i < 0 || j < 0 || i > r - 1 || j > c - 1) {\n            throw new Error('index out of bounds');\n        }\n    }\n\n    /**\n     * Sets the element at row `i`, column `j` to value\n     */\n    public set(i: number, j: number, value: number): Matrix {\n        this.check(i, j);\n        this.data[i * this.shape[1] + j] = value;\n\n        return this;\n    }\n\n    /**\n     * Gets the value of the element in row `i`, column `j` of current matrix\n     */\n    public get(i: number, j: number): number {\n        this.check(i, j);\n\n        return this.data[i * this.shape[1] + j];\n    }\n\n    /**\n     * Swaps two rows `i` and `j` in a matrix\n     */\n    public swap(i: number, j: number): Matrix {\n        const [r, c] = this.shape;\n        if (i < 0 || j < 0 || i > r - 1 || j > r - 1) {\n            throw new Error('index out of bounds');\n        }\n\n        if(this.data.slice) {\n            const copy: TypedArray = this.data.slice(i * c, (i + 1) * c);\n            this.data.copyWithin(i * c, j * c, (j + 1) * c);\n            this.data.set(copy, j * c);\n        } else {\n            // IE 11 无 slice copyWithin 方法\n            const D:any = this.data.constructor;\n            const copy: TypedArray = new D(this.data.buffer.slice(0));\n            this.data.set(copy.subarray(i * c, (i + 1) * c), j * c);\n            this.data.set(copy.subarray(j * c, (j + 1) * c), i * c);\n        }\n\n        return this;\n    }\n    /**\n     * Makes a copy of the class and underlying data\n     */\n    public copy(): this {\n        const copy: Matrix = Object.assign(Object.create(Object.getPrototypeOf(this)), this) as Matrix;\n\n        copy.data = new this.type(this.data);\n        copy.shape = this.shape;\n        copy.length = this.length;\n        copy.type = this.type;\n\n        return copy as this;\n    }\n\n    /**\n     * Asserts if current array and `x` have the same shape\n     */\n    public equidimensional(x: Matrix): void {\n        const { shape: s1 } = this;\n        const { shape: s2 } = x;\n\n        if (!s1.every((dim: number, i: number) => dim === s2[i])) {\n            throw new Error(`shapes ${s1} and ${s2} do not match`);\n        }\n    }\n\n    /**\n     * Asserts if current array and `x` have the same length\n     */\n    public equilateral(x: Matrix): void {\n        const { length: l1 } = this;\n        const { length: l2 } = x;\n\n        if (l1 !== l2) {\n            throw new Error(`lengths ${l1} and ${l2} do not match`);\n        }\n    }\n}\n","import {EventEmitter} from 'events';\nimport {Log} from '../utils/log';\nimport {Matrix} from '../utils/matrix';\nimport AbrLevel from './abr-level';\nimport {AbrManifest} from './abr-manifest';\n\ntype AdaptiveConfig = {\n    beacon: boolean;\n    predictStep: number;\n    minBuffer: number; // 最小buffer长度\n    bufferOffset: number; // buffer抖动容忍\n    duration: number; // 切片长度\n    smoothRatioToTarget: number;\n    speedSmoothRatio: number;\n    switchPenalty: number;\n    slidingWindowSize: number;\n    kalmanR: number;\n    kalmanQ: number;\n    initBitrateLevel: number;\n    speedPredictNum: number;\n};\n\nconst tag = 'algorithm-flv';\n\nconst CONFIG: AdaptiveConfig = {\n    beacon: false, // 算法上报开关\n    predictStep: 5,\n    minBuffer: 0.2, // 最小buffer长度\n    bufferOffset: -1,\n    duration: 2, // 切片长度\n    smoothRatioToTarget: 0.25,\n    speedSmoothRatio: 0.5,\n    switchPenalty: 1.5 * 1e-6,\n    slidingWindowSize: 3,\n    kalmanR: 0.2 ** 2,\n    kalmanQ: 4e-4,\n    initBitrateLevel: 3, // 起播清晰度\n    speedPredictNum: 3, // 根据速度预测次数\n};\n\n/**\n * HLS自适应码率算法入口\n */\nclass AbrAlgorithm extends EventEmitter {\n    private MATRIX_E!: Matrix;\n    private MATRIX_G!: Matrix;\n\n    private _conf!: AdaptiveConfig;\n\n    private _xPrev: number = 0;\n    private _PPrev: number = 0;\n    private _pastBuffer!: number[];\n    private _pastThroughput!: number[];\n    private _levels!: AbrLevel[];\n    private _availableList?: number[];\n    private _current: number = 0; // 当前正在加载的流index\n    private _next: number = 0; // 下一个切换的流index\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * 初始化，并写入初始码率\n     * @param manifest 流信息\n     * @param config 算法配置\n     */\n    public init(manifest: AbrManifest, config?: any): void {\n        // TODO: config\n        this._processConfig(config);\n\n        Log.i(tag, 'init', manifest, config, this._conf);\n        this._levels = manifest.levels.slice(0);\n        // TODO: default与config.initBitrateLevel冲突\n        this._current = manifest.default;\n\n        // initialize the parameters\n        this._next = 0;\n        this._pastBuffer = [0, 0];\n        this._pastThroughput = new Array(this._conf.slidingWindowSize);\n        this._pastThroughput[this._conf.slidingWindowSize - 1] = 0;\n        // initialize the parameters of kalman filter\n        this._xPrev = 0;\n        this._PPrev = 0;\n        // matrix initialization\n        this.MATRIX_E = Matrix.zeros(\n            this._conf.predictStep,\n            this._conf.predictStep\n        );\n        this.MATRIX_G = Matrix.zeros(this._conf.predictStep, 2);\n\n        for (let i = 0; i < this._conf.predictStep; i++) {\n            for (let j = 0; j < i + 1; j++) {\n                this.MATRIX_E.set(i, j, i - j + 1);\n            }\n        }\n        for (let i = 0; i < this._conf.predictStep; i++) {\n            this.MATRIX_G.set(i, 0, i + 2);\n            this.MATRIX_G.set(i, 1, -i - 1);\n        }\n    }\n\n    /**\n     * 设置码率列表中的清晰度是否可用\n     * @param list 码率index列表\n     */\n    public setAvailableBitrates(list: number[]): void {\n        if (list.length) {\n            this._availableList = list;\n        }\n    }\n\n    /**\n     * 获取下一个清晰度\n     * @returns {number} 下个清晰度index\n     */\n    public get nextLevel(): number {\n        return this._next;\n    }\n\n    /**\n     * 收到关键帧\n     * @param buffered buffer长度（秒）\n     * @param size 下载长度\n     * @param time 下载耗时（秒）\n     */\n    public onGOP(buffered: number, size: number, time: number): void {\n        // Byte/s -> kbps: {x} * 1000 * 8 / 1024;\n        let speed = (size / time) * 8 / 1024;\n        this._next = this._nextRateIndex(\n            this._recentSpeed(speed),\n            buffered\n        );\n    }\n\n    /**\n     * 当开始加载新流\n     * @param index 清晰度index\n     */\n    public onLevelLoad(index: number): void {\n        this._current = Math.max(0, index);\n    }\n\n    /**\n     * 处理传入配置，与默认配置合并\n     * @param config 配置\n     */\n    private _processConfig(config?: any): void {\n        const c = Object.assign({}, CONFIG);\n        this._conf = Object.assign(c, config);\n    }\n\n    private _quantization(bitrate: number, speed: number): number {\n        let index = this._current;\n        for (let i = this._levels.length - 1; i >= 0; i--) {\n            if (bitrate >= this._levels[i].bitrate) {\n                index = i;\n                break;\n            }\n        }\n        if (index > this._current && speed < this._levels[index].bitrate) {\n            index -= 1;\n        }\n        return index;\n    }\n\n    /**\n     * 计算下一个使用的码率\n     * @param value 下载速度 kpbs\n     * @param buffered 当前buffer ms\n     */\n    private _nextRateIndex(value: number, buffered: number): number {\n        this._pastThroughput.shift();\n        this._pastThroughput.push(value);\n\n        let index = this._nextRateBySpeedAndBuffered(value, buffered);\n        if (index >= this._current) {\n            this._pastBuffer.shift();\n            this._pastBuffer.push(buffered);\n        } else {\n            this._pastBuffer = [buffered, buffered];\n        }\n\n        if (\n            this._availableList &&\n            this._availableList.length &&\n            this._availableList.indexOf(index) === -1\n        ) {\n            for (let i = this._availableList.length - 1; i >= 0; i--) {\n                if (this._availableList[i] <= index) {\n                    index = this._availableList[i];\n                    break;\n                }\n            }\n            index = Math.max(index, this._availableList[0]);\n        }\n        return index;\n    }\n\n    /**\n     * 重置算法\n     */\n    private _resetAlgorithm() {\n        this._pastBuffer = [0, 0];\n        this._pastThroughput = new Array(this._conf.slidingWindowSize);\n    }\n\n    /**\n     * 获取最近buffer水平\n     */\n    private _recentBuffer(): number {\n        return this._pastBuffer.reduce((a, b) => a + b) / this._pastBuffer.length;\n    }\n\n    /**\n     * 获取最近带宽水平\n     */\n    private _recentSpeed(value: number): number {\n        const speed = this._pastThroughput[this._pastThroughput.length - 1];\n        if (speed > 0) {\n            return speed * this._conf.speedSmoothRatio + value * (1 - this._conf.speedSmoothRatio);\n        }\n        return value;\n    }\n\n    /**\n     * 依据最近buffer水平，设置Target Buffer\n     */\n    private _adjustedTargetBuffer(): number {\n        const targetBuffer = Math.max(this._conf.minBuffer, this._recentBuffer() + this._conf.bufferOffset);\n        Log.v(tag, `targetBuffer:${targetBuffer}`);\n        return targetBuffer;\n    }\n\n    /**\n     * 计算码率变化值\n     * @param switchPenaltyArray 切换代价\n     * @param estimatedThroughput 预估带宽\n     * @param Bk 目标buffer水平\n     * @param br 预测buffer水平\n     */\n    private _rateChangeArray(switchPenaltyArray: Matrix, estimatedThroughput: number[], Bk: Matrix, br: number[]): any {\n        const targetBufferArray = new Matrix(br);\n        this._printFirstColumn(targetBufferArray, 'targetBufferArray');\n\n        const matrixG = this.MATRIX_G;\n        const predictedBufferArray = Matrix.multiply(matrixG, Bk);\n        this._printFirstColumn(predictedBufferArray, 'predictedBufferArray');\n\n        const matrixE = this.MATRIX_E;\n        const matrixF = matrixE.multiply(this._diag(estimatedThroughput));\n        return Matrix.multiply(\n            Matrix.multiply(\n                Matrix.add(\n                    Matrix.multiply(matrixF.transpose(), matrixF),\n                    switchPenaltyArray\n                ).inverse(),\n                matrixF.transpose()\n            ),\n            Matrix.subtract(targetBufferArray, predictedBufferArray)\n        );\n    }\n\n    /**\n     * 根据下载速度和buffer长度计算下一个码率\n     * @param speed 下载速度 kbps\n     * @param buffered 当前buffer ms\n     */\n    private _nextRateBySpeedAndBuffered(\n        speed: number,\n        buffered: number\n    ): number {\n        const switchPenaltyArray = Matrix.zeros(\n            this._conf.predictStep,\n            this._conf.predictStep\n        );\n        for (let i = 0; i < this._conf.predictStep; i++) {\n            switchPenaltyArray.set(\n                i,\n                i,\n                this._conf.switchPenalty * (this._conf.predictStep - i)\n            );\n        }\n\n        const futureThroughput = this._multistepPred(\n            this._pastThroughput,\n            this._conf.predictStep\n        );\n        // const result = this._multistepKalmanfilter(\n        //     this._xPrev,\n        //     this._pastThroughput[this._pastThroughput.length - 1],\n        //     this._PPrev,\n        //     this._conf.predictStep\n        // );\n        // const futureThroughput = result.futureThroughput;\n        // this._xPrev = result.xRet;\n        // this._PPrev = result.PRet;\n        Log.v(tag, `futureThroughput:${futureThroughput}`);\n        const estimatedThroughput = futureThroughput.map(item => {\n            return -(this._conf.duration / item);\n        });\n\n        const Bk = new Matrix([[buffered], [this._recentBuffer()]]);\n\n        const br: any[] = [];\n        br[0] = [buffered];\n        const target = this._adjustedTargetBuffer();\n        for (let i = 0; i < this._conf.predictStep; i++) {\n            br[i + 1] = [\n                this._conf.smoothRatioToTarget * br[i] +\n                (1 - this._conf.smoothRatioToTarget) * target\n            ];\n        }\n        const rateChangeArray = this._rateChangeArray(switchPenaltyArray, estimatedThroughput, Bk, br.slice(1));\n        Log.v(\n            tag,\n            `algorithm input speed:${speed} buffered:${buffered}`,\n            `output result:${rateChangeArray.get(0, 0)}`\n        );\n        return this._quantization(\n            (this._levels[this._current].bitrate + rateChangeArray.get(0, 0)),\n            speed\n        );\n    }\n\n    private _printFirstColumn(matrix: Matrix, name: string) {\n        let out = [];\n        for (let i = 0; i < matrix.shape[0]; ++i) {\n            out[i] = +matrix.get(i, 0).toFixed(2);\n        }\n        Log.v(tag, name, JSON.stringify(out));\n    }\n\n    private _printFirstRow(matrix: Matrix, name: string) {\n        let out = [];\n        for (let i = 0; i < matrix.shape[0]; ++i) {\n            out[i] = +matrix.get(0, i).toFixed(2);\n        }\n        Log.v(tag, name, JSON.stringify(out));\n    }\n\n    private _diag(arr: any[]): Matrix {\n        const dist = [],\n            len = arr.length;\n        for (let i = 0; i < len; i++) {\n            dist[i] = new Array(len);\n            for (let j = 0; j < len; j++) {\n                dist[i][j] = 0;\n            }\n            dist[i][i] = arr[i];\n        }\n        return new Matrix(dist, { shape: [len, len] });\n    }\n\n    private _multistepPred(\n        pastThroughput: number[],\n        predictStep: number\n    ): number[] {\n        const futureThroughput = new Array(predictStep);\n        const pastThroughputClone = pastThroughput.slice(0);\n        for (let i = 0; i < predictStep; i++) {\n            let bandwidthSum = 0,\n                nonzeroCnt = 0;\n            for (let j = 0; j < pastThroughput.length; j++) {\n                if (pastThroughputClone[j]) {\n                    bandwidthSum += 1.0 / pastThroughputClone[j];\n                    nonzeroCnt += 1;\n                }\n            }\n            if (nonzeroCnt === 0) {\n                continue;\n            } else {\n                futureThroughput[i] = 1.0 / (bandwidthSum / nonzeroCnt);\n            }\n            pastThroughputClone.shift();\n            pastThroughputClone.push(futureThroughput[i]);\n        }\n        return futureThroughput;\n    }\n\n    private _multistepKalmanfilter(\n        xLast: number,\n        z: number,\n        PLast: number,\n        predictStep: number\n    ) {\n        const R = this._conf.kalmanR,\n            Q = this._conf.kalmanQ;\n        const futureThroughput = new Array(this._conf.predictStep);\n        let xPrev = xLast,\n            PPrev = PLast,\n            xRet = 0,\n            PRet = 0;\n        for (let i = 0; i < predictStep; i++) {\n            const xMinus = xPrev,\n                PMinus = PPrev + Q,\n                K = PMinus / (PMinus + R),\n                predX = xMinus + K * (z - xMinus),\n                P = (1 - K) * PMinus;\n            if (i === 0) {\n                xRet = predX;\n                PRet = P;\n            }\n            futureThroughput[i] = predX;\n            xPrev = predX;\n            PPrev = P;\n        }\n        return { futureThroughput, xRet, PRet };\n    }\n}\n\nexport default AbrAlgorithm;\n","import LasEvents from '../core/events';\nimport Media from '../core/media';\nimport Observer from '../core/observer';\nimport { AbrConfig } from '../types/core';\nimport AbrAlgorithm from './abr-algorithm';\nimport { abrGetUrl } from './abr-get-url';\nimport AbrLevel from './abr-level';\nimport { AbrManifest } from './abr-manifest';\n\nexport type MultirateItem = {\n    url: string;\n    level: number;\n}\n/**\n * 多码率及自适应码率\n */\nclass Multirate extends Observer {\n    private _config: AbrConfig;\n    private _media: Media;\n    private _next: number = 0;\n    private _downloadSize: number = 0;\n    private _downloadStartTime: number = 0;\n    private _keyCount: number = 0;\n    private _index: number = 0;\n    private _alg: AbrAlgorithm;\n    private _manifest: AbrManifest;\n    private _autoLevelEnabled: boolean = false;\n\n    constructor(config: AbrConfig, media: Media) {\n        super();\n        this._config = config;\n        this._media = media;\n        this._manifest = new AbrManifest(config.manifest);\n        this._alg = new AbrAlgorithm();\n        this._alg.init(this._manifest);\n        this._autoLevelEnabled = this._manifest.abrLevels.length > 0\n    }\n\n    /**\n     * 初始化flv多码率\n     */\n    public init(): void {\n        this._downloadSize = 0;\n        this._downloadStartTime = performance.now();\n\n        // 当前流收到I帧计数\n        this._keyCount = 0;\n        this._index = this._next = 0;\n\n        if (this.current) {\n            if (this._autoLevelEnabled) {\n                this._index = this._next = this._alg.nextLevel;\n            }\n            this.trigger(LasEvents.MANIFEST_PARSED, {\n                levels: this._manifest.levels,\n                currentLevel: this._index\n            });\n        }\n    }\n\n    public destory(): void {\n        if (this._alg) {\n            this._alg.removeAllListeners();\n        }\n    }\n\n    public onLoaderChunk(size: number): void {\n        this._downloadSize += size;\n    }\n\n    public onLevelLoad(index: number) {\n        if (this._manifest.levels.length && index >= 0 && index < this._manifest.levels.length) {\n            this._keyCount = 0;\n            this._index = index;\n            this._downloadStartTime = performance.now();\n            this._downloadSize = 0;\n            this._alg.onLevelLoad(index);\n        }\n    }\n\n    /**\n     * 处理关键帧，是否切换码率\n     * @param time flv tag timestamp\n     */\n    public onKeyFrame(time: number): MultirateItem | undefined {\n        let levels = this._manifest.levels;\n        this._keyCount++;\n\n        if ((this._alg || this._next !== this._index) && this._keyCount > 1 && levels) {\n            let next = this._index;\n            if (this._next !== this._index) {\n                // 平滑切换\n                next = this._next;\n            } else if (this._autoLevelEnabled) {\n                // 自动\n                let now = performance.now();\n                this._alg.onGOP(this._media.bufferedSec(), this._downloadSize, (now - this._downloadStartTime) / 1000);\n                this._downloadSize = 0;\n                this._downloadStartTime = now;\n                this._next = next = this._alg.nextLevel;\n            } else {\n                return;\n            }\n            // TEST:\n            // next = (this._index + 1) % levels.length;\n            if (next !== this._index) {\n                return {\n                    url: this._getRequestUrl(next, time),\n                    level: next,\n                }\n            }\n        }\n        return;\n    }\n\n    public get autoLevelEnabled(): boolean {\n        return this._autoLevelEnabled;\n    }\n\n    /**\n     * 清晰度列表\n     */\n    public get levels(): AbrLevel[] {\n        return this._manifest.levels;\n    }\n\n    public get nextLevel(): number {\n        if (typeof this._next === 'number') {\n            return this._next;\n        } else {\n            return this._index;\n        }\n    }\n\n    public set nextLevel(value: number) {\n        if (value >= 0 && this._manifest.levels.length > value) {\n            this._autoLevelEnabled = false;\n            this._next = value;\n        } else if (value === -1) {\n            this._autoLevelEnabled = true;\n        }\n    }\n\n    public get currentLevel(): number {\n        return this._index;\n    }\n\n    public set currentLevel(value: number) {\n        if (value >= 0 && this._manifest.levels.length > value) {\n            this._autoLevelEnabled = false;\n            this._index = this._next = value;\n        } else if (value === -1) {\n            this._autoLevelEnabled = true;\n        }\n    }\n\n    private get current(): AbrLevel | undefined {\n        return this._manifest.levels[this._index];\n    }\n\n    /**\n     * 获取切换flv的请求地址\n     * @param index 码率index\n     * @param spts 切换时间戳，单位毫秒。大于0：关键帧pts；小于0：直播延迟\n     */\n    private _getRequestUrl(index: number, spts?: number): string {\n        let url = this._config.src;\n        let level = this._manifest.levels[index];\n        if (level) {\n            url = level.url;\n        }\n        return abrGetUrl(url, spts || this._config.defaultSpts);\n    }\n}\n\nexport default Multirate;\n","/**\n * Uint8Array数据缓存\n */\nclass Cache {\n    // 100m = 104857600 = 100 * 1024 * 1024\n    public static MAX_CACHE_SIZE = 104857600;\n    public static DEFAULT_CACHE_SIZE = 3145728;\n    // 初始cache大小\n    private _size: number;\n    private _readOffset: number = 0;\n    private _writeOffset: number = 0;\n    // cache\n    private _storage: ArrayBuffer;\n    private _cache: Uint8Array;\n\n    constructor(size: number = 0) {\n        if (size > 0) {\n            this._size = size;\n        } else {\n            this._size = Cache.DEFAULT_CACHE_SIZE;\n        }\n        this._storage = new ArrayBuffer(this._size);\n        this._cache = new Uint8Array(this._storage);\n    }\n\n    /**\n     * 添加至cache\n     * @param chunk 数据\n     */\n    public put(chunk: Uint8Array): void {\n        if (this._readOffset === this._writeOffset) {\n            this._readOffset = this._writeOffset = 0;\n        }\n        if (this._writeOffset + chunk.byteLength > this._size) {\n            const expected = this._writeOffset + chunk.byteLength - this._readOffset;\n            if (expected > this._size) {\n                // 扩展\n                this._collateCache();\n                this.expandCache(expected);\n            } else {\n                // 整理buffer\n                this._collateCache();\n            }\n        }\n        this._cache.set(chunk, this._writeOffset);\n        this._writeOffset += chunk.byteLength;\n    }\n\n    /**\n     * 获取数据拷贝\n     * @param len 数据长度\n     * @returns 数据\n     */\n    public get(len: number): Uint8Array | null {\n        if (len + this._readOffset > this._writeOffset) {\n            return null;\n        }\n        let data = null;\n        if (this._cache.slice) {\n            data = this._cache.slice(this._readOffset, this._readOffset + len);\n        } else {\n            const offset = this._cache.byteOffset + this._readOffset;\n            data = new Uint8Array(this._storage.slice(offset, offset + len));\n        }\n        this._readOffset += len;\n        return data;\n    }\n\n    /**\n     * 获取数据读取Uint8Array，从cache中直接读取，异步使用可能出现故障\n     * @param len 长度\n     * @returns 数据\n     */\n    public read(len: number): Uint8Array | null {\n        if (len + this._readOffset > this._writeOffset) {\n            return null;\n        }\n        return new Uint8Array(this._storage, this._readOffset, len);\n    }\n\n    /**\n     * 后移读指针\n     * @param len 数据长度\n     */\n    public skip(len: number): void {\n        if (len + this._readOffset > this._writeOffset) {\n            return;\n        }\n        this._readOffset += len;\n    }\n\n    /**\n     * 清理\n     */\n    public clear(): void {\n        this._readOffset = this._writeOffset = 0;\n    }\n\n    /**\n     * 扩展cache，cache不足时，cache容量max(翻倍,预期)\n     * @param expected 预期最小值\n     */\n    public expandCache(expected: number = 0): void {\n        this._size = Math.max(this._size * 2, expected);\n        if (this._size >= Cache.MAX_CACHE_SIZE) {\n            throw new Error('max cache size');\n        }\n        if (this._readOffset === 0 && this._writeOffset === 0) {\n            this._storage = new ArrayBuffer(this._size);\n        } else {\n            this._storage = this._transfer(this._storage, this._size);\n        }\n        this._cache = new Uint8Array(this._storage);\n    }\n\n    /**\n     * 未读取数据长度\n     */\n    public get unreadLen(): number {\n        return this._writeOffset - this._readOffset;\n    }\n\n    /**\n     * 整理cache中的数据，抛弃已读取的数据\n     */\n    private _collateCache(): void {\n        const remain = new Uint8Array(this._storage, this._readOffset, this._writeOffset - this._readOffset);\n        this._cache.set(remain);\n        this._writeOffset -= this._readOffset;\n        this._readOffset = 0;\n    }\n\n    private _transfer(source: ArrayBuffer, length: number): ArrayBuffer {\n        if (!(source instanceof ArrayBuffer)) {\n            throw new TypeError('Source must be an instance of ArrayBuffer');\n        }\n        if (length <= source.byteLength) {\n            return source.slice(0, length);\n        }\n        const sourceView = new Uint8Array(source),\n            destView = new Uint8Array(new ArrayBuffer(length));\n        destView.set(sourceView);\n        return destView.buffer;\n    }\n}\n\nexport default Cache;\n","import { ErrorDetails, ErrorTypes } from '../../core/errors';\nimport LasEvents from '../../core/events';\nimport Observer from '../../core/observer';\nimport Cache from '../../io/cache';\nimport { FlvSize, FlvTag, FlvTagType } from \"./flv\";\n\nexport type AbrCallback = (time: number) => any;\n\ntype Result = {\n    list: FlvTag[];\n    abr?: any;\n}\n\nclass FlvTagDump {\n    private _observer: Observer;\n    private _cache: Cache;\n    private _tag?: FlvTag;\n    private _result: Result;\n\n    private _parseLen: number = 0;\n    private _parseFunc: Function;\n    private _onAbr: AbrCallback;\n\n    constructor(observer: Observer, onAbr: AbrCallback) {\n        this._observer = observer;\n        this._onAbr = onAbr;\n        this._cache = new Cache();\n        this._parseLen = FlvSize.FLV_HEAD_LEN;\n        this._parseFunc = this._parseFlvHead;\n        this._result = { list: [] };\n    }\n\n    public reset(): void {\n        this._parseLen = FlvSize.FLV_HEAD_LEN;\n        this._parseFunc = this._parseFlvHead;\n        this._cache.clear();\n        this._tag = undefined;\n        this._result.list = [];\n        this._result.abr = undefined;\n    }\n\n    public append(input: ArrayBuffer): Result {\n        this._cache.put(new Uint8Array(input));\n        while (this._cache.unreadLen > this._parseLen) {\n            this._parseFunc();\n        }\n        let data = { list: this._result.list.splice(0), abr: this._result.abr }\n        this._result.abr = undefined;\n        return data;\n    }\n\n    /**\n     * 解析tag头\n     */\n    private _parseFlvHead(): void {\n        const data = this._cache.read(FlvSize.FLV_HEAD_LEN);\n        if (data) {\n            if (data[0] !== 0x46 || data[1] !== 0x4c || data[2] !== 0x56 || data[3] !== 0x01) {\n                this._observer.trigger(LasEvents.ERROR, {\n                    type: ErrorTypes.MUX_ERROR,\n                    details: ErrorDetails.PARSING_ERROR,\n                    fatal: true,\n                    reason: 'Flv: wrong head'\n                });\n            }\n            this._observer.trigger(LasEvents.FLV_HEAD, {\n                hasAudio: (data[4] & 4) >>> 2,\n                hasVideo: (data[4] & 1)\n            });\n            // TEST:\n            // this._observer.trigger(KEvents.FLV_HEAD, {\n            //     hasAudio: true,\n            //     hasVideo: true\n            // });\n\n            this._cache.skip(FlvSize.FLV_HEAD_LEN);\n            this._parseLen = FlvSize.FLV_TAG_HEAD_LEN;\n            this._parseFunc = this._parseFlvTagHead;\n        }\n    }\n\n    /**\n     * 解析flv tag head\n     */\n    private _parseFlvTagHead(): void {\n        this._tag = new FlvTag();\n        const data = this._cache.read(FlvSize.FLV_TAG_HEAD_LEN);\n        if (data) {\n            // 取出tag类型\n            this._tag.tagType = data[0];\n            // 取出包体大小\n            this._tag.dataSize = ((data[1] & 0xff) << 16) + ((data[2] & 0xff) << 8) + (data[3] & 0xff);\n            // 取出解码时间\n            this._tag.timestamp =\n                ((data[7] & 0xff) << 24) + ((data[4] & 0xff) << 16) + ((data[5] & 0xff) << 8) + (data[6] & 0xff);\n            this._cache.skip(FlvSize.FLV_TAG_HEAD_LEN);\n            // 尝试在处理完整个tag之前判断是否为关键帧，用于自适应码率\n            if (this._tag.tagType === FlvTagType.VIDEO) {\n                this._parseFunc = this._detectKeyFrame;\n                this._parseLen = FlvSize.AVC_KEY_FRAME_CHECK_LEN;\n            } else {\n                this._parseFunc = this._parseFlvTag;\n                this._parseLen = this._tag.dataSize + FlvSize.FLV_TAG_SIZE_LEN;\n            }\n        }\n    }\n\n    /**\n     * 检测关键帧\n     */\n    private _detectKeyFrame(): void {\n        const data = this._cache.read(2);\n        if (data && this._tag) {\n            const frameType = (data[0] & 240) >>> 4;\n            const packetType = data[1];\n            this._parseFunc = this._parseFlvTag;\n            this._parseLen = this._tag.dataSize + FlvSize.FLV_TAG_SIZE_LEN;\n            // 获取是否是关键帧\n            if (frameType === 1 && packetType === 1 && this._onAbr) {\n                this._result.abr = this._onAbr(this._tag.timestamp);\n                if (this._result.abr) {\n                    this._parseLen = FlvSize.FLV_HEAD_LEN;\n                    this._parseFunc = this._parseFlvHead;\n                    this._cache.clear();\n                    this._tag = undefined;\n                }\n            }\n        }\n    }\n\n    /**\n     * 解析flv tag\n     */\n    private _parseFlvTag(): void {\n        const tag = this._tag;\n        if (!tag) {\n            return;\n        }\n        if (tag.tagType === FlvTagType.SCRIPT || tag.tagType === FlvTagType.AUDIO || tag.tagType === FlvTagType.VIDEO) {\n            tag.body = this._cache.get(tag.dataSize);\n            this._cache.skip(4); // skip size\n            if (tag)\n                this._result.list.push(tag);\n            this._tag = undefined;\n        }\n        this._parseFunc = this._parseFlvTagHead;\n        this._parseLen = FlvSize.FLV_TAG_HEAD_LEN;\n    }\n}\n\nexport default FlvTagDump;\n","import { IBaseLoader, ILoaderContext, IBaseLoaderCallback } from '../types/io';\n/**\n * FetchLoader\n */\nexport default class FetchLoader implements IBaseLoader<ILoaderContext> {\n    public tag: string = 'fetch';\n    private _context!: ILoaderContext;\n    private _callbacks: IBaseLoaderCallback<ILoaderContext> | null = null;\n    private _controller: AbortController | null = null;\n    private _reader: ReadableStreamReader | null = null;\n    private _abort: boolean = false;\n\n    /**\n     * broswer is support moz-chunk\n     * @returns 是否支持\n     */\n    static isSupport(): boolean {\n        if (self.fetch && self.ReadableStream) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * 开始加载\n     * @param context context\n     * @param callbacks 回调\n     */\n    load(context: ILoaderContext, callbacks: IBaseLoaderCallback<ILoaderContext>) {\n        this._context = context;\n        this._callbacks = callbacks;\n\n        const reqHeaders = new Headers();\n        if (context.headers) {\n            context.headers.forEach(element => {\n                reqHeaders.append(element.header, element.value);\n            });\n        }\n        if (context.range) {\n            reqHeaders.append('Range', context.range);\n        }\n        const params: RequestInit = {\n            method: 'GET',\n            headers: reqHeaders,\n            mode: 'cors',\n            cache: 'default',\n            referrerPolicy: 'no-referrer-when-downgrade',\n            signal: this._getAbortSignal()\n        };\n        if (context.credentials) {\n            params.credentials = 'include';\n        }\n        fetch(context.url, params)\n            .then(res => {\n                context.responseUrl = res.url;\n                context.responseHeader = res.headers;\n                if (this._callbacks && this._callbacks.onConnect) {\n                    this._callbacks.onConnect(res.status);\n                }\n                if (res.ok) {\n                    // 兼容AbortController不可用\n                    if (this._abort) {\n                        if (res.body) {\n                            res.body.getReader().cancel();\n                        }\n                        return;\n                    }\n                    if (context.responseType === 'arraybuffer') {\n                        if (context.progress) {\n                            if (res.body) {\n                                this._reader = res.body.getReader();\n                                this._pump(this._reader);\n                            }\n                            return;\n                        }\n                        res.arrayBuffer().then(responseData => {\n                            this._onEnd(context, responseData);\n                        });\n                        return;\n                    }\n                    res.text().then(responseData => {\n                        this._onEnd(context, responseData);\n                    });\n                    return;\n                }\n                const error = new Error(res.status + ' ' + res.statusText);\n                this._onError(error);\n                return;\n            })\n            .catch(e => {\n                // 忽略AbortError，避免与timeout手动abort冲突\n                if (e.name !== 'AbortError') {\n                    this._onError(e);\n                }\n            });\n    }\n\n    abort() {\n        if (this._controller) {\n            this._controller.abort();\n        } else if (this._reader) {\n            this._reader.cancel();\n            this._reader = null;\n        }\n        this._abort = true;\n    }\n\n    destroy() {\n        this._callbacks = null;\n        this.abort();\n    }\n\n    _onProgress(context: ILoaderContext, chunk: ArrayBuffer) {\n        if (this._callbacks && this._callbacks.onProgress) {\n            this._callbacks.onProgress(context, chunk);\n        }\n    }\n\n    _onEnd(context: ILoaderContext, responseData: ArrayBuffer | string | null) {\n        if (this._callbacks && this._callbacks.onEnd) {\n            this._reader = null;\n            this._controller = null;\n            this._callbacks.onEnd(context, responseData);\n        }\n    }\n\n    _onError(e: Error) {\n        if (this._callbacks && this._callbacks.onError) {\n            this._callbacks.onError(e);\n        }\n    }\n\n    /**\n     * pump data\n     * @param reader 读取数据\n     * @private\n     */\n    _pump(reader: ReadableStreamReader) {\n        reader\n            .read()\n            .then(result => {\n                if (this._abort) {\n                    reader.cancel();\n                    return null;\n                }\n                if (result.done) {\n                    this._onEnd(this._context, null);\n                    return null;\n                }\n                const chunk = result.value.buffer;\n                this._onProgress(this._context, chunk);\n                return this._pump(reader);\n            })\n            .catch((e: Error) => {\n                if (e.name !== 'AbortError') {\n                    this._onError(e);\n                }\n            });\n    }\n\n    _getAbortSignal(): AbortSignal | null {\n        try {\n            if (AbortController) {\n                this._controller = new AbortController();\n                return this._controller.signal;\n            }\n        } catch (e) {\n            return null;\n        }\n        return null;\n    }\n}\n","import { IBaseLoader, ILoaderContext, IBaseLoaderCallback } from '../types/io';\nexport enum XHR_TYPE {\n    MOZ_CHUNK = 'moz-chunked-arraybuffer',\n    MS_STREAM = 'ms-stream',\n    UNKNOW = 'unknow',\n    UNSUPPORT = ''\n}\n\n/**\n * XhrLoader\n * @class XhrLoader\n */\nexport class XHR implements IBaseLoader<ILoaderContext> {\n    private static supportChunk: XHR_TYPE = XHR_TYPE.UNKNOW;\n\n    public tag: string = 'xhr';\n    private _xhr: XMLHttpRequest | null = null;\n    private _context!: ILoaderContext;\n    private _callbacks: IBaseLoaderCallback<ILoaderContext> | null = null;\n    private _reader: MSStreamReader | null = null;\n    private _msBufferOffset: number = 0;\n    private _msBufferUpper: number = 16 * 1024 * 1024; // 16MB\n    private _progress: XHR_TYPE = XHR_TYPE.UNKNOW;\n\n    static isSupportChunk() {\n        if (XHR.supportChunk !== XHR_TYPE.UNKNOW) {\n            return XHR.supportChunk;\n        }\n        try {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://example.com', true);\n            (xhr.responseType as any) = XHR_TYPE.MOZ_CHUNK;\n            if ((xhr.responseType as any) === XHR_TYPE.MOZ_CHUNK) {\n                XHR.supportChunk = XHR_TYPE.MOZ_CHUNK;\n                return XHR.supportChunk;\n            }\n        } catch (e) {\n            XHR.supportChunk = XHR_TYPE.UNSUPPORT;\n        }\n        try {\n            const xhr = new XMLHttpRequest();\n            xhr.open('GET', 'https://example.com', true);\n            (xhr.responseType as any) = XHR_TYPE.MS_STREAM;\n            if ((xhr.responseType as any) === XHR_TYPE.MS_STREAM) {\n                XHR.supportChunk = XHR_TYPE.MS_STREAM;\n                return XHR.supportChunk;\n            }\n        } catch (e) {\n            XHR.supportChunk = XHR_TYPE.UNSUPPORT;\n        }\n        return XHR_TYPE.UNSUPPORT;\n    }\n\n    constructor() {\n        this._xhr = null;\n        this._msBufferOffset = 0;\n    }\n\n    /**\n     * 开始加载\n     * @param context\n     * @param callbacks\n     */\n    load(context: ILoaderContext, callbacks: IBaseLoaderCallback<ILoaderContext>) {\n        this._callbacks = callbacks;\n        this._context = context;\n        this._progress = XHR_TYPE.UNSUPPORT;\n        if (context.progress && context.responseType === 'arraybuffer') {\n            this._progress = XHR.isSupportChunk();\n            if (this._progress === XHR_TYPE.MS_STREAM) {\n                const reader = this._reader = new (self as any).MSStreamReader();\n                reader.onprogress = this._msrOnProgress.bind(this);\n                reader.onload = this._onLoadEnd.bind(this);\n                reader.onerror = this._onError.bind(this);\n            }\n        }\n\n        const xhr = this._xhr = new XMLHttpRequest();\n        xhr.open('GET', this._context.url, true);\n        // arraybuffer类型尝试使用chunk\n        if (this._progress === XHR_TYPE.MOZ_CHUNK) {\n            (xhr.responseType as any) = XHR_TYPE.MOZ_CHUNK;\n            xhr.onprogress = this._onProgress.bind(this);\n            xhr.onload = this._onLoadEnd.bind(this);\n        } else if (this._progress === XHR_TYPE.MS_STREAM) {\n            (xhr.responseType as any) = XHR_TYPE.MS_STREAM;\n        } else {\n            (xhr.responseType as any) = context.responseType || 'arraybuffer';\n            xhr.onload = this._onLoadEnd.bind(this);\n        }\n        xhr.onreadystatechange = this._onReadyStateChange.bind(this);\n        xhr.onerror = this._onError.bind(this);\n        xhr.withCredentials = !!context.credentials;\n\n        if (context.range) {\n            xhr.setRequestHeader('Range', context.range);\n        }\n        xhr.send();\n    }\n\n    /**\n     * abort request\n     */\n    abort() {\n        if (this._reader) {\n            // 0 EMPTY 1 LOADING 2 DONE\n            if (this._reader.readyState === 1) {\n                this._reader.abort();\n            }\n            this._reader.onprogress = null;\n            this._reader.onload = null;\n            this._reader.onerror = null;\n            this._reader = null;\n        }\n        if (this._xhr) {\n            this._xhr.onreadystatechange = null;\n            this._xhr.onprogress = null;\n            this._xhr.onload = null;\n            this._xhr.onerror = null;\n            this._xhr.abort();\n            this._xhr = null;\n        }\n    }\n\n    /**\n     * destroy xhr Object clean cache\n     */\n    destroy() {\n        this._callbacks = null;\n        this.abort();\n    }\n\n    _onReadyStateChange(e: Event) {\n        if (!this._xhr) {\n            return;\n        }\n        const xhr = this._xhr;\n        if (xhr.readyState === 2) {\n            this._context.responseUrl = xhr.responseURL;\n            this._context.responseHeader = xhr.getAllResponseHeaders();\n            if (this._callbacks && this._callbacks.onConnect) {\n                this._callbacks.onConnect(xhr.status);\n            }\n            if (xhr.status < 200 || xhr.status > 299) {\n                this._onError(new Error('xhr error'));\n            }\n        } else if (xhr.readyState === 3) {\n            if (this._reader && this._reader.readyState === 0 && xhr.status >= 200 && xhr.status <= 299) {\n                this._reader.readAsArrayBuffer(xhr.response);\n            }\n        }\n    }\n\n    /**\n     * xhr onProgress\n     * @param {*} e xhr回调数据\n     */\n    _onProgress(e: Event) {\n        if (!this._xhr) {\n            return;\n        }\n        const chunk = this._xhr.response;\n        if (this._callbacks && this._callbacks.onProgress && chunk) {\n            this._callbacks.onProgress(this._context, chunk);\n        }\n    }\n\n    /**\n     * ms-stream progress\n     * @param {*} e MSStreamReader回调\n     */\n    _msrOnProgress(e: any) {\n        const reader = e.target;\n        const buffer = reader.result;\n        if (!buffer) {\n            // result may be null, workaround for buggy M$\n            this._onError(new Error('ms buffer null'));\n            return;\n        }\n\n        const chunk = buffer.slice(this._msBufferOffset);\n        this._msBufferOffset = buffer.byteLength;\n\n        if (this._callbacks && this._callbacks.onProgress) {\n            this._callbacks.onProgress(this._context, chunk);\n        }\n\n        if (buffer.byteLength >= this._msBufferUpper) {\n            this._onError(new Error('ms buffer too large'));\n        }\n    }\n\n    /**\n     * xhr onLoadEnd\n     * @param {*} e xhr回调数据\n     */\n    _onLoadEnd(e: ProgressEvent) {\n        let data = null;\n        const target = this._xhr;\n        if (!this._progress && target) {\n            data = target.response;\n        }\n        if (this._callbacks) {\n            this._callbacks.onEnd(this._context, data);\n        }\n    }\n\n    /**\n     * xhr onXhrError\n     * @param {*} e xhr回调数据\n     * @private\n     */\n    _onError(e: any) {\n        if (this._callbacks && this._callbacks.onError) {\n            this._callbacks.onError(e);\n        }\n    }\n}\n","import Browser from '../utils/browser';\nimport FetchLoader from './fetch';\nimport { XHR } from './xhr';\nimport { Log } from '../utils/log';\nimport {\n    IBaseLoader,\n    ILoaderContext,\n    IBaseLoaderCallback,\n    ILoaderCallback,\n    ILoaderStats,\n    ILoaderConfig,\n    ILoader\n} from '../types/io';\n\nlet ChunkLoader: any;\nlet index: number = 0;\n/**\n * 加载器封装\n * @param  {object} video config\n */\nexport default class Loader<T extends ILoaderContext> implements ILoader<T> {\n    public tag: string = 'loader';\n    public context!: T;\n    private _loader: IBaseLoader<T> | null;\n    protected _callbacks: ILoaderCallback<T> | null = null;\n    protected _config: ILoaderConfig;\n    private _loaderCallback!: IBaseLoaderCallback<T>;\n    protected _stats!: ILoaderStats;\n    protected _retryDelay: number = 0;\n    private _loading: boolean = false;\n    private _aborted: boolean = false;\n    private _requestTimeout: any;\n    private _transTimer: any;\n    private _retryTimeout: any;\n    protected _rangeStart?: number;\n    private _continuedTransmissionRetry: boolean = false;\n    private _progressTime: number = 0;\n\n    /**\n     * 获取流式加载Loader类\n     * @param useFetch 是否使用fetch\n     * @returns class\n     */\n    _getInternalLoader(useFetch: boolean) {\n        if (typeof ChunkLoader !== 'undefined') {\n            return ChunkLoader;\n        }\n        ChunkLoader = null;\n        // ms优先使用xhr，其他浏览器优先使用fetch\n        if (Browser.msie || Browser.msedge) {\n            if (useFetch) {\n                if (FetchLoader.isSupport()) {\n                    ChunkLoader = FetchLoader;\n                }\n                return ChunkLoader;\n            }\n            if (XHR.isSupportChunk()) {\n                ChunkLoader = XHR;\n            } else if (FetchLoader.isSupport()) {\n                ChunkLoader = FetchLoader;\n            }\n        } else if (FetchLoader.isSupport()) {\n            ChunkLoader = FetchLoader;\n        } else if (XHR.isSupportChunk()) {\n            ChunkLoader = XHR;\n        }\n        return ChunkLoader;\n    }\n\n    constructor() {\n        this.tag = 'loader';\n        index++;\n        this._loader = null;\n        this._config = {\n            useFetch: false,\n            connectionTimeout: 0,\n            transmissionTimeout: 0,\n            maxRetry: 0,\n            retryDelay: 0\n        };\n        this._loaderCallback = {\n            onConnect: this._onConnect.bind(this),\n            onProgress: this._onProgress.bind(this),\n            onEnd: this._onEnd.bind(this),\n            onError: this._onError.bind(this)\n        };\n    }\n\n    load(context: T, callbacks: ILoaderCallback<T>, config: ILoaderConfig) {\n        this._init(context, callbacks, config);\n        this._loadInternal();\n    }\n\n    /**\n     * destory\n     */\n    destroy() {\n        this._stopTimer();\n        this._abortInternal();\n        this._destroyLoader();\n        this._callbacks = null;\n    }\n\n    _init(context: T, callbacks: ILoaderCallback<T>, config: ILoaderConfig) {\n        this.context = context;\n        this._rangeStart = context.rangeStart\n        this._callbacks = callbacks;\n        this._config = config || this._config;\n\n        this._stats = {\n            id: '',\n            trequest: performance.now(),\n            retry: 0,\n            loaded: 0,\n            code: 0,\n            output: 0,\n            tfirst: 0,\n            tload: 0,\n            total: 0,\n            tsload: 0,\n            tstart: 0,\n            fatal: false,\n            text: ''\n        };\n        if (this._config.retryDelay) {\n            this._retryDelay = this._config.retryDelay;\n        }\n    }\n\n    /**\n     * 销毁当前loader\n     */\n    _destroyLoader() {\n        if (this._loader) {\n            this._loader.destroy();\n            this._loader = null;\n        }\n    }\n\n    /**\n     * 开始加载，非流式处理优先使用xhr\n     */\n    _loadInternal() {\n        this._loading = true;\n        this._aborted = false;\n        const stats = this._stats;\n        stats.code = 0;\n        stats.tfirst = 0;\n        stats.loaded = 0;\n        if (this._retryTimeout) {\n            clearTimeout(this._retryTimeout);\n            this._retryTimeout = null;\n        }\n        if (this.context.progress) {\n            this._loader = new (this._getInternalLoader(!!this._config.useFetch))();\n        } else {\n            this._loader = new XHR();\n        }\n        if (!this._loader) {\n            return;\n        }\n        stats.id = `${this._loader.tag}-${index}`;\n        // 连接超时\n        if (this._config.connectionTimeout) {\n            this._requestTimeout = setTimeout(this._onTimeout.bind(this), this._config.connectionTimeout);\n        }\n        if (this.context.rangeEnd) {\n            this.context.range = 'bytes=' + this.context.rangeStart + '-' + (this.context.rangeEnd - 1);\n        } else if (this.context.rangeStart) {\n            this.context.range = 'bytes=' + this.context.rangeStart + '-';\n        }\n        stats.tsload = Date.now();\n        stats.tstart = performance.now();\n        this._loader.load(this.context, this._loaderCallback);\n    }\n\n    _abortInternal() {\n        if (this._callbacks && this._callbacks.onAbort && !this._aborted && this._loading) {\n            this._callbacks.onAbort(this.context, this._stats);\n        }\n        this._aborted = true;\n        if (this._loader) {\n            this._loader.abort();\n        }\n    }\n\n    abort() {\n        this._stopTimer();\n        this._abortInternal();\n    }\n\n    /**\n     * 停止所有计时器\n     * 连接超时、重试延迟、传输超时\n     */\n    _stopTimer() {\n        if (this._requestTimeout) {\n            clearTimeout(this._requestTimeout);\n            this._requestTimeout = null;\n        }\n        if (this._retryTimeout) {\n            clearTimeout(this._retryTimeout);\n            this._retryTimeout = null;\n        }\n        this._stopTransmissionTimer();\n    }\n\n    _onConnect(status: number) {\n        if (this._requestTimeout) {\n            clearTimeout(this._requestTimeout);\n            this._requestTimeout = null;\n        }\n        this._startTransmissionTimer();\n        this._stats.code = status;\n        this._stats.tfirst = Math.max(this._stats.trequest, performance.now());\n    }\n    _onProgress(context: T, chunk: ArrayBuffer) {\n        const stats = this._stats;\n        this._progressTime = performance.now();\n        // 流式下载错误重试后，从中断位置继续抛出数据，与range断点续传冲突，不支持range时使用\n        if (!this._continuedTransmissionRetry && stats.output > stats.loaded) {\n            const size = stats.loaded + chunk.byteLength - stats.output;\n            if (size > 0) {\n                const tmp = chunk.slice(stats.output - stats.loaded);\n                this._callProgress(this.context, tmp, stats);\n            }\n        } else {\n            this._callProgress(this.context, chunk, stats);\n        }\n        stats.loaded += chunk.byteLength;\n    }\n    _callProgress(context: T, chunk: ArrayBuffer, stats: ILoaderStats) {\n        this._stats.output += chunk.byteLength;\n        if (this._callbacks && this._callbacks.onProgress) {\n            this._callbacks.onProgress(context, chunk, stats);\n        }\n    }\n    _onEnd(context: T, responseData: string | ArrayBuffer | null) {\n        this._stopTimer();\n        const stats = this._stats;\n        if (responseData) {\n            if (typeof responseData === 'string') {\n                stats.total = stats.loaded = responseData.length || 0;\n            } else {\n                stats.total = stats.loaded = responseData.byteLength || 0;\n            }\n        } else {\n            stats.total = stats.loaded;\n        }\n        stats.tload = Math.max(stats.tfirst, performance.now());\n        this._loading = false;\n        stats.output = 0;\n        if (this._callbacks) {\n            this._callbacks.onEnd(context, responseData, stats);\n        }\n    }\n\n    _onError(e: Error) {\n        Log.i(this.tag, e);\n        this._stopTimer();\n        this._destroyLoader();\n        const stats = this._stats;\n        const config = this._config;\n        this._loading = false;\n\n        stats.fatal = !config.maxRetry || (stats.retry >= config.maxRetry || !config.maxRetry);\n        stats.text = e.message || 'load error';\n        if (this._callbacks && this._callbacks.onError) {\n            this._callbacks.onError(this.context, stats);\n        }\n        if (stats.fatal) {\n            return;\n        }\n        // 尝试使用range做断点续传\n        if (this._stats.output && this._stats.loaded > 0) {\n            if (this._rangeStart) {\n                this.context.rangeStart = this._rangeStart + this._stats.output;\n            } else {\n                this.context.rangeStart = this._stats.output;\n            }\n            this._continuedTransmissionRetry = true;\n        } else {\n            this.context.rangeStart = this._rangeStart;\n            this._continuedTransmissionRetry = false;\n        }\n        stats.retry++;\n        if (this._callbacks) {\n            if (this._retryDelay) {\n                this._retryTimeout = setTimeout(this._loadInternal.bind(this), this._retryDelay);\n                this._retryDelay = 2 * this._retryDelay;\n            } else {\n                this._loadInternal();\n            }\n        }\n    }\n\n    _onTimeout() {\n        this._loading = false;\n        this._abortInternal();\n        const e = new Error('timeout');\n        this._onError(e);\n    }\n\n    // 传输超时\n    _startTransmissionTimer() {\n        this._stopTransmissionTimer();\n        this._progressTime = performance.now();\n        let timeout = this._config.transmissionTimeout || 0;\n        if (timeout) {\n            this._transTimer = setInterval(() => {\n                if (performance.now() - this._progressTime > timeout) {\n                    this._onTimeout();\n                }\n            }, 1000);\n        }\n    }\n\n    _stopTransmissionTimer() {\n        if (this._transTimer) {\n            clearInterval(this._transTimer);\n            this._transTimer = null;\n        }\n    }\n}\n","export const REPORT_TYPES = {\n    START_LOAD_STREAM: 'startLoadStream',\n    LOADER_CHUNK_ARRIVAL: 'loader-chunk-arrival',\n    KEY_FRAME: 'keyFrame',\n};\n","import work from 'webworkify-webpack';\nimport { abrGetUrl } from '../abr/abr-get-url';\nimport { AbrManifest } from '../abr/abr-manifest';\nimport Multirate, { MultirateItem } from '../abr/multirate';\nimport { FlvTag } from '../demux/flv/flv';\nimport FlvDemuxerInline from '../demux/flv/flv-demuxer-inline';\nimport FlvTagDump from '../demux/flv/flv-tag-dump';\nimport Loader from '../io/loader';\nimport { FLVTransConfig } from '../types/core';\nimport { ILoaderCallback, ILoaderConfig, ILoaderContext, ILoaderStats } from '../types/io';\nimport { Log } from '../utils/log';\nimport { ErrorDetails, ErrorTypes } from './errors';\nimport LasEvents from './events';\nimport Media from './media';\nimport Observer from './observer';\nimport { REPORT_TYPES } from './report-types';\n\n/**\n * TransFLV\n * @class TransFLV\n * @param {object} config 配置\n */\nconst tag = 'TransFLV';\nexport default class TransFLV extends Observer {\n    private _config: FLVTransConfig;\n    private _media: Media;\n    private _w?: Worker;\n    private _flv?: FlvDemuxerInline;\n    private _observer: Observer;\n\n    private _loader: Loader<ILoaderContext> | null = null;\n    private _loaderConf: ILoaderConfig;\n    private _loaderCallbacks: ILoaderCallback<ILoaderContext>;\n    private _multirate?: Multirate;\n    private _contiguous: boolean;\n    private _remuxId: number;\n    private _discontinuity: boolean = false;\n    private _accurateTimeOffset: boolean = false;\n    private _baseTimeSec: number = 0;\n    private _tagDump: FlvTagDump;\n    private _currentUrl?: any;\n    private _lastDTS: number = 0;\n    private _isAbr: boolean = false;\n    private _progressTime: number = 0;\n\n    constructor(config: FLVTransConfig, media: Media) {\n        super();\n        this._config = config;\n        this._media = media;\n\n        if (config.manifest) {\n            if (AbrManifest.verify(config.manifest)) {\n                this._isAbr = true;\n            } else {\n                config.hasVideo = config.manifest.hasVideo;\n                config.hasAudio = config.manifest.hasAudio;\n            }\n        }\n\n        this._loaderConf = {\n            connectionTimeout: this._config.connectionTimeout,\n            transmissionTimeout: this._config.transmissionTimeout,\n            maxRetry: 0,\n            retryDelay: 0,\n            useFetch: true\n        };\n        this._loaderCallbacks = {\n            onProgress: this._onProgress.bind(this),\n            onError: this._onLoaderError.bind(this),\n            onEnd: this._onLoaderEnd.bind(this),\n            onAbort: this._onAbort.bind(this)\n        };\n        this._contiguous = false;\n        this._remuxId = 1;\n\n        const observer = (this._observer = new Observer());\n        const onMessage = this._onMessage;\n        observer.on(LasEvents.PARSING_INIT_SEGMENT, onMessage);\n        observer.on(LasEvents.PARSING_DATA, onMessage);\n        observer.on(LasEvents.ERROR, onMessage);\n        observer.on(LasEvents.SCRIPT_PARSED, onMessage);\n        observer.on(LasEvents.DISCONTINUITY, onMessage);\n        observer.on(LasEvents.FLV_HEAD, onMessage);\n\n        this._tagDump = new FlvTagDump(observer, this._onKeyframe);\n\n        if (this._config.webWorker) {\n            Log.i(tag, 'webWorker');\n            this._onWorkMessage = this._onWorkMessage.bind(this);\n            this._w = work(require.resolve('../demux/flv/flv-demuxer-worker'));\n            if (this._w) {\n                this._w.addEventListener('message', this._onWorkMessage);\n                this._w.postMessage({\n                    cmd: 'init',\n                    config: this._config,\n                    data: { remuxId: this._remuxId },\n                    vendor: navigator.vendor\n                });\n                return;\n            }\n        }\n        this._flv = new FlvDemuxerInline(observer, this._config, { remuxId: this._remuxId }, navigator.vendor);\n        this._flv.init();\n    }\n\n    public init(): void {\n        if (this._isAbr && !this._multirate) {\n            this._multirate = new Multirate(this._config, this._media);\n            this._multirate.on(LasEvents.MANIFEST_PARSED, this._onMessage);\n            this._multirate.init();\n        }\n    }\n\n    private _onWorkMessage(ev: any) {\n        const data = ev.data;\n        if (ev.data.event === LasEvents.PARSING_DATA) {\n            data.data.payload = data.payload;\n        }\n        this._onMessage(ev.data.event, data.data);\n    }\n\n    private _onKeyframe = (timestamp: number): MultirateItem | undefined => {\n        if (this._multirate) {\n            let result = this._multirate.onKeyFrame(timestamp);\n            if (result) {\n                if (this._tagDump) {\n                    this._tagDump.reset();\n                }\n                // 平滑切换\n                let info = Object.assign({}, result);\n                this._baseTimeSec = this._lastDTS;\n                this.emit(LasEvents.LEVEL_SWITCHING, { level: info.level, startSec: this._baseTimeSec, smooth: true });\n                this._media.updateStreamTime(0, 0);\n                return info;\n            }\n        }\n        return;\n    }\n\n    /**\n     * instance ioloader\n     */\n    public loadSource(): void {\n        let mr = this._multirate;\n        if (mr) {\n            let data = mr.levels[mr.currentLevel];\n            if (data) {\n                this._load(abrGetUrl(data.url, this._config.defaultSpts), mr.currentLevel);\n            } else {\n                this.emit(LasEvents.ERROR, {\n                    type: ErrorTypes.OTHER_ERROR,\n                    details: ErrorDetails.PARSING_ERROR,\n                    fatal: true,\n                    reason: 'manifest parse error'\n                });\n            }\n        } else {\n            this._load(this._config.src);\n        }\n    }\n\n    /**\n     * destroy\n     */\n    public destroy(): void {\n        if (this._loader) {\n            this._loader.destroy();\n            this._loader = null;\n        }\n        if (this._w) {\n            this._w.postMessage({ cmd: 'destroy' });\n            this._w.removeEventListener('message', this._onWorkMessage);\n            this._w.terminate();\n        }\n        if (this._flv) {\n            this._flv.destroy();\n            this._flv = undefined;\n        }\n\n        if (this._multirate) {\n            this._multirate.removeAllListeners();\n            this._multirate.destory();\n        }\n\n        const observer = this._observer;\n        if (observer) {\n            observer.removeAllListeners();\n        }\n    }\n\n    public get autoLevelEnabled(): boolean {\n        if (this._multirate) {\n            return this._multirate.autoLevelEnabled;\n        }\n        return false;\n    }\n\n    public get levels() {\n        if (this._multirate) {\n            return this._multirate.levels;\n        }\n        return [];\n    }\n\n    public get nextLevel(): number {\n        if (this._multirate) {\n            return this._multirate.nextLevel;\n        }\n        return 0;\n    }\n\n    public set nextLevel(value: number) {\n        const mr = this._multirate;\n        if (mr) {\n            mr.nextLevel = value;\n        }\n    }\n\n    public get currentLevel(): number {\n        if (this._multirate) {\n            return this._multirate.currentLevel;\n        }\n        return 0;\n    }\n\n    public set currentLevel(value: number) {\n        const mr = this._multirate;\n        if (mr) {\n            let load = value >= 0 || value !== mr.currentLevel;\n            mr.currentLevel = value;\n            const data = mr.levels[mr.currentLevel];\n            if (load && data) {\n                this._currentUrl = abrGetUrl(data.url, this._config.defaultSpts);\n                this._refreshRemuxId();\n                this._contiguous = false;\n                this._discontinuity = true;\n                this._accurateTimeOffset = false;\n                if (this._tagDump) {\n                    this._tagDump.reset();\n                }\n                this._baseTimeSec = this._media.currentTime;\n                this.emit(LasEvents.LEVEL_SWITCHING, { level: mr.currentLevel, startSec: this._baseTimeSec, smooth: false });\n                this._load(this._currentUrl, mr.currentLevel);\n            }\n        }\n    }\n\n\n    private _onMessage = (ev: string, data: any): void => {\n        switch (ev) {\n            case LasEvents.FLV_HEAD:\n                if (this._w) {\n                    this._w.postMessage({ cmd: 'flvHead', hasAudio: data.hasAudio, hasVideo: data.hasVideo });\n                } else if (this._flv) {\n                    this._flv.flvHead(data.hasAudio, data.hasVideo);\n                }\n                break;\n            case LasEvents.PARSING_INIT_SEGMENT:\n                this.emit(LasEvents.PARSING_INIT_SEGMENT, data);\n                break;\n            case LasEvents.PARSING_DATA:\n                {\n                    if (data.extra && data.extra.remuxId !== this._remuxId) {\n                        // 过期\n                        break;\n                    }\n                    if (data.type === 'audio' && data.startDTS > this._baseTimeSec) {\n                        this._media.updateStreamTime(data.streamDTS, data.startDTS);\n                    }\n                    this._lastDTS = data.startDTS;\n                    this.emit(LasEvents.PARSING_DATA, {\n                        data: data.payload,\n                        type: data.type,\n                        startDTS: data.startDTS || 0,\n                        endDTS: data.endDTS || 0,\n                        startPTS: data.startPTS || 0,\n                        endPTS: data.endPTS || 0,\n                        duration: data.endDTS - data.startDTS,\n                        framesInfo: data.framesInfo\n                    });\n                }\n                break;\n            case LasEvents.DISCONTINUITY:\n                if (this._w) {\n                    this._w.postMessage({ cmd: 'flush' });\n                } else if (this._flv) {\n                    this._flv.flush();\n                }\n                this._tagDump.reset();\n                this._discontinuity = true;\n                this._accurateTimeOffset = false;\n                this._contiguous = false;\n                this._baseTimeSec = data;\n                break;\n            default:\n                // LOST_FRAMES SCRIPT_PARSED REPORT ERROR END\n                this.emit(ev, data);\n                break;\n        }\n    }\n\n    private _load(url: string, index: number = 0): void {\n        if (this._loader) {\n            this._loader.destroy();\n            this._loader = null;\n        }\n        if (this._multirate) {\n            this._multirate.onLevelLoad(index);\n        }\n        this._currentUrl = url;\n        let level = this.levels[index]\n        this.emit(LasEvents.REPORT, {\n            type: REPORT_TYPES.START_LOAD_STREAM,\n            url,\n            sync: this._baseTimeSec,\n            index: index,\n            bitrate: level ? level.bitrate : 0\n        });\n        if (!this._loader) {\n            this._loader = new Loader();\n        }\n        const context = {\n            url,\n            progress: true,\n            responseType: 'arraybuffer',\n            credentials: this._config.credentials\n        };\n        if (this._loader instanceof Loader) {\n            this._loader.load(context, this._loaderCallbacks, this._loaderConf);\n        }\n    }\n\n    private _append(\n        tags: FlvTag[],\n        timeOffset: number,\n        discontinuity: boolean,\n        contiguous: boolean,\n        accurateTimeOffset: boolean\n    ): void {\n        if (this._w) {\n            this._w.postMessage({\n                cmd: 'append',\n                tags,\n                timeOffset: timeOffset || 0,\n                discontinuity,\n                contiguous,\n                accurateTimeOffset\n            });\n        } else if (this._flv) {\n            this._flv.append(tags, timeOffset || 0, discontinuity, contiguous, accurateTimeOffset);\n        }\n    }\n\n    private _onProgress(context: ILoaderContext, data: string | ArrayBuffer, stats: ILoaderStats): void {\n        if (!(data instanceof ArrayBuffer)) {\n            return;\n        }\n        if (this._multirate) {\n            this._multirate.onLoaderChunk(data.byteLength);\n        }\n        this.emit(LasEvents.REPORT, {\n            type: REPORT_TYPES.LOADER_CHUNK_ARRIVAL,\n            byteLength: data.byteLength,\n            timeCost: performance.now() - this._progressTime || stats.trequest,\n            header: context.responseHeader\n        });\n        this._progressTime = performance.now();\n        const result = this._tagDump.append(data);\n        this._append(result.list, this._baseTimeSec, this._discontinuity, this._contiguous, this._accurateTimeOffset);\n        this._accurateTimeOffset = true;\n        this._contiguous = true;\n        this._discontinuity = false;\n\n        // 是否需要切换\n        if (result.abr) {\n            this._load(result.abr.url, result.abr.level);\n        }\n    }\n\n    private _onAbort(): void { }\n\n    private _onLoaderError(context: ILoaderContext, status: ILoaderStats): void {\n        if (!status.fatal) {\n            return;\n        }\n        const errInfo = {\n            type: ErrorTypes.NETWORK_ERROR,\n            details: ErrorDetails.LOAD_ERROR,\n            fatal: true,\n            reason: status.text,\n            statusCode: status.code,\n            url: context.url\n        };\n        this.emit(LasEvents.ERROR, errInfo);\n    }\n\n    private _onLoaderEnd(): void {\n        if (this._w) {\n            this._w.postMessage({ cmd: 'end' });\n        } else if (this._flv) {\n            this._flv.end();\n        }\n    }\n\n    private _refreshRemuxId(): void {\n        this._remuxId++;\n        const data = { remuxId: this._remuxId };\n        if (this._w) {\n            this._w.postMessage({ cmd: 'setExtra', data: data });\n        } else if (this._flv) {\n            this._flv.setExtra(data);\n        }\n    }\n}\n","import { ErrorDetails } from '../core/errors';\n\nconst ErrorCodeList: Record<number|string, string> = {\n    400: '01', // http 400\n    401: '02', // http 401\n    403: '03', // http 403\n    404: '04', // http 404\n    other4xx: '05', // http 4xx\n    serverError: '06', // http 5xx\n    timeoutOpen: '07',\n    timeoutIO: '08',\n    200: '09',\n    206: '09'\n};\n\nexport function getErrorCode(detail: ErrorDetails, reason: string, httpStatusCode: number = 0): number {\n    if (detail >= 100) {\n        return detail;\n    }\n    let code = '00';\n    if (reason === 'timeout') {\n        if (!httpStatusCode) {\n            code = ErrorCodeList.timeoutOpen || code;;\n        } else {\n            code = ErrorCodeList.timeoutIO || code;;\n        }\n    } else if (ErrorCodeList.hasOwnProperty(httpStatusCode)) {\n        code = ErrorCodeList[httpStatusCode] || code;\n    } else if ((/^4\\d{2}$/).test(httpStatusCode.toString())) {\n        code = ErrorCodeList.other4xx || code;;\n    } else if ((/^5\\d{2}$/).test(httpStatusCode.toString())) {\n        code = ErrorCodeList.serverError || code;;\n    }\n    return parseInt(detail + code, 10);\n}\n","import { getMediaSource } from './mediasource-helper';\nimport FetchLoader from '../io/fetch';\nimport { XHR, XHR_TYPE } from '../io/xhr';\n\nexport function isSupported(): boolean {\n    const mediaSource = getMediaSource();\n    const sourceBuffer = (window as any).SourceBuffer || (window as any).WebKitSourceBuffer;\n    const isTypeSupported: boolean =\n        mediaSource &&\n        typeof mediaSource.isTypeSupported === 'function' &&\n        mediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n\n    const sourceBufferValidAPI =\n        !sourceBuffer ||\n        (sourceBuffer.prototype &&\n            typeof sourceBuffer.prototype.appendBuffer === 'function' &&\n            typeof sourceBuffer.prototype.remove === 'function');\n\n    let streaming = FetchLoader.isSupport() || XHR.isSupportChunk() === XHR_TYPE.MOZ_CHUNK;\n    return isTypeSupported && sourceBufferValidAPI && streaming;\n}\n","export type MonitorData = {\n    decodedFPS: number,\n    droppedFPS: number,\n    decodedFrames: number,\n    droppedFrames: number,\n    loadStartTime: number,\n    firstFrameTime: number,\n    blockDuration: number,\n    blockCount: number,\n    downloadedBytes: number,\n} & Record<string, any>\n\nexport function getNewMonitorData(): MonitorData {\n    return {\n        decodedFPS: 0,\n        droppedFPS: 0,\n        decodedFrames: 0,\n        droppedFrames: 0,\n        loadStartTime: 0,\n        firstFrameTime: 0,\n        blockDuration: 0,\n        blockCount: 0,\n        downloadedBytes: 0,\n    }\n}\n","/*\n * FPS Controller\n */\n\nconst { performance } = window;\n\nclass FPS {\n    private tag: string = 'fps';\n    private _lastDroppedFrames: number = 0;\n    private _lastDecodedFrames: number = 0;\n    private _video: HTMLVideoElement | null = null;\n    private _isVideoPlaybackQualityAvailable: boolean = false;\n    private _lastTime: number = 0;\n    private _decoded: number = 0;\n    private _dropped: number = 0\n\n    constructor() {\n    }\n\n    public attachMedia(media: HTMLVideoElement) {\n        const video = this._video = media instanceof (window as any).HTMLVideoElement ? media : null;\n        if (video) {\n            // 部分浏览器seek后帧数信息归零的问题\n            this._isVideoPlaybackQualityAvailable = typeof video.getVideoPlaybackQuality === 'function';\n        }\n    }\n\n    public destory() {\n    }\n\n    public reset() {\n        this._lastTime = performance.now();\n        this._lastDroppedFrames = this._lastDecodedFrames = this._decoded = this._dropped = 0;\n        const video = this._video;\n        if (video) {\n            try {\n                if (this._isVideoPlaybackQualityAvailable) {\n                    const videoPlaybackQuality = video.getVideoPlaybackQuality();\n                    this._lastDecodedFrames = videoPlaybackQuality.totalVideoFrames;\n                    this._lastDroppedFrames = videoPlaybackQuality.droppedVideoFrames;\n                } else {\n                    this._lastDecodedFrames = (video as any).webkitDecodedFrameCount;\n                    this._lastDroppedFrames = (video as any).webkitDroppedFrameCount;\n                }\n            } catch (e) {\n                return;\n            }\n        }\n    }\n\n    public checkFPSInterval(): null | {\n        decoded: number,\n        dropped: number,\n        decodedFPS: number,\n        droppedFPS: number\n    } {\n        const video = this._video;\n        const currentTime = performance.now();\n        let info: any = null, decoded = 0, dropped = 0;\n\n        if (video) {\n            if (this._isVideoPlaybackQualityAvailable) {\n                const videoPlaybackQuality = video.getVideoPlaybackQuality();\n                decoded = videoPlaybackQuality.totalVideoFrames;\n                dropped = videoPlaybackQuality.droppedVideoFrames;\n            } else {\n                decoded = (video as any).webkitDecodedFrameCount || 0;\n                dropped = (video as any).webkitDroppedFrameCount || 0;\n            }\n        }\n\n        if (decoded) {\n            if (decoded < this._lastDecodedFrames) {\n                this._lastDecodedFrames = 0;\n                this._lastDroppedFrames = 0;\n            }\n            let currentPeriod = currentTime - this._lastTime,\n                currentDropped = dropped - this._lastDroppedFrames,\n                currentDecoded = decoded - this._lastDecodedFrames,\n                droppedFPS = 0,\n                decodedFPS = 0;\n            if (this._lastTime) {\n                droppedFPS = parseFloat((1000 * currentDropped / currentPeriod).toFixed(2)),\n                    decodedFPS = parseFloat((1000 * currentDecoded / currentPeriod).toFixed(2));\n            }\n            this._decoded = this._decoded += currentDecoded;\n            this._dropped = this._dropped += currentDropped;\n            this._lastTime = currentTime;\n            this._lastDroppedFrames = dropped;\n            this._lastDecodedFrames = decoded;\n\n            info = {\n                decoded: this._decoded,\n                dropped: this._dropped,\n                decodedFPS,\n                droppedFPS\n            };\n        }\n        this._lastTime = currentTime;\n        return info;\n    }\n}\n\nexport default FPS;\n","const RECORD_NUM_LIMIT = 10;\nconst RECORD_DOWNLOAD_NUM_LIMIT = 200;\nconst RECORD_SEGMRNT_NUM_LIMIT = 100;\n\ntype StreamQOS = {\n    index: number;\n    startPos: number;\n    url: string;\n    bitrate: number;\n    mediaInfo?: any;\n    traffic: number;\n    loadTimeCost: number;\n    keyFrame: number;\n    videoDataRate: number;\n    audioDataRate: number;\n    segments: Partial<Record<string, { duration: number; dts: number; len: number }[]>>;\n};\ntype DownloadLog = {\n    byteLength: number;\n    timeCost: number;\n    ts: number;\n};\ntype QOS = {\n    traffic: number;\n    streams: StreamQOS[];\n    download: DownloadLog[];\n};\n\n/**\n * 监测流下载、remux质量信息\n */\nclass StreamMonitor {\n    private _qos!: QOS;\n    constructor() {\n        this.reset();\n    }\n\n    /**\n     * 重置状态\n     */\n    public reset() {\n        this._qos = {\n            traffic: 0,\n            streams: [],\n            download: []\n        };\n    }\n\n    /**\n     * 收到关键帧\n     */\n    public onKeyFrame() {\n        this._qos.streams[this._qos.streams.length - 1].keyFrame++;\n    }\n\n    /**\n     * 开始加载新流，增加一调流记录\n     * @param index 流id\n     * @param startPos 流开始位置\n     * @param url 流地址\n     * @param bitrate 流码率\n     */\n    public onStreamOpen(index: number, startPos: number, url: string, bitrate: number): void {\n        if (this._qos.streams.length > RECORD_NUM_LIMIT) {\n            this._qos.streams.shift();\n        }\n        this._qos.streams.push({\n            index,\n            startPos,\n            url,\n            bitrate,\n            traffic: 0,\n            loadTimeCost: 0,\n            keyFrame: 0,\n            videoDataRate: 0,\n            audioDataRate: 0,\n            segments: {}\n        });\n    }\n\n    /**\n     * 收到媒体信息，解完音视频头之后\n     * @param data 媒体信息\n     */\n    public onMediaInfo(data: any) {\n        const info = this.loadingInfo;\n        if (info) {\n            info.mediaInfo = Object.assign({}, data);\n        }\n    }\n\n    /**\n     * 数据下载相关信息\n     * @param data 下载信息\n     */\n    public onDataReceive(data: { byteLength: number; timeCost: number; ts: number }): void {\n        this._qos.traffic += data.byteLength;\n        const log = this._qos.download;\n        if (log.length > RECORD_DOWNLOAD_NUM_LIMIT) {\n            log.pop();\n        }\n        log.unshift(data);\n        const info = this._qos.streams[this._qos.streams.length - 1];\n        info.traffic += data.byteLength;\n        info.loadTimeCost += data.timeCost;\n    }\n\n    public onMediaSegment(data: {\n        type: string;\n        duration: number;\n        dts: number;\n        byteLength: number;\n        framesInfo: any[];\n    }): void {\n        const qos = this._qos;\n        const stream = qos.streams[qos.streams.length - 1];\n        const log = stream.segments[data.type] || [];\n        stream.segments[data.type] = log;\n        log.push({ duration: data.duration, dts: data.dts, len: data.byteLength });\n\n        // datarate\n        if (log.length > RECORD_SEGMRNT_NUM_LIMIT) {\n            log.shift();\n        }\n        let duration = 0;\n        let totalLen = 0;\n        for (let i = 0; i < log.length; i++) {\n            totalLen += log[i].len;\n            duration += log[i].duration;\n        }\n        if (duration > 0) {\n            if (data.type === 'video') {\n                stream.videoDataRate = Math.round(totalLen * 8 / duration);\n            } else if (data.type === 'audio') {\n                stream.audioDataRate = Math.round(totalLen * 8 / duration);\n            }\n        }\n    }\n\n    /**\n     * 获取指定位置的流质量信息\n     * @param sec 视频时间轴时间（毫秒）\n     */\n    public getInfoByTime(sec: number): StreamQOS | null {\n        for (let i = this._qos.streams.length - 1; i >= 0; i--) {\n            if (this._qos.streams[i].startPos < sec) {\n                return this._qos.streams[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 更新当前下载流的开始时间\n     * @param sec 时间（毫秒）\n     */\n    public updateStartPos(sec: number): void {\n        if (this._qos.streams.length) {\n            this._qos.streams[this._qos.streams.length - 1].startPos = sec;\n        }\n    }\n\n    /**\n     * 获取当前正在加载的流质量信息\n     */\n    public get loadingInfo(): StreamQOS | null {\n        if (this._qos.streams.length) {\n            return this._qos.streams[this._qos.streams.length - 1];\n        }\n        return null;\n    }\n\n    /**\n     * 当前下载速度\n     */\n    public get downloadSpeed() {\n        const qos = this._qos;\n        const tsEnd = performance.now();\n        let len = 0,\n            timeCost = 0;\n        for (let i = 0; i < qos.download.length; i++) {\n            if (qos.download[i].ts > tsEnd - 1000) {\n                len += qos.download[i].byteLength;\n                timeCost += qos.download[i].timeCost;\n            } else {\n                break;\n            }\n        }\n        return Math.round(len / timeCost * 1000) || 0;\n    }\n\n    /**\n     * 当前加载流信息\n     */\n    public get mediaInfo(): any {\n        if (this._qos.streams.length) {\n            return this._qos.streams[this._qos.streams.length - 1].mediaInfo;\n        }\n        return null;\n    }\n\n    /**\n     * 当前加载流视频视频码率\n     */\n    public get videoDataRate(): number {\n        if (this._qos.streams.length) {\n            return this._qos.streams[this._qos.streams.length - 1].videoDataRate;\n        }\n        return 0;\n    }\n\n    /**\n     * 当前加载流视频音频码率\n     */\n    public get audioDataRate(): number {\n        if (this._qos.streams.length) {\n            return this._qos.streams[this._qos.streams.length - 1].audioDataRate;\n        }\n        return 0;\n    }\n\n    /**\n     * 当前加载流视频码率\n     */\n    public get bitrate(): number {\n        if (this._qos.streams.length) {\n            return this._qos.streams[this._qos.streams.length - 1].bitrate;\n        }\n        return 0;\n    }\n    /**\n     * 下载数据量（字节）\n     */\n    public get traffic(): number {\n        return this._qos.traffic;\n    }\n    /**\n     * 下载，remux质量数据\n     */\n    public get data(): QOS {\n        return this._qos;\n    }\n}\n\nexport { StreamMonitor };\n\n","import { EventEmitter } from 'events';\nimport LasEvents from '../core/events';\nimport Media from '../core/media';\nimport { REPORT_TYPES } from '../core/report-types';\nimport { getNewMonitorData, MonitorData } from '../types/monitor-data';\nimport FPS from './fps';\nimport { StreamMonitor } from './stream-monitor';\n\nconst HEARTBEAT_INTERVAL = 1000;\n\n/**\n * 播放日志处理。收集播放器事件，集中处理\n */\nclass Monitor extends EventEmitter {\n    private _media: Media;\n    private _fps?: FPS;\n    private _data!: MonitorData;\n    private _playing: boolean = false;\n    private _sm: StreamMonitor;\n    private _hbTimer: any;\n\n    constructor(media: Media) {\n        super();\n        this._sm = new StreamMonitor();\n        this._media = media;\n        this.reset();\n    }\n\n    /**\n     * 重置状态\n     */\n    public reset(): void {\n        this._data = getNewMonitorData();\n        this._sm.reset();\n        if (this._fps) {\n            this._fps.reset();\n        }\n        this._refresh();\n    }\n\n    /**\n     * 记录事件及对应的数据\n     * @param {object} event 事件数据\n     * @param {string} type 事件类型\n     */\n    public onReport(event: any): void {\n        event.ts = event.ts || performance.now();\n        const data = this._data;\n        switch (event.type) {\n            case REPORT_TYPES.LOADER_CHUNK_ARRIVAL:\n                data.downloadedBytes += event.byteLength;\n                this._sm.onDataReceive(event);\n                break;\n            case REPORT_TYPES.START_LOAD_STREAM:\n                this._sm.onStreamOpen(event.index || 0, event.sync, event.url, event.bitrate);\n                break;\n            case REPORT_TYPES.KEY_FRAME:\n                this._sm.onKeyFrame();\n                break;\n        }\n    }\n\n    public destroy(): void {\n        if (this._fps) {\n            this._fps.destory();\n            this._fps = undefined;\n        }\n        this._stopHeartbeat();\n    }\n\n    public onLoad(): void {\n        this._startHeartbeat();\n        if (this._media.video) {\n            this._fps = new FPS();\n            this._fps.attachMedia(this._media.video);\n        }\n    }\n\n    public onSegmentInit(data: any): void {\n        this._sm.onMediaInfo(data);\n    }\n\n    public onLoadeddata(): void {\n        this._onFirstFrame();\n        this._waitingEnd();\n    }\n\n    public onCanplay(): void {\n        this._onFirstFrame();\n        this._waitingEnd();\n    }\n\n    public onPlaying(): void {\n        this._playing = true;\n        this._waitingEnd();\n    }\n\n    public onEnd(): void {\n        this._waitingEnd();\n    }\n\n    public onWaiting(block: boolean): void {\n        if (this._playing && this._data.firstFrameTime && block) {\n            this._waitingStart();\n        }\n    }\n\n    public onStopLoad(): void {\n        this._stopHeartbeat();\n    }\n\n    public onSegment(data: any) {\n        this._sm.onMediaSegment(data);\n    }\n\n    public get data() {\n        return this._data;\n    }\n\n    private _refresh(): void {\n        let fps;\n        if (this._fps) {\n            fps = this._fps.checkFPSInterval();\n        }\n        const data = this._data;\n        if (fps) {\n            data.decodedFPS = fps.decodedFPS;\n            data.droppedFPS = fps.droppedFPS;\n            data.droppedFrames = fps.dropped;\n            data.decodedFrames = fps.decoded;\n        } else {\n            data.decodedFPS = data.droppedFPS = data.droppedFrames = data.decodedFrames = 0;\n        }\n    }\n\n    private _onFirstFrame(): void {\n        if (!this._data.firstFrameTime) {\n            this._data.firstFrameTime = performance.now();\n        }\n    }\n\n    private _waitingStart() {\n        if (!this._data.bufferingStartMS) {\n            this._data.blockCount++;\n            this._data.bufferingStartMS = this._data.bufferingStartMS || performance.now();\n        }\n    }\n\n    private _waitingEnd() {\n        if (this._data.bufferingStartMS) {\n            this._data.blockDuration += performance.now() - this._data.bufferingStartMS;\n        }\n        this._data.bufferingStartMS = null;\n    }\n\n    private _heartbeat = () => {\n        this._refresh();\n\n        const data = this._data;\n        const sm = this._sm;\n        const hb = {\n            totalReceive: sm.traffic,\n            speed: sm.downloadSpeed,\n            videoDataRate: sm.videoDataRate,\n            audioDataRate: sm.audioDataRate,\n            decodedFPS: data.decodedFPS,\n            droppedFPS: data.droppedFPS,\n            decodedFrames: data.decodedFrames,\n            droppedFrames: data.droppedFrames\n        };\n\n        this.emit(LasEvents.HEARTBEAT, hb);\n    }\n\n    private _startHeartbeat(): void {\n        if (!this._hbTimer) {\n            this._hbTimer = setInterval(this._heartbeat, HEARTBEAT_INTERVAL)\n        }\n    }\n\n    private _stopHeartbeat(): void {\n        if (this._hbTimer) {\n            clearInterval(this._hbTimer);\n            this._hbTimer = undefined;\n        }\n    }\n}\n\nexport default Monitor;\n","import { EventEmitter } from 'events';\nimport AbrLevel from './abr/abr-level';\nimport { ConfigHelper } from './config';\nimport { ErrorDetails, ErrorTypes } from './core/errors';\nimport LasEvents from './core/events';\nimport Media from './core/media';\nimport MSEController from './core/mse-controller';\nimport TransFlv from './core/trans-flv';\nimport { LasConfig } from './types/core';\nimport Browser from './utils/browser';\nimport { getErrorCode } from './utils/get-error-code';\nimport { isSupported } from './utils/is-supported';\nimport { Log } from './utils/log';\nimport Monitor from './monitor/monitor';\n\n// 循环计时器间隔，毫秒\nconst MAIN_TIMER_INTERVAL = 200;\n\nconst BUFFER_THRESHOLD_DEFAULT = 0.5;\nconst BUFFER_THRESHOLD_STEP = 1;\nconst BUFFER_THRESHOLD_MAX = 3.5;\n\nenum STAT {\n    NONE,\n    WAITING,\n    SEEK,\n    SELECT_BITRATE,\n    INIT\n}\n/**\n * Las controller\n * @export\n * @class Las\n */\nexport default class Las extends EventEmitter {\n    private tag: string = 'las';\n    private _config: LasConfig;\n    private _video?: HTMLVideoElement;\n    private _mse!: MSEController;\n    private _trans?: TransFlv;\n\n    private _stat: STAT = STAT.INIT;\n    private _seekOnCanplay: boolean = false;\n    private _audioCodecSwap: boolean = false;\n    private _error: any;\n    private _audioCodec: string = '';\n    private _recoverMediaErrorTime: number = 0;\n    private _mainTimer: any;\n    private _media: Media;\n\n    private _nextLevel: any[] = [];\n    private _mediaInfo: any;\n    // (秒)发生卡顿时的buffer阈值，大于该阈值认为浏览器播放卡住，并尝试进行修正\n    private _bufferThreshold: number = BUFFER_THRESHOLD_DEFAULT;\n    private _loadStopped: boolean = false;\n    private _seekOnUpdateEnd: boolean = false;\n    private _playingLevel?: number;\n    private _startLevel?: number;\n    private _monitor!: Monitor;\n\n    static isSupport(): boolean {\n        return isSupported();\n    }\n\n    static get version() {\n        return __VERSION__;\n    }\n\n\n    static get Events() {\n        return LasEvents;\n    }\n\n    static get ErrorTypes() {\n        return ErrorTypes;\n    }\n\n    static get ErrorDetails() {\n        return ErrorDetails;\n    }\n\n    constructor(config?: LasConfig) {\n        super();\n        if (!this.off) {\n            this.off = this.removeListener;\n        }\n        this._config = ConfigHelper.processConfig(config);\n        this._media = new Media();\n        if (!this._config) {\n            setTimeout(() => {\n                this._onError({\n                    type: ErrorTypes.OTHER_ERROR,\n                    details: ErrorDetails.CONFIG_ERROR,\n                    fatal: true,\n                    reason: 'config data error'\n                });\n            }, 0);\n            return;\n        }\n        if (!Las.isSupport()) {\n            setTimeout(() => {\n                this._onError({\n                    type: ErrorTypes.OTHER_ERROR,\n                    details: ErrorDetails.UNSUPPORTED,\n                    fatal: true,\n                    reason: 'unsupported'\n                });\n            }, 0);\n            return;\n        }\n        this._mainTimer = null;\n        this._stat = STAT.INIT;\n        this._startMainTimer();\n        this._initMonitor();\n        Log.i(this.tag, Las.version, this._config);\n    }\n\n    /**\n     * 绑定video并初始化MSE\n     */\n    public attachMedia(video: HTMLVideoElement): void {\n        this._video = video;\n        this._media.attachVideo(this._video);\n        this._initMSE(video);\n        this._bindVideoEvents();\n    }\n\n    /**\n     * load\n     * @param {string} src src\n     */\n    public load(src: any = undefined): void {\n        this._playingLevel = undefined;\n        this._monitor.reset();\n        if (src) {\n            ConfigHelper.setSrc(this._config, src);\n        }\n        if (!this._config.src && !this._config.manifest) {\n            this._onError({\n                type: ErrorTypes.OTHER_ERROR,\n                details: ErrorDetails.CONFIG_ERROR,\n                fatal: true,\n                reason: 'url empty'\n            });\n            return;\n        }\n        this._load();\n    }\n\n    /**\n     * 恢复播放。从暂停、停止状态恢复\n     */\n    public resume() {\n        Log.i(this.tag, 'call resume');\n        if (this._loadStopped) {\n            this._loadStopped = false;\n            this._load();\n        }\n        if (this._video && this._video.paused) {\n            this._video.play();\n        }\n    }\n\n    /**\n     * destroy\n     */\n    public destroy(): void {\n        this._stopMonitor();\n        this._stopMainTimer();\n        this._unbindVideoEvents();\n        this._stopVideo();\n    }\n\n    public refresh(): void {\n        Log.i(this.tag, 'call refresh');\n        if (this._trans && this._mse && this._video) {\n            this._startLevel = this._trans.currentLevel;\n\n            this._nextLevel = [];\n\n            this._stopVideo();\n            this._initMSE(this._video);\n\n            this._initTrans();\n            if (this._trans) {\n                this._trans.loadSource();\n            }\n\n        } else {\n            Log.v(this.tag, 'transmuxer & mediaSource not ready');\n        }\n    }\n\n    /**\n     * 停止加载，内核停止，用于直播停止\n     */\n    public stopLoad(): void {\n        Log.i(this.tag, 'call stopLoad');\n        if (this._trans) {\n            this._destroyTrans();\n            this._mse.endOfData();\n            this._loadStopped = true;\n            this._monitor.onStopLoad();\n        }\n    }\n\n    public getMediaInfo(): any {\n        return Object.assign({}, this._mediaInfo);\n    }\n\n    public get autoLevelEnabled(): boolean {\n        if (this._trans) {\n            return this._trans.autoLevelEnabled;\n        }\n        return false;\n    }\n\n    public get levels(): AbrLevel[] {\n        if (this._trans) {\n            return this._trans.levels;\n        }\n        return [];\n    }\n\n    public get nextLevel(): number {\n        if (this._trans) {\n            return this._trans.nextLevel;\n        }\n        return 0;\n    }\n\n    public set nextLevel(value: number) {\n        if (!this._verifyLevel(value) || !this._trans) {\n            this.emit(LasEvents.LEVEL_SWITCH_FAILED, { level: value });\n            return;\n        }\n        this._trans.nextLevel = value;\n    }\n\n    public get currentLevel(): number {\n        if (this._trans) {\n            return this._trans.currentLevel;\n        }\n        return 0;\n    }\n\n    public set currentLevel(value: number) {\n        if (!this._verifyLevel(value) || !this._trans) {\n            this.emit(LasEvents.LEVEL_SWITCH_FAILED, { level: value });\n            return;\n        }\n\n        if (value === -1) {\n            this._trans.nextLevel = value;\n        } else {\n            this._stat = STAT.SELECT_BITRATE;\n            this._bufferThreshold = BUFFER_THRESHOLD_DEFAULT;\n            this._seekOnCanplay = true;\n            if (this._mse) {\n                this._mse.flush();\n            }\n            this._trans.currentLevel = value;\n        }\n    }\n\n    public get startLevel(): number {\n        return typeof this._startLevel === 'undefined' ? -1 : this._startLevel;\n    }\n\n    public set startLevel(value: number) {\n        this._startLevel = value;\n    }\n\n    public get monitorData() {\n        if (this._monitor) {\n            return this._monitor.data;\n        }\n        return;\n    }\n\n    private _bindVideoEvents(): void {\n        if (this._video) {\n            this._video.addEventListener('loadeddata', this._onVideoLoadeddata);\n            this._video.addEventListener('canplay', this._onVideoCanplay);\n            this._video.addEventListener('waiting', this._onVideoWaiting);\n            this._video.addEventListener('playing', this._onVideoPlaying);\n            this._video.addEventListener('play', this._onVideoPlay);\n            this._video.addEventListener('error', this._onVideoError);\n            this._video.addEventListener('ended', this._onVideoEnded);\n        }\n    }\n\n    private _unbindVideoEvents(): void {\n        if (this._video) {\n            this._video.removeEventListener('loadeddata', this._onVideoLoadeddata);\n            this._video.removeEventListener('canplay', this._onVideoCanplay);\n            this._video.removeEventListener('waiting', this._onVideoWaiting);\n            this._video.removeEventListener('playing', this._onVideoPlaying);\n            this._video.removeEventListener('play', this._onVideoPlay);\n            this._video.removeEventListener('error', this._onVideoError);\n            this._video.removeEventListener('ended', this._onVideoEnded);\n        }\n    }\n    /**\n     * 移除mediasource事件\n     * @param {MSEController} mediaSource MSEController\n     */\n    private _unbindMediaSourceEvent(mediaSource: MSEController): void {\n        mediaSource.removeAllListeners();\n    }\n\n    private _onVideoPlay = (): void => {\n        if (!this._error) {\n            if (!this._trans) {\n                this.load();\n            }\n        }\n    };\n\n    private _onVideoEnded = (): void => {\n        this._monitor.onEnd();\n        if (this._mse) {\n            this._mse.flush();\n        }\n    };\n\n    /**\n     * new mediaSource\n     */\n    private _initMSE(video: HTMLVideoElement) {\n        this._mse = new MSEController(this._config);\n        this._mse.attach(video);\n        this._media.attachMSE(this._mse);\n\n        this._mse.on(LasEvents.ERROR, (errorMessage: any) => {\n            this._onError(errorMessage);\n        });\n        this._mse.on('updateend', () => {\n            if (this._seekOnUpdateEnd && video.buffered.length) {\n                Log.i(this.tag, 'seek on updateend');\n                this._internalSeek(video.buffered.start(0));\n                this._seekOnUpdateEnd = false;\n            }\n        });\n        this._mse.on('resetDone', () => {\n            this._seekOnUpdateEnd = true;\n        });\n    }\n\n    /**\n     * 开始加载视频\n     */\n    private _load() {\n        this._loadStopped = false;\n        this._error = false;\n        this._stat = STAT.INIT;\n        this._bufferThreshold = BUFFER_THRESHOLD_DEFAULT;\n        this._nextLevel = [];\n        this._media.reset();\n\n        this._monitor.onLoad();\n        if (this._trans) {\n            this._destroyTrans();\n        }\n        if (this._mse.hasSourceBuffer() || (this._video && this._video.error)) {\n            this._resetMSE();\n        }\n        this._initTrans();\n        if (this._trans) {\n            this._trans.loadSource();\n        }\n    }\n\n    /**\n     * reset MSE，重用\n     */\n    private _resetMSE = () => {\n        this._seekOnUpdateEnd = false;\n        if (this._video) {\n            Log.i(this.tag, 'rebuild mse');\n            URL.revokeObjectURL(this._video.src);\n            this._video.src = '';\n            this._video.removeAttribute('src');\n            this._destroyMSE();\n            this._initMSE(this._video);\n        }\n    }\n\n    private _verifyLevel(value: number): boolean {\n        return !!(this._trans &&\n            this._trans.levels.length > 0 &&\n            value < this._trans.levels.length &&\n            value >= -1 &&\n            this._video && !this._video.ended);\n    }\n\n    private _transmuxerEvent(trans: TransFlv): void {\n        const mse = this._mse;\n        trans.on(LasEvents.PARSING_DATA, data => {\n            if (mse) {\n                mse.mediaSegment(data);\n            }\n            if (this._monitor) {\n                this._monitor.onSegment({\n                    type: data.type,\n                    byteLength: data.data.byteLength,\n                    dts: Math.floor(data.startDTS * 1000),\n                    duration: Math.floor(data.duration * 1000),\n                    framesInfo: data.framesInfo\n                });\n            }\n        });\n\n        trans.on(LasEvents.PARSING_INIT_SEGMENT, data => {\n            const video = data.tracks.video,\n                audio = data.tracks.audio,\n                audiovideo = data.tracks.audiovideo;\n            const info: any = {\n                segments: [],\n                audiovideo: !!audiovideo,\n                hasVideo: !!(video || audiovideo),\n                hasAudio: !!(audio || audiovideo)\n            };\n            for (const key in data.tracks) {\n                const track = data.tracks[key];\n                Object.assign(info, track.metadata);\n                if (track.initSegment) {\n                    info.segments.push({ type: key, data: new Uint8Array(track.initSegment) });\n                }\n            }\n            info.videoCodec = video ? video.codec : null;\n            info.audioCodec = audio ? audio.codec : null;\n            this._audioCodec = data.manifestAudioCodec || info.audioCodec;\n            const mediaInfo = Object.assign({}, info);\n            delete mediaInfo.segments;\n            this._monitor.onSegmentInit(mediaInfo);\n            this.emit(LasEvents.MEDIA_INFO, mediaInfo);\n            this._mediaInfo = mediaInfo;\n            if (mse) {\n                mse.trackInfo(info);\n            }\n        });\n\n        trans.on(LasEvents.ERROR, errorMessage => {\n            this._onError(errorMessage);\n        });\n\n        trans.on(LasEvents.LOAD_END, () => {\n            if (mse) {\n                mse.endOfData();\n            }\n            this.emit(LasEvents.LOAD_END);\n        });\n        trans.on(LasEvents.LEVEL_SWITCH_FAILED, data => {\n            this.emit(LasEvents.LEVEL_SWITCH_FAILED, data);\n        });\n        trans.on(LasEvents.LEVEL_SWITCHING, data => {\n            if (!data.smooth && this._mse) {\n                this._mse.flush();\n            }\n            this.emit(LasEvents.LEVEL_SWITCHING, { level: data.level });\n            this._nextLevel = this._nextLevel\n                .sort((a, b) => {\n                    return a.startSec - b.startSec;\n                })\n                .filter(value => {\n                    return value.startSec < data.startSec;\n                });\n            this._nextLevel.push(data);\n        });\n        trans.on(LasEvents.BUFFER_FLUSHING, data => {\n            if (this._mse && this._video) {\n                this._mse.flush(data.startSec, this._video.duration);\n            }\n        });\n        trans.on(LasEvents.SCRIPT_PARSED, data => {\n            this.emit(LasEvents.SCRIPT_PARSED, data);\n        });\n        trans.on(LasEvents.MANIFEST_PARSED, data => {\n            if (typeof this._playingLevel === 'number') {\n                trans.currentLevel = this._playingLevel;\n                return;\n            }\n\n            if (typeof this._startLevel === 'number') {\n                trans.currentLevel = this._startLevel;\n            }\n            data = Object.assign({ levels: this.levels.slice(0), currentLevel: this.currentLevel }, data);\n            this._playingLevel = trans.currentLevel;\n            Log.i(this.tag, LasEvents.MANIFEST_PARSED, data);\n            this.emit(LasEvents.MANIFEST_PARSED, data);\n        });\n        trans.on(LasEvents.REPORT, data => {\n            if (this._monitor) {\n                this._monitor.onReport(data);\n            }\n        });\n    }\n\n    private _internalSeek(time: number): void {\n        if (this._video) {\n            this._video.currentTime = time;\n        }\n    }\n\n    /**\n     * Check buffer length regularly and apply various policies to avoid buffering\n     */\n    private _mainLoop = (): void => {\n        const EPS = 1e-3;\n        const video = this._video;\n\n        /**\n         * 兼容非I帧开始切片，起播位置音视频不对齐，音视频数据缺失会导致buffer不连续或播放位置处于buffer外\n         * 处理方式：手动seek至buffer内\n         * 1. 忽略buffer内seek：WAITING_STAT.WAITING && !video.seeking\n         * 2. buffer外seek、切换清晰度、起播：WAITING_SEEK || WAITING_SELECT_BITRATE || WAITING_INIT\n         * 3. 无待清理buffer\n         */\n        if (video &&\n            ((this._stat === STAT.WAITING && !video.seeking) ||\n                this._stat === STAT.INIT ||\n                this._stat === STAT.SEEK ||\n                this._stat === STAT.SELECT_BITRATE) &&\n\n            this._mse &&\n            !this._mse.hasCleanUpTask() &&\n            !video.ended\n        ) {\n            const currentTime = video.currentTime;\n            const currentBuffer = this._media.currentBuffer(currentTime);\n            let jumpTo: number | undefined = undefined;\n            // 卡顿位置无buffer\n            if (!currentBuffer || currentBuffer.end - currentTime < 1) {\n                const nextBuffer = this._media.nextBuffer(currentTime);\n                if (nextBuffer) {\n                    Log.i(this.tag, 'try fix block-A');\n                    jumpTo = nextBuffer.start;\n                }\n            } else if (video.buffered.length > 1 && currentBuffer.end - currentTime > 1) {\n                // 多段buffer播放卡顿\n                Log.i(this.tag, 'try fix block-B');\n                jumpTo = currentBuffer.start;\n            }\n\n            if (jumpTo) {\n                jumpTo = jumpTo + (Browser.safari ? 0.3 : EPS);\n                this._internalSeek(jumpTo);\n                Log.i(this.tag, `jump to ${jumpTo}`);\n            }\n        }\n        if (this._nextLevel.length) {\n            this._checkLevelChange();\n        }\n    };\n\n    private _onVideoLoadeddata = (): void => {\n        Log.i(this.tag, 'loadeddata');\n        this._monitor.onLoadeddata();\n    }\n\n    /**\n     * ‘canplay’ event listener\n     */\n    private _onVideoCanplay = (): void => {\n        Log.v(this.tag, `canplay ${!!this._stat}`);\n        this._monitor.onCanplay();\n        if (this._video && this._stat !== STAT.NONE) {\n            this._stat = STAT.NONE;\n            this._detectSeekOnCanplay();\n            this._checkLevelChange();\n            if (!this._video.paused) {\n                // 兼容waiting后不触发playing\n                this._onVideoPlaying();\n            }\n        }\n    };\n\n    private _detectSeekOnCanplay(): void {\n        if (this._video && this._seekOnCanplay && this._mse && !this._mse.hasCleanUpTask()) {\n            let EPS = 1 / 30;\n            const mediaInfo = this._mediaInfo;\n            if (mediaInfo && mediaInfo.fps && mediaInfo.fps > 0) {\n                EPS = 1 / mediaInfo.fps;\n            }\n            if (this._media.isTimeinBuffered(this._video.currentTime + EPS)) {\n                Log.i(this.tag, `seek on canplay ${this._video.currentTime} + ${EPS}`);\n                this._seekOnCanplay = false;\n                this._internalSeek(this._video.currentTime + EPS);\n            }\n        }\n    }\n\n    /**\n     * 'waiting' event listener\n     */\n    private _onVideoWaiting = (): void => {\n        if (!this._video) {\n            return;\n        }\n        this._stat = this._stat || STAT.WAITING;\n        const block = !this._video.seeking && this._stat === STAT.WAITING;\n        if (block) {\n            this._bufferThreshold = Math.min(this._bufferThreshold + BUFFER_THRESHOLD_STEP, BUFFER_THRESHOLD_MAX);\n        }\n        if (block) {\n            Log.i(this.tag, 'waiting currentTime:', this._video.currentTime);\n        }\n        this._monitor.onWaiting(block);\n    };\n\n    /**\n     * 'playing' event listener\n     * 由于兼容处理，可能会重复触发，playing事件触发一次，兼容逻辑调用一次\n     */\n    private _onVideoPlaying = (): void => {\n        Log.i(this.tag, 'playing');\n        if (!this._error) {\n            this._stat = STAT.NONE;\n            this._monitor.onPlaying();\n        }\n    };\n\n    private _onVideoError = (error: any): void => {\n        Log.e(this.tag, 'video error', error);\n        if (this._error) {\n            return;\n        }\n        const now = performance.now();\n        if (!this._recoverMediaErrorTime || now - this._recoverMediaErrorTime > 3000) {\n            this._recoverMediaErrorTime = now;\n            this._config.gopRemux = true;\n            this._recoverMediaError();\n            return;\n        }\n        if (!this._audioCodecSwap && this._audioCodec) {\n            this._audioCodecSwap = true;\n            this._recoverSwapAudioCodec();\n            this._recoverMediaError();\n            return;\n        }\n\n        let reason = 'video error';\n        if (this._video && this._video.error) {\n            reason += ` code:${this._video.error.code} message:${this._video.error.message}`;\n        }\n        this._onError({\n            type: ErrorTypes.MEDIA_ERROR,\n            details: ErrorDetails.VIDEO_ERROR,\n            fatal: true,\n            reason\n        });\n    };\n\n    /**\n     * 错误处理\n     * @param {*} data 错误数据\n     */\n    private _onError(data: any): void {\n        Log.i(this.tag, `on error ${JSON.stringify(data)}`);\n        const errInfo: any = {};\n        if (data.type === ErrorTypes.NETWORK_ERROR) {\n            errInfo.statusCode = data.statusCode;\n            errInfo.url = data.url;\n        }\n        if (data.fatal) {\n            const errorCode = getErrorCode(data.details, data.reason, data.statusCode || 0);\n            this.stopLoad();\n            this._stopMainTimer();\n            if (data.details === ErrorDetails.VIDEO_ERROR || (this._video && this._video.error)) {\n                this._destroyMSE();\n            }\n            errInfo.code = errorCode;\n            errInfo.type = data.type;\n            errInfo.reason = data.reason;\n            if (!this._error) {\n                this._error = errInfo;\n                this.emit(LasEvents.ERROR, errInfo);\n            }\n        }\n    }\n\n    private _startMainTimer(): void {\n        if (this._mainTimer === null) {\n            this._mainTimer = setInterval(this._mainLoop, MAIN_TIMER_INTERVAL);\n        }\n    }\n\n    private _stopMainTimer(): void {\n        if (this._mainTimer) {\n            clearInterval(this._mainTimer);\n            this._mainTimer = null;\n        }\n    }\n\n    private _checkLevelChange(): void {\n        const d = this._nextLevel[0];\n        if (this._video && d && this._video.currentTime >= d.startSec && this._media.isTimeinBuffered(this._video.currentTime)) {\n            this.emit(LasEvents.LEVEL_SWITCHED, { level: d.level });\n            this._playingLevel = d.level;\n            this._nextLevel.shift();\n        }\n    }\n\n    private _stopVideo(): void {\n        if (this._video) {\n            URL.revokeObjectURL(this._video.src);\n            this._video.src = '';\n            this._video.removeAttribute('src');\n            this._destroyTrans();\n            this._destroyMSE();\n        }\n    }\n\n    private _destroyTrans(): void {\n        if (this._trans) {\n            this._trans.removeAllListeners();\n            this._trans.destroy();\n            this._trans = undefined;\n        }\n    }\n\n    private _destroyMSE(): void {\n        if (this._mse) {\n            this._unbindMediaSourceEvent(this._mse);\n            this._mse.destroy();\n        }\n    }\n\n    private _initTrans(): void {\n        this._trans = new TransFlv(this._config, this._media);\n        this._transmuxerEvent(this._trans);\n        this._trans.init();\n    }\n\n    private _initMonitor(): void {\n        if (!this._monitor) {\n            this._monitor = new Monitor(this._media);\n            this._monitor.on(LasEvents.HEARTBEAT, value => {\n                this.emit(LasEvents.HEARTBEAT, value);\n            })\n        }\n    }\n\n    private _stopMonitor(): void {\n        if (this._monitor) {\n            this._monitor.destroy();\n            this._monitor.removeAllListeners();\n        }\n    }\n\n    /**\n     * 解码错误时尝试更换audio codec string\n     */\n    private _recoverSwapAudioCodec(): void {\n        let audioCodec = this._audioCodec;\n        if (audioCodec.indexOf('mp4a.40.5') !== -1) {\n            audioCodec = 'mp4a.40.2';\n        } else {\n            audioCodec = 'mp4a.40.5';\n        }\n        this._config.audioCodec = audioCodec;\n        this._config.audioCodecSwap = true;\n    }\n\n    /**\n     * 恢复video error，重新绑定video，加载视频\n     */\n    private _recoverMediaError(): void {\n        if (!this._video) {\n            return;\n        }\n        this._nextLevel = [];\n\n        this._stopVideo();\n        this._initMSE(this._video);\n\n        this._initTrans();\n        if (this._trans) {\n            this._trans.loadSource();\n        }\n\n    }\n}\n","/* eslint-disable */\nexport const ObjectAssign\n    = Object.assign\n    || function assign(target, varArgs) {\n        // .length of function is 2\n\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const to = Object(target);\n\n        for (let index = 1; index < arguments.length; index++) {\n            const nextSource = arguments[index];\n\n            if (nextSource != null) {\n                // Skip over if undefined or null\n                for (const nextKey in nextSource) {\n                    // Avoid bugs when hasOwnProperty is shadowed\n                    if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n        }\n        return to;\n    };\n","/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nvar Browser: any = {};\n\nfunction detect() {\n    // modified from jquery-browser-plugin\n\n    const ua = self.navigator.userAgent.toLowerCase();\n\n    const match =\n        /(edge)\\/([\\w.]+)/.exec(ua) ||\n        /(opr)[\\/]([\\w.]+)/.exec(ua) ||\n        /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(iemobile)[\\/]([\\w.]+)/.exec(ua) ||\n        /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n        /(msie) ([\\w.]+)/.exec(ua) ||\n        (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua)) ||\n        (ua.indexOf('compatible') < 0 && /(firefox)[ \\/]([\\w.]+)/.exec(ua)) ||\n        [];\n\n    const platform_match =\n        /(ipad)/.exec(ua) ||\n        /(ipod)/.exec(ua) ||\n        /(windows phone)/.exec(ua) ||\n        /(iphone)/.exec(ua) ||\n        /(kindle)/.exec(ua) ||\n        /(android)/.exec(ua) ||\n        /(windows)/.exec(ua) ||\n        /(mac)/.exec(ua) ||\n        /(linux)/.exec(ua) ||\n        /(cros)/.exec(ua) ||\n        [];\n\n    const matched = {\n        browser: match[5] || match[3] || match[1] || '',\n        version: match[2] || match[4] || '0',\n        majorVersion: match[4] || match[2] || '0',\n        platform: platform_match[0] || ''\n    };\n\n    const browser: any = {};\n    if (matched.browser) {\n        browser[matched.browser] = true;\n\n        const versionArray = matched.majorVersion.split('.');\n        browser.version = {\n            major: parseInt(matched.majorVersion, 10),\n            string: matched.version\n        };\n        if (versionArray.length > 1) {\n            browser.version.minor = parseInt(versionArray[1], 10);\n        }\n        if (versionArray.length > 2) {\n            browser.version.build = parseInt(versionArray[2], 10);\n        }\n    }\n\n    if (matched.platform) {\n        browser[matched.platform] = true;\n    }\n\n    if (browser.chrome || browser.opr || browser.safari) {\n        browser.webkit = true;\n    }\n\n    // MSIE. IE11 has 'rv' identifer\n    if (browser.rv || browser.iemobile) {\n        if (browser.rv) {\n            delete browser.rv;\n        }\n        const msie = 'msie';\n        matched.browser = msie;\n        browser[msie] = true;\n    }\n\n    // Microsoft Edge\n    if (browser.edge) {\n        delete browser.edge;\n        const msedge = 'msedge';\n        matched.browser = msedge;\n        browser[msedge] = true;\n    }\n\n    // Opera 15+\n    if (browser.opr) {\n        const opera = 'opera';\n        matched.browser = opera;\n        browser[opera] = true;\n    }\n\n    // Stock android browsers are marked as Safari\n    if (browser.safari && browser.android) {\n        const android = 'android';\n        matched.browser = android;\n        browser[android] = true;\n    }\n\n    browser.name = matched.browser;\n    browser.platform = matched.platform;\n\n    for (const key in Browser as any) {\n        if (Browser.hasOwnProperty(key)) {\n            delete Browser[key];\n        }\n    }\n    Browser = browser;\n    // Object.assign(Browser, browser);\n}\n\ndetect();\n\nexport default Browser;\n","const GLOBAL_TAG = 'kwai-k';\nconst FORCE_GLOBAL_TAG = true;\n\n/**\n * 处理log参数\n * @param {string=} tag tag\n * @param {Array=} msg messages\n * @returns {Array} msg\n */\n/**\n * 处理log参数\n * @param tag\n * @param msg\n */\nfunction formatter(tag: string, msg: any[]): any[] {\n    if (!msg || msg.length === 0) {\n        msg = [tag];\n        tag = '';\n    }\n    tag = FORCE_GLOBAL_TAG ? GLOBAL_TAG + (tag ? '::' + tag : '') : tag || GLOBAL_TAG;\n    msg.unshift('[' + tag + '] > ');\n\n    return msg;\n}\n\nenum LOG_LEVEL {\n    LEVEL_ERROR = 'e', // 日志等级-error，只输出error日志\n    LEVEL_WARN = 'w', // 日志等级-warn，输出error，warn日志\n    LEVEL_INFO = 'i', // 日志等级-info，输出error, warn, info日志\n    LEVEL_DEBUG = 'd', // 日志等级-debug，输出error, warn, info, debug日志\n    LEVEL_VERBOSE = 'v' // 日志等级-verbose，输出error, warn, info, debug, verbose日志\n}\n\n/**\n * console日志\n * @class\n */\nclass Log {\n    public static ENABLE_ERROR: boolean = true;\n    public static ENABLE_WARN: boolean = false;\n    public static ENABLE_INFO: boolean = false;\n    public static ENABLE_DEBUG: boolean = false;\n    public static ENABLE_VERBOSE: boolean = false;\n\n    /**\n     * 设置日志输出等级\n     * @param l 日志等级\n     */\n    static level(l: LOG_LEVEL) {\n        Log.ENABLE_ERROR = Log.ENABLE_WARN = Log.ENABLE_INFO = Log.ENABLE_DEBUG = Log.ENABLE_VERBOSE = false;\n        switch (l) {\n            case LOG_LEVEL.LEVEL_WARN:\n                Log.ENABLE_ERROR = Log.ENABLE_WARN = true;\n                break;\n            case LOG_LEVEL.LEVEL_INFO:\n                Log.ENABLE_ERROR = Log.ENABLE_WARN = Log.ENABLE_INFO = true;\n                break;\n            case LOG_LEVEL.LEVEL_DEBUG:\n                Log.ENABLE_ERROR = Log.ENABLE_WARN = Log.ENABLE_INFO = Log.ENABLE_DEBUG = true;\n                break;\n            case LOG_LEVEL.LEVEL_VERBOSE:\n                Log.ENABLE_ERROR = Log.ENABLE_WARN = Log.ENABLE_INFO = Log.ENABLE_DEBUG = Log.ENABLE_VERBOSE = true;\n                break;\n            default:\n                Log.ENABLE_ERROR = true;\n                break;\n        }\n    }\n\n    /**\n     * error日志\n     * @param tag tag\n     * @param msg 日志信息\n     */\n    static e(tag: string, ...msg: any[]) {\n        if (!Log.ENABLE_ERROR) {\n            return;\n        }\n        const out: any = formatter(tag, msg);\n        (console.error || console.warn || console.log).apply(console, out);\n    }\n\n    /**\n     * warn日志\n     * @param tag tag\n     * @param msg 日志信息\n     */\n    static w(tag: string, ...msg: any[]) {\n        if (!Log.ENABLE_WARN) {\n            return;\n        }\n        const out: any = formatter(tag, msg);\n        (console.warn || console.log).apply(console, out);\n    }\n\n    /**\n     * info日志\n     * @param tag tag\n     * @param msg 日志信息\n     */\n    static i(tag: string, ...msg: any[]) {\n        if (!Log.ENABLE_INFO) {\n            return;\n        }\n        const out: any = formatter(tag, msg);\n        (console.info || console.log).apply(console, out);\n    }\n\n    /**\n     * debug日志\n     * @param tag tag\n     * @param msg 日志信息\n     */\n    static d(tag: string, ...msg: any[]) {\n        if (!Log.ENABLE_DEBUG) {\n            return;\n        }\n        const out: any = formatter(tag, msg);\n        (console.debug || console.log).apply(console, out);\n    }\n\n    /**\n     * verbose日志\n     * @param tag tag\n     * @param msg 日志信息\n     */\n    static v(tag: string, ...msg: any[]) {\n        if (!Log.ENABLE_VERBOSE) {\n            return;\n        }\n        const out: any = formatter(tag, msg);\n        console.log.apply(console, out);\n    }\n}\n\nexport { Log, LOG_LEVEL };\n"],"sourceRoot":""}